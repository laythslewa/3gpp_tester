/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Arp.h
 *
 *
 */

#ifndef Arp_H_
#define Arp_H_

#include "PreemptionCapability.h"
#include "PreemptionVulnerability.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class Arp {
public:
  Arp();
  virtual ~Arp();

  void validate();

  /////////////////////////////////////////////
  /// Arp members

  /// <summary>
  /// nullable true shall not be used for this attribute. Unsigned integer
  /// indicating the ARP Priority Level (see clause 5.7.2.2 of 3GPP TS 23.501,
  /// within the range 1 to 15.Values are ordered in decreasing order of
  /// priority, i.e. with 1 as the highest priority and 15 as the lowest
  /// priority.
  /// </summary>
  int32_t getPriorityLevel() const;
  void setPriorityLevel(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  PreemptionCapability getPreemptCap() const;
  void setPreemptCap(PreemptionCapability const &value);
  /// <summary>
  ///
  /// </summary>
  PreemptionVulnerability getPreemptVuln() const;
  void setPreemptVuln(PreemptionVulnerability const &value);

  friend void to_json(nlohmann::json &j, const Arp &o);
  friend void from_json(const nlohmann::json &j, Arp &o);

protected:
  int32_t m_PriorityLevel;

  PreemptionCapability m_PreemptCap;

  PreemptionVulnerability m_PreemptVuln;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Arp_H_ */
