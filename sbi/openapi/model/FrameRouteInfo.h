/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * FrameRouteInfo.h
 *
 *
 */

#ifndef FrameRouteInfo_H_
#define FrameRouteInfo_H_

#include "Ipv6Prefix.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class FrameRouteInfo {
public:
  FrameRouteInfo();
  virtual ~FrameRouteInfo();

  void validate();

  /////////////////////////////////////////////
  /// FrameRouteInfo members

  /// <summary>
  /// String identifying a IPv4 address mask formatted in the \&quot;dotted
  /// decimal\&quot; notation as defined in RFC 1166.
  /// </summary>
  std::string getIpv4Mask() const;
  void setIpv4Mask(std::string const &value);
  bool ipv4MaskIsSet() const;
  void unsetIpv4Mask();
  /// <summary>
  ///
  /// </summary>
  Ipv6Prefix getIpv6Prefix() const;
  void setIpv6Prefix(Ipv6Prefix const &value);
  bool ipv6PrefixIsSet() const;
  void unsetIpv6Prefix();

  friend void to_json(nlohmann::json &j, const FrameRouteInfo &o);
  friend void from_json(const nlohmann::json &j, FrameRouteInfo &o);

protected:
  std::string m_Ipv4Mask;
  bool m_Ipv4MaskIsSet;
  Ipv6Prefix m_Ipv6Prefix;
  bool m_Ipv6PrefixIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* FrameRouteInfo_H_ */
