/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SliceMbrRm.h
 *
 * SliceMbr with nullable&#x3D; true
 */

#ifndef SliceMbrRm_H_
#define SliceMbrRm_H_

#include "NullValue.h"
#include "SliceMbr.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// SliceMbr with nullable&#x3D; true
/// </summary>
class SliceMbrRm {
public:
  SliceMbrRm();
  virtual ~SliceMbrRm();

  void validate();

  /////////////////////////////////////////////
  /// SliceMbrRm members

  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getUplink() const;
  void setUplink(std::string const &value);
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getDownlink() const;
  void setDownlink(std::string const &value);

  friend void to_json(nlohmann::json &j, const SliceMbrRm &o);
  friend void from_json(const nlohmann::json &j, SliceMbrRm &o);

protected:
  std::string m_Uplink;

  std::string m_Downlink;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SliceMbrRm_H_ */
