/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AfEventExposureData.h
 *
 * AF Event Exposure data managed by a given NEF Instance
 */

#ifndef AfEventExposureData_H_
#define AfEventExposureData_H_

#include "AfEvent.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// AF Event Exposure data managed by a given NEF Instance
/// </summary>
class AfEventExposureData {
public:
  AfEventExposureData();
  virtual ~AfEventExposureData();

  void validate();

  /////////////////////////////////////////////
  /// AfEventExposureData members

  /// <summary>
  ///
  /// </summary>
  std::vector<AfEvent> &getAfEvents();
  void setAfEvents(std::vector<AfEvent> const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getAfIds();
  void setAfIds(std::vector<std::string> const &value);
  bool afIdsIsSet() const;
  void unsetAfIds();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getAppIds();
  void setAppIds(std::vector<std::string> const &value);
  bool appIdsIsSet() const;
  void unsetAppIds();

  friend void to_json(nlohmann::json &j, const AfEventExposureData &o);
  friend void from_json(const nlohmann::json &j, AfEventExposureData &o);

protected:
  std::vector<AfEvent> m_AfEvents;

  std::vector<std::string> m_AfIds;
  bool m_AfIdsIsSet;
  std::vector<std::string> m_AppIds;
  bool m_AppIdsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AfEventExposureData_H_ */
