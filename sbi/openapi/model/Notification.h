/**
 * Npcf_BDTPolicyControl Service API
 * PCF BDT Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Notification.h
 *
 * Describes a BDT notification.
 */

#ifndef Notification_H_
#define Notification_H_

#include "NetworkAreaInfo.h"
#include "TimeWindow.h"
#include "TransferPolicy.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Describes a BDT notification.
/// </summary>
class Notification {
public:
  Notification();
  virtual ~Notification();

  void validate();

  /////////////////////////////////////////////
  /// Notification members

  /// <summary>
  /// string identifying a BDT Reference ID as defined in subclause 5.3.3 of
  /// 3GPP TS 29.154.
  /// </summary>
  std::string getBdtRefId() const;
  void setBdtRefId(std::string const &value);
  /// <summary>
  /// Contains a list of the candidate transfer policies from which the AF may
  /// select a new transfer policy due to a network performance is below the
  /// criteria set by the operator.
  /// </summary>
  std::vector<TransferPolicy> &getCandPolicies();
  void setCandPolicies(std::vector<TransferPolicy> const &value);
  bool candPoliciesIsSet() const;
  void unsetCandPolicies();
  /// <summary>
  ///
  /// </summary>
  NetworkAreaInfo getNwAreaInfo() const;
  void setNwAreaInfo(NetworkAreaInfo const &value);
  bool nwAreaInfoIsSet() const;
  void unsetNwAreaInfo();
  /// <summary>
  ///
  /// </summary>
  TimeWindow getTimeWindow() const;
  void setTimeWindow(TimeWindow const &value);
  bool timeWindowIsSet() const;
  void unsetTimeWindow();

  friend void to_json(nlohmann::json &j, const Notification &o);
  friend void from_json(const nlohmann::json &j, Notification &o);

protected:
  std::string m_BdtRefId;

  std::vector<TransferPolicy> m_CandPolicies;
  bool m_CandPoliciesIsSet;
  NetworkAreaInfo m_NwAreaInfo;
  bool m_NwAreaInfoIsSet;
  TimeWindow m_TimeWindow;
  bool m_TimeWindowIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Notification_H_ */
