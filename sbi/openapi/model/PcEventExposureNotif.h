/**
 * Npcf_EventExposure
 * PCF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PcEventExposureNotif.h
 *
 * Represents notifications about Policy Control events related to an Individual
 * Policy Events Subscription resource.
 */

#ifndef PcEventExposureNotif_H_
#define PcEventExposureNotif_H_

#include "PcEventNotification.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents notifications about Policy Control events related to an
/// Individual Policy Events Subscription resource.
/// </summary>
class PcEventExposureNotif {
public:
  PcEventExposureNotif();
  virtual ~PcEventExposureNotif();

  void validate();

  /////////////////////////////////////////////
  /// PcEventExposureNotif members

  /// <summary>
  ///
  /// </summary>
  std::string getNotifId() const;
  void setNotifId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<PcEventNotification> &getEventNotifs();
  void setEventNotifs(std::vector<PcEventNotification> const &value);

  friend void to_json(nlohmann::json &j, const PcEventExposureNotif &o);
  friend void from_json(const nlohmann::json &j, PcEventExposureNotif &o);

protected:
  std::string m_NotifId;

  std::vector<PcEventNotification> m_EventNotifs;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PcEventExposureNotif_H_ */
