/**
 * Nucmf_Provisioning
 * UCMF_Provisioning Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "RacsFailureReport.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RacsFailureReport::RacsFailureReport() {}

RacsFailureReport::~RacsFailureReport() {}

void RacsFailureReport::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const RacsFailureReport &o) {
  j = nlohmann::json();
  j["racsIds"] = o.m_RacsIds;
  j["failureCode"] = o.m_FailureCode;
}

void from_json(const nlohmann::json &j, RacsFailureReport &o) {
  j.at("racsIds").get_to(o.m_RacsIds);
  j.at("failureCode").get_to(o.m_FailureCode);
}

std::vector<std::string> &RacsFailureReport::getRacsIds() { return m_RacsIds; }
void RacsFailureReport::setRacsIds(std::vector<std::string> const &value) {
  m_RacsIds = value;
}
RacsFailureCode RacsFailureReport::getFailureCode() const {
  return m_FailureCode;
}
void RacsFailureReport::setFailureCode(RacsFailureCode const &value) {
  m_FailureCode = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
