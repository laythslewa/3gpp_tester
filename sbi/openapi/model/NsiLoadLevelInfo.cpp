/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NsiLoadLevelInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NsiLoadLevelInfo::NsiLoadLevelInfo() {
  m_LoadLevelInformation = 0;
  m_NsiId = "";
  m_NsiIdIsSet = false;
}

NsiLoadLevelInfo::~NsiLoadLevelInfo() {}

void NsiLoadLevelInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NsiLoadLevelInfo &o) {
  j = nlohmann::json();
  j["loadLevelInformation"] = o.m_LoadLevelInformation;
  j["snssai"] = o.m_Snssai;
  if (o.nsiIdIsSet())
    j["nsiId"] = o.m_NsiId;
}

void from_json(const nlohmann::json &j, NsiLoadLevelInfo &o) {
  j.at("loadLevelInformation").get_to(o.m_LoadLevelInformation);
  j.at("snssai").get_to(o.m_Snssai);
  if (j.find("nsiId") != j.end()) {
    j.at("nsiId").get_to(o.m_NsiId);
    o.m_NsiIdIsSet = true;
  }
}

int32_t NsiLoadLevelInfo::getLoadLevelInformation() const {
  return m_LoadLevelInformation;
}
void NsiLoadLevelInfo::setLoadLevelInformation(int32_t const value) {
  m_LoadLevelInformation = value;
}
Snssai NsiLoadLevelInfo::getSnssai() const { return m_Snssai; }
void NsiLoadLevelInfo::setSnssai(Snssai const &value) { m_Snssai = value; }
std::string NsiLoadLevelInfo::getNsiId() const { return m_NsiId; }
void NsiLoadLevelInfo::setNsiId(std::string const &value) {
  m_NsiId = value;
  m_NsiIdIsSet = true;
}
bool NsiLoadLevelInfo::nsiIdIsSet() const { return m_NsiIdIsSet; }
void NsiLoadLevelInfo::unsetNsiId() { m_NsiIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
