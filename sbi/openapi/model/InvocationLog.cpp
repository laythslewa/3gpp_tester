/**
 * CAPIF_Logging_API_Invocation_API
 * API for invocation logs. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "InvocationLog.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

InvocationLog::InvocationLog() {
  m_AefId = "";
  m_ApiInvokerId = "";
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
}

InvocationLog::~InvocationLog() {}

void InvocationLog::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const InvocationLog &o) {
  j = nlohmann::json();
  j["aefId"] = o.m_AefId;
  j["apiInvokerId"] = o.m_ApiInvokerId;
  j["logs"] = o.m_Logs;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, InvocationLog &o) {
  j.at("aefId").get_to(o.m_AefId);
  j.at("apiInvokerId").get_to(o.m_ApiInvokerId);
  j.at("logs").get_to(o.m_Logs);
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
}

std::string InvocationLog::getAefId() const { return m_AefId; }
void InvocationLog::setAefId(std::string const &value) { m_AefId = value; }
std::string InvocationLog::getApiInvokerId() const { return m_ApiInvokerId; }
void InvocationLog::setApiInvokerId(std::string const &value) {
  m_ApiInvokerId = value;
}
std::vector<Log> &InvocationLog::getLogs() { return m_Logs; }
void InvocationLog::setLogs(std::vector<Log> const &value) { m_Logs = value; }
std::string InvocationLog::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void InvocationLog::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool InvocationLog::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void InvocationLog::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
