/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UpfCond.h
 *
 * Subscription to a set of NF Instances (UPFs), able to serve a certain service
 * area (i.e. SMF serving area or TAI list)
 */

#ifndef UpfCond_H_
#define UpfCond_H_

#include "Tai.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Subscription to a set of NF Instances (UPFs), able to serve a certain
/// service area (i.e. SMF serving area or TAI list)
/// </summary>
class UpfCond {
public:
  UpfCond();
  virtual ~UpfCond();

  void validate();

  /////////////////////////////////////////////
  /// UpfCond members

  /// <summary>
  ///
  /// </summary>
  std::string getConditionType() const;
  void setConditionType(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getSmfServingArea();
  void setSmfServingArea(std::vector<std::string> const &value);
  bool smfServingAreaIsSet() const;
  void unsetSmfServingArea();
  /// <summary>
  ///
  /// </summary>
  std::vector<Tai> &getTaiList();
  void setTaiList(std::vector<Tai> const &value);
  bool taiListIsSet() const;
  void unsetTaiList();

  friend void to_json(nlohmann::json &j, const UpfCond &o);
  friend void from_json(const nlohmann::json &j, UpfCond &o);

protected:
  std::string m_ConditionType;

  std::vector<std::string> m_SmfServingArea;
  bool m_SmfServingAreaIsSet;
  std::vector<Tai> m_TaiList;
  bool m_TaiListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UpfCond_H_ */
