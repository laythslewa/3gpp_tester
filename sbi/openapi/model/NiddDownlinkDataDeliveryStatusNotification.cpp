/**
 * 3gpp-nidd
 * API for non IP data delivery. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NiddDownlinkDataDeliveryStatusNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NiddDownlinkDataDeliveryStatusNotification::
    NiddDownlinkDataDeliveryStatusNotification() {
  m_NiddDownlinkDataTransfer = "";
  m_RequestedRetransmissionTime = "";
  m_RequestedRetransmissionTimeIsSet = false;
}

NiddDownlinkDataDeliveryStatusNotification::
    ~NiddDownlinkDataDeliveryStatusNotification() {}

void NiddDownlinkDataDeliveryStatusNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j,
             const NiddDownlinkDataDeliveryStatusNotification &o) {
  j = nlohmann::json();
  j["niddDownlinkDataTransfer"] = o.m_NiddDownlinkDataTransfer;
  j["deliveryStatus"] = o.m_DeliveryStatus;
  if (o.requestedRetransmissionTimeIsSet())
    j["requestedRetransmissionTime"] = o.m_RequestedRetransmissionTime;
}

void from_json(const nlohmann::json &j,
               NiddDownlinkDataDeliveryStatusNotification &o) {
  j.at("niddDownlinkDataTransfer").get_to(o.m_NiddDownlinkDataTransfer);
  j.at("deliveryStatus").get_to(o.m_DeliveryStatus);
  if (j.find("requestedRetransmissionTime") != j.end()) {
    j.at("requestedRetransmissionTime").get_to(o.m_RequestedRetransmissionTime);
    o.m_RequestedRetransmissionTimeIsSet = true;
  }
}

std::string
NiddDownlinkDataDeliveryStatusNotification::getNiddDownlinkDataTransfer()
    const {
  return m_NiddDownlinkDataTransfer;
}
void NiddDownlinkDataDeliveryStatusNotification::setNiddDownlinkDataTransfer(
    std::string const &value) {
  m_NiddDownlinkDataTransfer = value;
}
DeliveryStatus
NiddDownlinkDataDeliveryStatusNotification::getDeliveryStatus() const {
  return m_DeliveryStatus;
}
void NiddDownlinkDataDeliveryStatusNotification::setDeliveryStatus(
    DeliveryStatus const &value) {
  m_DeliveryStatus = value;
}
std::string
NiddDownlinkDataDeliveryStatusNotification::getRequestedRetransmissionTime()
    const {
  return m_RequestedRetransmissionTime;
}
void NiddDownlinkDataDeliveryStatusNotification::setRequestedRetransmissionTime(
    std::string const &value) {
  m_RequestedRetransmissionTime = value;
  m_RequestedRetransmissionTimeIsSet = true;
}
bool NiddDownlinkDataDeliveryStatusNotification::
    requestedRetransmissionTimeIsSet() const {
  return m_RequestedRetransmissionTimeIsSet;
}
void NiddDownlinkDataDeliveryStatusNotification::
    unsetRequestedRetransmissionTime() {
  m_RequestedRetransmissionTimeIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
