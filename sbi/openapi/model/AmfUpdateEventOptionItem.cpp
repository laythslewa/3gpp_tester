/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AmfUpdateEventOptionItem.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AmfUpdateEventOptionItem::AmfUpdateEventOptionItem() {
  m_Op = "";
  m_Path = "";
  m_Value = "";
  m_NotifFlagIsSet = false;
}

AmfUpdateEventOptionItem::~AmfUpdateEventOptionItem() {}

void AmfUpdateEventOptionItem::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AmfUpdateEventOptionItem &o) {
  j = nlohmann::json();
  j["op"] = o.m_Op;
  j["path"] = o.m_Path;
  j["value"] = o.m_Value;
  if (o.notifFlagIsSet())
    j["notifFlag"] = o.m_NotifFlag;
}

void from_json(const nlohmann::json &j, AmfUpdateEventOptionItem &o) {
  j.at("op").get_to(o.m_Op);
  j.at("path").get_to(o.m_Path);
  j.at("value").get_to(o.m_Value);
  if (j.find("notifFlag") != j.end()) {
    j.at("notifFlag").get_to(o.m_NotifFlag);
    o.m_NotifFlagIsSet = true;
  }
}

std::string AmfUpdateEventOptionItem::getOp() const { return m_Op; }
void AmfUpdateEventOptionItem::setOp(std::string const &value) { m_Op = value; }
std::string AmfUpdateEventOptionItem::getPath() const { return m_Path; }
void AmfUpdateEventOptionItem::setPath(std::string const &value) {
  m_Path = value;
}
std::string AmfUpdateEventOptionItem::getValue() const { return m_Value; }
void AmfUpdateEventOptionItem::setValue(std::string const &value) {
  m_Value = value;
}
NotificationFlag AmfUpdateEventOptionItem::getNotifFlag() const {
  return m_NotifFlag;
}
void AmfUpdateEventOptionItem::setNotifFlag(NotificationFlag const &value) {
  m_NotifFlag = value;
  m_NotifFlagIsSet = true;
}
bool AmfUpdateEventOptionItem::notifFlagIsSet() const {
  return m_NotifFlagIsSet;
}
void AmfUpdateEventOptionItem::unsetNotifFlag() { m_NotifFlagIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
