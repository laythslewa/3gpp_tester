/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UsageMonDataScope.h
 *
 * Contains a SNSSAI and DNN combinations to which the UsageMonData instance
 * belongs to.
 */

#ifndef UsageMonDataScope_H_
#define UsageMonDataScope_H_

#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains a SNSSAI and DNN combinations to which the UsageMonData instance
/// belongs to.
/// </summary>
class UsageMonDataScope {
public:
  UsageMonDataScope();
  virtual ~UsageMonDataScope();

  void validate();

  /////////////////////////////////////////////
  /// UsageMonDataScope members

  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getDnn();
  void setDnn(std::vector<std::string> const &value);
  bool dnnIsSet() const;
  void unsetDnn();

  friend void to_json(nlohmann::json &j, const UsageMonDataScope &o);
  friend void from_json(const nlohmann::json &j, UsageMonDataScope &o);

protected:
  Snssai m_Snssai;

  std::vector<std::string> m_Dnn;
  bool m_DnnIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UsageMonDataScope_H_ */
