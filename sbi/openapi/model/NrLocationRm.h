/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NrLocationRm.h
 *
 * This data type is defined in the same way as the \&quot;NrLocation\&quot;
 * data type, but with the OpenAPI \&quot;nullable&#x3D; true\&quot; property.
 */

#ifndef NrLocationRm_H_
#define NrLocationRm_H_

#include "GlobalRanNodeId.h"
#include "Ncgi.h"
#include "NrLocation.h"
#include "NullValue.h"
#include "Tai.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// This data type is defined in the same way as the \&quot;NrLocation\&quot;
/// data type, but with the OpenAPI \&quot;nullable&#x3D; true\&quot; property.
/// </summary>
class NrLocationRm {
public:
  NrLocationRm();
  virtual ~NrLocationRm();

  void validate();

  /////////////////////////////////////////////
  /// NrLocationRm members

  /// <summary>
  ///
  /// </summary>
  Tai getTai() const;
  void setTai(Tai const &value);
  /// <summary>
  ///
  /// </summary>
  Ncgi getNcgi() const;
  void setNcgi(Ncgi const &value);
  /// <summary>
  /// The value represents the elapsed time in minutes since the last network
  /// contact of the mobile station.  Value \&quot;0\&quot; indicates that the
  /// location information was obtained after a successful paging procedure for
  /// Active Location Retrieval when the UE is in idle mode or after a
  /// successful NG-RAN location reporting procedure with the eNB when the UE is
  /// in connected mode. Any other value than \&quot;0\&quot; indicates that the
  /// location information is the last known one. See 3GPP TS 29.002
  /// clause 17.7.8.
  /// </summary>
  int32_t getAgeOfLocationInformation() const;
  void setAgeOfLocationInformation(int32_t const value);
  bool ageOfLocationInformationIsSet() const;
  void unsetAgeOfLocationInformation();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getUeLocationTimestamp() const;
  void setUeLocationTimestamp(std::string const &value);
  bool ueLocationTimestampIsSet() const;
  void unsetUeLocationTimestamp();
  /// <summary>
  /// Refer to geographical Information. See 3GPP TS 23.032 clause 7.3.2. Only
  /// the description of an ellipsoid point with uncertainty circle is allowed
  /// to be used.
  /// </summary>
  std::string getGeographicalInformation() const;
  void setGeographicalInformation(std::string const &value);
  bool geographicalInformationIsSet() const;
  void unsetGeographicalInformation();
  /// <summary>
  /// Refers to Calling Geodetic Location. See ITU-T Recommendation Q.763 (1999)
  /// [24] clause 3.88.2. Only the description of an ellipsoid point with
  /// uncertainty circle is allowed to be used.
  /// </summary>
  std::string getGeodeticInformation() const;
  void setGeodeticInformation(std::string const &value);
  bool geodeticInformationIsSet() const;
  void unsetGeodeticInformation();
  /// <summary>
  ///
  /// </summary>
  GlobalRanNodeId getGlobalGnbId() const;
  void setGlobalGnbId(GlobalRanNodeId const &value);
  bool globalGnbIdIsSet() const;
  void unsetGlobalGnbId();

  friend void to_json(nlohmann::json &j, const NrLocationRm &o);
  friend void from_json(const nlohmann::json &j, NrLocationRm &o);

protected:
  Tai m_Tai;

  Ncgi m_Ncgi;

  int32_t m_AgeOfLocationInformation;
  bool m_AgeOfLocationInformationIsSet;
  std::string m_UeLocationTimestamp;
  bool m_UeLocationTimestampIsSet;
  std::string m_GeographicalInformation;
  bool m_GeographicalInformationIsSet;
  std::string m_GeodeticInformation;
  bool m_GeodeticInformationIsSet;
  GlobalRanNodeId m_GlobalGnbId;
  bool m_GlobalGnbIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NrLocationRm_H_ */
