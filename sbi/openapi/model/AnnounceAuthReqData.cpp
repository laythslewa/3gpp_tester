/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AnnounceAuthReqData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AnnounceAuthReqData::AnnounceAuthReqData() {
  m_OpenDiscDataIsSet = false;
  m_RestrictedDiscDataIsSet = false;
}

AnnounceAuthReqData::~AnnounceAuthReqData() {}

void AnnounceAuthReqData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AnnounceAuthReqData &o) {
  j = nlohmann::json();
  j["discType"] = o.m_DiscType;
  if (o.openDiscDataIsSet())
    j["openDiscData"] = o.m_OpenDiscData;
  if (o.restrictedDiscDataIsSet())
    j["restrictedDiscData"] = o.m_RestrictedDiscData;
}

void from_json(const nlohmann::json &j, AnnounceAuthReqData &o) {
  j.at("discType").get_to(o.m_DiscType);
  if (j.find("openDiscData") != j.end()) {
    j.at("openDiscData").get_to(o.m_OpenDiscData);
    o.m_OpenDiscDataIsSet = true;
  }
  if (j.find("restrictedDiscData") != j.end()) {
    j.at("restrictedDiscData").get_to(o.m_RestrictedDiscData);
    o.m_RestrictedDiscDataIsSet = true;
  }
}

DiscoveryType AnnounceAuthReqData::getDiscType() const { return m_DiscType; }
void AnnounceAuthReqData::setDiscType(DiscoveryType const &value) {
  m_DiscType = value;
}
AnnounceDiscDataForOpen AnnounceAuthReqData::getOpenDiscData() const {
  return m_OpenDiscData;
}
void AnnounceAuthReqData::setOpenDiscData(
    AnnounceDiscDataForOpen const &value) {
  m_OpenDiscData = value;
  m_OpenDiscDataIsSet = true;
}
bool AnnounceAuthReqData::openDiscDataIsSet() const {
  return m_OpenDiscDataIsSet;
}
void AnnounceAuthReqData::unsetOpenDiscData() { m_OpenDiscDataIsSet = false; }
AnnounceDiscDataForRestricted
AnnounceAuthReqData::getRestrictedDiscData() const {
  return m_RestrictedDiscData;
}
void AnnounceAuthReqData::setRestrictedDiscData(
    AnnounceDiscDataForRestricted const &value) {
  m_RestrictedDiscData = value;
  m_RestrictedDiscDataIsSet = true;
}
bool AnnounceAuthReqData::restrictedDiscDataIsSet() const {
  return m_RestrictedDiscDataIsSet;
}
void AnnounceAuthReqData::unsetRestrictedDiscData() {
  m_RestrictedDiscDataIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
