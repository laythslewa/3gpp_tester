/**
 * Namf_MT
 * AMF Mobile Terminated Service Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UeContextDocumentApi.h
 *
 *
 */

#ifndef UeContextDocumentApi_H_
#define UeContextDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "Guami.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include "UeContextInfo.h"
#include "UeContextInfoClass.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class UeContextDocumentApi {
public:
  UeContextDocumentApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~UeContextDocumentApi() {}
  void init();

  const std::string base = "/namf-mt/v1";

private:
  void setupRoutes();

  void provide_domain_selection_info_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void ue_context_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Namf_MT Provide Domain Selection Info service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueContextId">UE Context Identifier</param>
  /// <param name="infoClass">UE Context Information Class (optional, default to
  /// UeContextInfoClass())</param> <param name="supportedFeatures">Supported
  /// Features (optional, default to &quot;&quot;)</param> <param
  /// name="oldGuami">Old GUAMI (optional, default to Guami())</param>
  virtual void provide_domain_selection_info(
      const std::string &ueContextId,
      const Pistache::Optional<UeContextInfoClass> &infoClass,
      const Pistache::Optional<std::string> &supportedFeatures,
      const Pistache::Optional<Guami> &oldGuami,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UeContextDocumentApi_H_ */
