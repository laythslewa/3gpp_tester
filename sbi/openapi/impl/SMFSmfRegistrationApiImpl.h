/**
 * Nudm_UECM
 * Nudm Context Management Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * SMFSmfRegistrationApiImpl.h
 *
 *
 */

#ifndef SMF_SMF_REGISTRATION_API_IMPL_H_
#define SMF_SMF_REGISTRATION_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <SMFSmfRegistrationApi.h>

#include <pistache/optional.h>

#include "ProblemDetails.h"
#include "SmfRegistration.h"
#include "SmfRegistrationInfo.h"
#include "Snssai.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class SMFSmfRegistrationApiImpl
    : public org::openapitools::server::api::SMFSmfRegistrationApi {
public:
  SMFSmfRegistrationApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~SMFSmfRegistrationApiImpl() {}

  void
  get_smf_registration(const std::string &ueId,
                       const Pistache::Optional<Snssai> &singleNssai,
                       const Pistache::Optional<std::string> &dnn,
                       const Pistache::Optional<std::string> &supportedFeatures,
                       Pistache::Http::ResponseWriter &response);
  void registration(const std::string &ueId, const int32_t &pduSessionId,
                    const SmfRegistration &smfRegistration,
                    Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif