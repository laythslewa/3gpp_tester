/**
 * VAE_MessageDelivery
 * API for VAE Message Delivery Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IndividualDownlinkMessageDeliveryDocumentApi.h
 *
 *
 */

#ifndef IndividualDownlinkMessageDeliveryDocumentApi_H_
#define IndividualDownlinkMessageDeliveryDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "DownlinkMessageDeliveryData.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualDownlinkMessageDeliveryDocumentApi {
public:
  IndividualDownlinkMessageDeliveryDocumentApi(
      std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IndividualDownlinkMessageDeliveryDocumentApi() {}
  void init();

  const std::string base = "/vae-message-delivery/v1";

private:
  void setupRoutes();

  void read_individual_downlink_message_delivery_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void individual_downlink_message_delivery_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// VAE Message delivery resource Read service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">String identifying a subscription to the
  /// Individual Message Delivery Subscription</param> <param
  /// name="dlDeliveryId">Identifier of a downlink messge delivery
  /// resource</param>
  virtual void read_individual_downlink_message_delivery(
      const std::string &subscriptionId, const std::string &dlDeliveryId,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IndividualDownlinkMessageDeliveryDocumentApi_H_ */
