/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ChfInfo.h
 *
 * Information of a CHF NF Instance
 */

#ifndef ChfInfo_H_
#define ChfInfo_H_

#include "IdentityRange.h"
#include "PlmnRange.h"
#include "SupiRange.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Information of a CHF NF Instance
/// </summary>
class ChfInfo {
public:
  ChfInfo();
  virtual ~ChfInfo();

  void validate();

  /////////////////////////////////////////////
  /// ChfInfo members

  /// <summary>
  ///
  /// </summary>
  std::vector<SupiRange> &getSupiRangeList();
  void setSupiRangeList(std::vector<SupiRange> const &value);
  bool supiRangeListIsSet() const;
  void unsetSupiRangeList();
  /// <summary>
  ///
  /// </summary>
  std::vector<IdentityRange> &getGpsiRangeList();
  void setGpsiRangeList(std::vector<IdentityRange> const &value);
  bool gpsiRangeListIsSet() const;
  void unsetGpsiRangeList();
  /// <summary>
  ///
  /// </summary>
  std::vector<PlmnRange> &getPlmnRangeList();
  void setPlmnRangeList(std::vector<PlmnRange> const &value);
  bool plmnRangeListIsSet() const;
  void unsetPlmnRangeList();
  /// <summary>
  /// Identifier of a group of NFs.
  /// </summary>
  std::string getGroupId() const;
  void setGroupId(std::string const &value);
  bool groupIdIsSet() const;
  void unsetGroupId();
  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getPrimaryChfInstance() const;
  void setPrimaryChfInstance(std::string const &value);
  bool primaryChfInstanceIsSet() const;
  void unsetPrimaryChfInstance();
  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getSecondaryChfInstance() const;
  void setSecondaryChfInstance(std::string const &value);
  bool secondaryChfInstanceIsSet() const;
  void unsetSecondaryChfInstance();

  friend void to_json(nlohmann::json &j, const ChfInfo &o);
  friend void from_json(const nlohmann::json &j, ChfInfo &o);

protected:
  std::vector<SupiRange> m_SupiRangeList;
  bool m_SupiRangeListIsSet;
  std::vector<IdentityRange> m_GpsiRangeList;
  bool m_GpsiRangeListIsSet;
  std::vector<PlmnRange> m_PlmnRangeList;
  bool m_PlmnRangeListIsSet;
  std::string m_GroupId;
  bool m_GroupIdIsSet;
  std::string m_PrimaryChfInstance;
  bool m_PrimaryChfInstanceIsSet;
  std::string m_SecondaryChfInstance;
  bool m_SecondaryChfInstanceIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ChfInfo_H_ */
