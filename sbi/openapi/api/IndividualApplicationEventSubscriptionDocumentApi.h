/**
 * Naf_EventExposure
 * AF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IndividualApplicationEventSubscriptionDocumentApi.h
 *
 *
 */

#ifndef IndividualApplicationEventSubscriptionDocumentApi_H_
#define IndividualApplicationEventSubscriptionDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "AfEventExposureSubsc.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualApplicationEventSubscriptionDocumentApi {
public:
  IndividualApplicationEventSubscriptionDocumentApi(
      std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IndividualApplicationEventSubscriptionDocumentApi() {}
  void init();

  const std::string base = "/naf-eventexposure/v1";

private:
  void setupRoutes();

  void delete_af_event_exposure_subsc_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void
  get_af_event_exposure_subsc_handler(const Pistache::Rest::Request &request,
                                      Pistache::Http::ResponseWriter response);
  void
  put_af_event_exposure_subsc_handler(const Pistache::Rest::Request &request,
                                      Pistache::Http::ResponseWriter response);
  void individual_application_event_subscription_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Cancels an existing Individual Application Event Subscription
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">Application Event Subscription ID</param>
  virtual void
  delete_af_event_exposure_subsc(const std::string &subscriptionId,
                                 Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Reads an existing Individual Application Event Subscription
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">Application Event Subscription ID</param>
  /// <param name="suppFeat">Features supported by the NF service consumer
  /// (optional, default to &quot;&quot;)</param>
  virtual void
  get_af_event_exposure_subsc(const std::string &subscriptionId,
                              const Pistache::Optional<std::string> &suppFeat,
                              Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Modifies an existing Individual Application Event Subscription
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">Application Event Subscription ID</param>
  /// <param name="afEventExposureSubsc"></param>
  virtual void
  put_af_event_exposure_subsc(const std::string &subscriptionId,
                              const AfEventExposureSubsc &afEventExposureSubsc,
                              Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IndividualApplicationEventSubscriptionDocumentApi_H_ */
