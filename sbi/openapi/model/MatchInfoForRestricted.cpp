/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "MatchInfoForRestricted.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

MatchInfoForRestricted::MatchInfoForRestricted() {
  m_Supi = "";
  m_Rpauid = "";
  m_TargetPduid = "";
  m_ProseRestrictedCode = "";
}

MatchInfoForRestricted::~MatchInfoForRestricted() {}

void MatchInfoForRestricted::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const MatchInfoForRestricted &o) {
  j = nlohmann::json();
  j["supi"] = o.m_Supi;
  j["rpauid"] = o.m_Rpauid;
  j["targetPduid"] = o.m_TargetPduid;
  j["proseRestrictedCode"] = o.m_ProseRestrictedCode;
}

void from_json(const nlohmann::json &j, MatchInfoForRestricted &o) {
  j.at("supi").get_to(o.m_Supi);
  j.at("rpauid").get_to(o.m_Rpauid);
  j.at("targetPduid").get_to(o.m_TargetPduid);
  j.at("proseRestrictedCode").get_to(o.m_ProseRestrictedCode);
}

std::string MatchInfoForRestricted::getSupi() const { return m_Supi; }
void MatchInfoForRestricted::setSupi(std::string const &value) {
  m_Supi = value;
}
std::string MatchInfoForRestricted::getRpauid() const { return m_Rpauid; }
void MatchInfoForRestricted::setRpauid(std::string const &value) {
  m_Rpauid = value;
}
std::string MatchInfoForRestricted::getTargetPduid() const {
  return m_TargetPduid;
}
void MatchInfoForRestricted::setTargetPduid(std::string const &value) {
  m_TargetPduid = value;
}
std::string MatchInfoForRestricted::getProseRestrictedCode() const {
  return m_ProseRestrictedCode;
}
void MatchInfoForRestricted::setProseRestrictedCode(std::string const &value) {
  m_ProseRestrictedCode = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
