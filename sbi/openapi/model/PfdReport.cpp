/**
 * 3gpp-pfd-management
 * API for PFD management. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PfdReport.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PfdReport::PfdReport() {
  m_CachingTime = 0;
  m_CachingTimeIsSet = false;
  m_LocationAreaIsSet = false;
}

PfdReport::~PfdReport() {}

void PfdReport::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PfdReport &o) {
  j = nlohmann::json();
  j["externalAppIds"] = o.m_ExternalAppIds;
  j["failureCode"] = o.m_FailureCode;
  if (o.cachingTimeIsSet())
    j["cachingTime"] = o.m_CachingTime;
  if (o.locationAreaIsSet())
    j["locationArea"] = o.m_LocationArea;
}

void from_json(const nlohmann::json &j, PfdReport &o) {
  j.at("externalAppIds").get_to(o.m_ExternalAppIds);
  j.at("failureCode").get_to(o.m_FailureCode);
  if (j.find("cachingTime") != j.end()) {
    j.at("cachingTime").get_to(o.m_CachingTime);
    o.m_CachingTimeIsSet = true;
  }
  if (j.find("locationArea") != j.end()) {
    j.at("locationArea").get_to(o.m_LocationArea);
    o.m_LocationAreaIsSet = true;
  }
}

std::vector<std::string> &PfdReport::getExternalAppIds() {
  return m_ExternalAppIds;
}
void PfdReport::setExternalAppIds(std::vector<std::string> const &value) {
  m_ExternalAppIds = value;
}
FailureCode PfdReport::getFailureCode() const { return m_FailureCode; }
void PfdReport::setFailureCode(FailureCode const &value) {
  m_FailureCode = value;
}
int32_t PfdReport::getCachingTime() const { return m_CachingTime; }
void PfdReport::setCachingTime(int32_t const value) {
  m_CachingTime = value;
  m_CachingTimeIsSet = true;
}
bool PfdReport::cachingTimeIsSet() const { return m_CachingTimeIsSet; }
void PfdReport::unsetCachingTime() { m_CachingTimeIsSet = false; }
UserPlaneLocationArea PfdReport::getLocationArea() const {
  return m_LocationArea;
}
void PfdReport::setLocationArea(UserPlaneLocationArea const &value) {
  m_LocationArea = value;
  m_LocationAreaIsSet = true;
}
bool PfdReport::locationAreaIsSet() const { return m_LocationAreaIsSet; }
void PfdReport::unsetLocationArea() { m_LocationAreaIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
