/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NefEventExposureNotif.h
 *
 * Represents notifications on network exposure event(s) that occurred for an
 * Individual Network Exposure Event Subscription resource.
 */

#ifndef NefEventExposureNotif_H_
#define NefEventExposureNotif_H_

#include "NefEventNotification.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents notifications on network exposure event(s) that occurred for an
/// Individual Network Exposure Event Subscription resource.
/// </summary>
class NefEventExposureNotif {
public:
  NefEventExposureNotif();
  virtual ~NefEventExposureNotif();

  void validate();

  /////////////////////////////////////////////
  /// NefEventExposureNotif members

  /// <summary>
  ///
  /// </summary>
  std::string getNotifId() const;
  void setNotifId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<NefEventNotification> &getEventNotifs();
  void setEventNotifs(std::vector<NefEventNotification> const &value);

  friend void to_json(nlohmann::json &j, const NefEventExposureNotif &o);
  friend void from_json(const nlohmann::json &j, NefEventExposureNotif &o);

protected:
  std::string m_NotifId;

  std::vector<NefEventNotification> m_EventNotifs;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NefEventExposureNotif_H_ */
