/**
 * M1_ContentHostingProvisioning
 * 5GMS AF M1 Content Hosting Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DistributionConfiguration_UrlSignature.h
 *
 *
 */

#ifndef DistributionConfiguration_UrlSignature_H_
#define DistributionConfiguration_UrlSignature_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class DistributionConfiguration_UrlSignature {
public:
  DistributionConfiguration_UrlSignature();
  virtual ~DistributionConfiguration_UrlSignature();

  void validate();

  /////////////////////////////////////////////
  /// DistributionConfiguration_UrlSignature members

  /// <summary>
  ///
  /// </summary>
  std::string getUrlPattern() const;
  void setUrlPattern(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getTokenName() const;
  void setTokenName(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getPassphraseName() const;
  void setPassphraseName(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getPassphrase() const;
  void setPassphrase(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getTokenExpiryName() const;
  void setTokenExpiryName(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  bool isUseIPAddress() const;
  void setUseIPAddress(bool const value);
  /// <summary>
  ///
  /// </summary>
  std::string getIpAddressName() const;
  void setIpAddressName(std::string const &value);
  bool ipAddressNameIsSet() const;
  void unsetIpAddressName();

  friend void to_json(nlohmann::json &j,
                      const DistributionConfiguration_UrlSignature &o);
  friend void from_json(const nlohmann::json &j,
                        DistributionConfiguration_UrlSignature &o);

protected:
  std::string m_UrlPattern;

  std::string m_TokenName;

  std::string m_PassphraseName;

  std::string m_Passphrase;

  std::string m_TokenExpiryName;

  bool m_UseIPAddress;

  std::string m_IpAddressName;
  bool m_IpAddressNameIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* DistributionConfiguration_UrlSignature_H_ */
