/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ScpDomainInfo.h
 *
 * SCP Domain specific information
 */

#ifndef ScpDomainInfo_H_
#define ScpDomainInfo_H_

#include "IpEndPoint.h"
#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// SCP Domain specific information
/// </summary>
class ScpDomainInfo {
public:
  ScpDomainInfo();
  virtual ~ScpDomainInfo();

  void validate();

  /////////////////////////////////////////////
  /// ScpDomainInfo members

  /// <summary>
  /// Fully Qualified Domain Name
  /// </summary>
  std::string getScpFqdn() const;
  void setScpFqdn(std::string const &value);
  bool scpFqdnIsSet() const;
  void unsetScpFqdn();
  /// <summary>
  ///
  /// </summary>
  std::vector<IpEndPoint> &getScpIpEndPoints();
  void setScpIpEndPoints(std::vector<IpEndPoint> const &value);
  bool scpIpEndPointsIsSet() const;
  void unsetScpIpEndPoints();
  /// <summary>
  ///
  /// </summary>
  std::string getScpPrefix() const;
  void setScpPrefix(std::string const &value);
  bool scpPrefixIsSet() const;
  void unsetScpPrefix();
  /// <summary>
  /// Port numbers for HTTP and HTTPS. The key of the map shall be
  /// \&quot;http\&quot; or \&quot;https\&quot;
  /// </summary>
  std::map<std::string, int32_t> &getScpPorts();
  void setScpPorts(std::map<std::string, int32_t> const value);
  bool scpPortsIsSet() const;
  void unsetScpPorts();

  friend void to_json(nlohmann::json &j, const ScpDomainInfo &o);
  friend void from_json(const nlohmann::json &j, ScpDomainInfo &o);

protected:
  std::string m_ScpFqdn;
  bool m_ScpFqdnIsSet;
  std::vector<IpEndPoint> m_ScpIpEndPoints;
  bool m_ScpIpEndPointsIsSet;
  std::string m_ScpPrefix;
  bool m_ScpPrefixIsSet;
  std::map<std::string, int32_t> m_ScpPorts;
  bool m_ScpPortsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ScpDomainInfo_H_ */
