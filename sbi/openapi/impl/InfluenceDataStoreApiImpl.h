/**
 * Unified Data Repository Service API file for Application Data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * InfluenceDataStoreApiImpl.h
 *
 *
 */

#ifndef INFLUENCE_DATA_STORE_API_IMPL_H_
#define INFLUENCE_DATA_STORE_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <InfluenceDataStoreApi.h>

#include <pistache/optional.h>

#include "ProblemDetails.h"
#include "Snssai.h"
#include "TrafficInfluData.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class InfluenceDataStoreApiImpl
    : public org::openapitools::server::api::InfluenceDataStoreApi {
public:
  InfluenceDataStoreApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~InfluenceDataStoreApiImpl() {}

  void read_influence_data(
      const Pistache::Optional<std::vector<std::string>> &influenceIds,
      const Pistache::Optional<std::vector<std::string>> &dnns,
      const Pistache::Optional<std::vector<Snssai>> &snssais,
      const Pistache::Optional<std::vector<std::string>> &internalGroupIds,
      const Pistache::Optional<std::vector<std::string>> &supis,
      const Pistache::Optional<std::string> &suppFeat,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif