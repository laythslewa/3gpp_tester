/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * VsmfUpdateError.h
 *
 * Error within Update Response from V-SMF, or from I-SMF to SMF
 */

#ifndef VsmfUpdateError_H_
#define VsmfUpdateError_H_

#include "Arp.h"
#include "N4Information.h"
#include "NgApCause.h"
#include "ProblemDetails.h"
#include "RefToBinaryData.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Error within Update Response from V-SMF, or from I-SMF to SMF
/// </summary>
class VsmfUpdateError {
public:
  VsmfUpdateError();
  virtual ~VsmfUpdateError();

  void validate();

  /////////////////////////////////////////////
  /// VsmfUpdateError members

  /// <summary>
  ///
  /// </summary>
  ProblemDetails getError() const;
  void setError(ProblemDetails const &value);
  /// <summary>
  /// Procedure Transaction Identifier
  /// </summary>
  int32_t getPti() const;
  void setPti(int32_t const value);
  bool ptiIsSet() const;
  void unsetPti();
  /// <summary>
  ///
  /// </summary>
  std::string getN1smCause() const;
  void setN1smCause(std::string const &value);
  bool n1smCauseIsSet() const;
  void unsetN1smCause();
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getN1SmInfoFromUe() const;
  void setN1SmInfoFromUe(RefToBinaryData const &value);
  bool n1SmInfoFromUeIsSet() const;
  void unsetN1SmInfoFromUe();
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getUnknownN1SmInfo() const;
  void setUnknownN1SmInfo(RefToBinaryData const &value);
  bool unknownN1SmInfoIsSet() const;
  void unsetUnknownN1SmInfo();
  /// <summary>
  ///
  /// </summary>
  std::vector<Arp> &getFailedToAssignEbiList();
  void setFailedToAssignEbiList(std::vector<Arp> const &value);
  bool failedToAssignEbiListIsSet() const;
  void unsetFailedToAssignEbiList();
  /// <summary>
  ///
  /// </summary>
  NgApCause getNgApCause() const;
  void setNgApCause(NgApCause const &value);
  bool ngApCauseIsSet() const;
  void unsetNgApCause();
  /// <summary>
  /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
  /// </summary>
  int32_t getR5gMmCauseValue() const;
  void setR5gMmCauseValue(int32_t const value);
  bool r5gMmCauseValueIsSet() const;
  void unsetr_5gMmCauseValue();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getRecoveryTime() const;
  void setRecoveryTime(std::string const &value);
  bool recoveryTimeIsSet() const;
  void unsetRecoveryTime();
  /// <summary>
  ///
  /// </summary>
  N4Information getN4Info() const;
  void setN4Info(N4Information const &value);
  bool n4InfoIsSet() const;
  void unsetN4Info();
  /// <summary>
  ///
  /// </summary>
  N4Information getN4InfoExt1() const;
  void setN4InfoExt1(N4Information const &value);
  bool n4InfoExt1IsSet() const;
  void unsetN4InfoExt1();
  /// <summary>
  ///
  /// </summary>
  N4Information getN4InfoExt2() const;
  void setN4InfoExt2(N4Information const &value);
  bool n4InfoExt2IsSet() const;
  void unsetN4InfoExt2();
  /// <summary>
  ///
  /// </summary>
  N4Information getN4InfoExt3() const;
  void setN4InfoExt3(N4Information const &value);
  bool n4InfoExt3IsSet() const;
  void unsetN4InfoExt3();

  friend void to_json(nlohmann::json &j, const VsmfUpdateError &o);
  friend void from_json(const nlohmann::json &j, VsmfUpdateError &o);

protected:
  ProblemDetails m_Error;

  int32_t m_Pti;
  bool m_PtiIsSet;
  std::string m_N1smCause;
  bool m_N1smCauseIsSet;
  RefToBinaryData m_N1SmInfoFromUe;
  bool m_N1SmInfoFromUeIsSet;
  RefToBinaryData m_UnknownN1SmInfo;
  bool m_UnknownN1SmInfoIsSet;
  std::vector<Arp> m_FailedToAssignEbiList;
  bool m_FailedToAssignEbiListIsSet;
  NgApCause m_NgApCause;
  bool m_NgApCauseIsSet;
  int32_t m_r_5gMmCauseValue;
  bool m_r_5gMmCauseValueIsSet;
  std::string m_RecoveryTime;
  bool m_RecoveryTimeIsSet;
  N4Information m_N4Info;
  bool m_N4InfoIsSet;
  N4Information m_N4InfoExt1;
  bool m_N4InfoExt1IsSet;
  N4Information m_N4InfoExt2;
  bool m_N4InfoExt2IsSet;
  N4Information m_N4InfoExt3;
  bool m_N4InfoExt3IsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* VsmfUpdateError_H_ */
