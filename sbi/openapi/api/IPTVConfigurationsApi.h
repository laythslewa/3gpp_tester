/**
 * 3gpp-iptvconfiguration
 * API for IPTV configuration. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IPTVConfigurationsApi.h
 *
 *
 */

#ifndef IPTVConfigurationsApi_H_
#define IPTVConfigurationsApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "IptvConfigData.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IPTVConfigurationsApi {
public:
  IPTVConfigurationsApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IPTVConfigurationsApi() {}
  void init();

  const std::string base = "/3gpp-iptvconfiguration/v1";

private:
  void setupRoutes();

  void
  af_id_configurations_get_handler(const Pistache::Rest::Request &request,
                                   Pistache::Http::ResponseWriter response);
  void
  af_id_configurations_post_handler(const Pistache::Rest::Request &request,
                                    Pistache::Http::ResponseWriter response);
  void iptv_configurations_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// read all of the active configurations for the AF
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  virtual void
  af_id_configurations_get(const std::string &afId,
                           Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Creates a new configuration resource
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  /// <param name="iptvConfigData">new configuration creation</param>
  virtual void
  af_id_configurations_post(const std::string &afId,
                            const IptvConfigData &iptvConfigData,
                            Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IPTVConfigurationsApi_H_ */
