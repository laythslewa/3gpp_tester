/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AcknowledgeInfo.h
 *
 *
 */

#ifndef AcknowledgeInfo_H_
#define AcknowledgeInfo_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class AcknowledgeInfo {
public:
  AcknowledgeInfo();
  virtual ~AcknowledgeInfo();

  void validate();

  /////////////////////////////////////////////
  /// AcknowledgeInfo members

  /// <summary>
  /// MAC value for protecting SOR procedure (SoR-MAC-IAUSF and SoR-XMAC-IUE).
  /// </summary>
  std::string getSorMacIue() const;
  void setSorMacIue(std::string const &value);
  bool sorMacIueIsSet() const;
  void unsetSorMacIue();
  /// <summary>
  /// MAC value for protecting UPU procedure (UPU-MAC-IAUSF and UPU-MAC-IUE).
  /// </summary>
  std::string getUpuMacIue() const;
  void setUpuMacIue(std::string const &value);
  bool upuMacIueIsSet() const;
  void unsetUpuMacIue();
  /// <summary>
  ///
  /// </summary>
  std::string getSecuredPacket() const;
  void setSecuredPacket(std::string const &value);
  bool securedPacketIsSet() const;
  void unsetSecuredPacket();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getProvisioningTime() const;
  void setProvisioningTime(std::string const &value);
  /// <summary>
  /// string with format \&quot;bytes\&quot; as defined in OpenAPI
  /// </summary>
  std::string getSorTransparentContainer() const;
  void setSorTransparentContainer(std::string const &value);
  bool sorTransparentContainerIsSet() const;
  void unsetSorTransparentContainer();
  /// <summary>
  ///
  /// </summary>
  bool isUeNotReachable() const;
  void setUeNotReachable(bool const value);
  bool ueNotReachableIsSet() const;
  void unsetUeNotReachable();

  friend void to_json(nlohmann::json &j, const AcknowledgeInfo &o);
  friend void from_json(const nlohmann::json &j, AcknowledgeInfo &o);

protected:
  std::string m_SorMacIue;
  bool m_SorMacIueIsSet;
  std::string m_UpuMacIue;
  bool m_UpuMacIueIsSet;
  std::string m_SecuredPacket;
  bool m_SecuredPacketIsSet;
  std::string m_ProvisioningTime;

  std::string m_SorTransparentContainer;
  bool m_SorTransparentContainerIsSet;
  bool m_UeNotReachable;
  bool m_UeNotReachableIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AcknowledgeInfo_H_ */
