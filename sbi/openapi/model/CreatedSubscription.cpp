/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CreatedSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CreatedSubscription::CreatedSubscription() {
  m_DicEntryId = 0;
  m_ConfirmedExpires = "";
  m_ConfirmedExpiresIsSet = false;
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
}

CreatedSubscription::~CreatedSubscription() {}

void CreatedSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CreatedSubscription &o) {
  j = nlohmann::json();
  j["dicEntryId"] = o.m_DicEntryId;
  if (o.confirmedExpiresIsSet())
    j["confirmedExpires"] = o.m_ConfirmedExpires;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, CreatedSubscription &o) {
  j.at("dicEntryId").get_to(o.m_DicEntryId);
  if (j.find("confirmedExpires") != j.end()) {
    j.at("confirmedExpires").get_to(o.m_ConfirmedExpires);
    o.m_ConfirmedExpiresIsSet = true;
  }
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
}

int32_t CreatedSubscription::getDicEntryId() const { return m_DicEntryId; }
void CreatedSubscription::setDicEntryId(int32_t const value) {
  m_DicEntryId = value;
}
std::string CreatedSubscription::getConfirmedExpires() const {
  return m_ConfirmedExpires;
}
void CreatedSubscription::setConfirmedExpires(std::string const &value) {
  m_ConfirmedExpires = value;
  m_ConfirmedExpiresIsSet = true;
}
bool CreatedSubscription::confirmedExpiresIsSet() const {
  return m_ConfirmedExpiresIsSet;
}
void CreatedSubscription::unsetConfirmedExpires() {
  m_ConfirmedExpiresIsSet = false;
}
std::string CreatedSubscription::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void CreatedSubscription::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool CreatedSubscription::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void CreatedSubscription::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
