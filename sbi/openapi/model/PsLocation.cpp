/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PsLocation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PsLocation::PsLocation() {
  m_SgsnLocationDataIsSet = false;
  m_MmeLocationDataIsSet = false;
  m_AmfLocationDataIsSet = false;
  m_TwanLocationDataIsSet = false;
}

PsLocation::~PsLocation() {}

void PsLocation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PsLocation &o) {
  j = nlohmann::json();
  if (o.sgsnLocationDataIsSet())
    j["sgsnLocationData"] = o.m_SgsnLocationData;
  if (o.mmeLocationDataIsSet())
    j["mmeLocationData"] = o.m_MmeLocationData;
  if (o.amfLocationDataIsSet())
    j["amfLocationData"] = o.m_AmfLocationData;
  if (o.twanLocationDataIsSet())
    j["twanLocationData"] = o.m_TwanLocationData;
}

void from_json(const nlohmann::json &j, PsLocation &o) {
  if (j.find("sgsnLocationData") != j.end()) {
    j.at("sgsnLocationData").get_to(o.m_SgsnLocationData);
    o.m_SgsnLocationDataIsSet = true;
  }
  if (j.find("mmeLocationData") != j.end()) {
    j.at("mmeLocationData").get_to(o.m_MmeLocationData);
    o.m_MmeLocationDataIsSet = true;
  }
  if (j.find("amfLocationData") != j.end()) {
    j.at("amfLocationData").get_to(o.m_AmfLocationData);
    o.m_AmfLocationDataIsSet = true;
  }
  if (j.find("twanLocationData") != j.end()) {
    j.at("twanLocationData").get_to(o.m_TwanLocationData);
    o.m_TwanLocationDataIsSet = true;
  }
}

SgsnLocationData PsLocation::getSgsnLocationData() const {
  return m_SgsnLocationData;
}
void PsLocation::setSgsnLocationData(SgsnLocationData const &value) {
  m_SgsnLocationData = value;
  m_SgsnLocationDataIsSet = true;
}
bool PsLocation::sgsnLocationDataIsSet() const {
  return m_SgsnLocationDataIsSet;
}
void PsLocation::unsetSgsnLocationData() { m_SgsnLocationDataIsSet = false; }
MmeLocationData PsLocation::getMmeLocationData() const {
  return m_MmeLocationData;
}
void PsLocation::setMmeLocationData(MmeLocationData const &value) {
  m_MmeLocationData = value;
  m_MmeLocationDataIsSet = true;
}
bool PsLocation::mmeLocationDataIsSet() const { return m_MmeLocationDataIsSet; }
void PsLocation::unsetMmeLocationData() { m_MmeLocationDataIsSet = false; }
AmfLocationData PsLocation::getAmfLocationData() const {
  return m_AmfLocationData;
}
void PsLocation::setAmfLocationData(AmfLocationData const &value) {
  m_AmfLocationData = value;
  m_AmfLocationDataIsSet = true;
}
bool PsLocation::amfLocationDataIsSet() const { return m_AmfLocationDataIsSet; }
void PsLocation::unsetAmfLocationData() { m_AmfLocationDataIsSet = false; }
TwanLocationData PsLocation::getTwanLocationData() const {
  return m_TwanLocationData;
}
void PsLocation::setTwanLocationData(TwanLocationData const &value) {
  m_TwanLocationData = value;
  m_TwanLocationDataIsSet = true;
}
bool PsLocation::twanLocationDataIsSet() const {
  return m_TwanLocationDataIsSet;
}
void PsLocation::unsetTwanLocationData() { m_TwanLocationDataIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
