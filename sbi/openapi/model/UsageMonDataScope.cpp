/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UsageMonDataScope.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UsageMonDataScope::UsageMonDataScope() { m_DnnIsSet = false; }

UsageMonDataScope::~UsageMonDataScope() {}

void UsageMonDataScope::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UsageMonDataScope &o) {
  j = nlohmann::json();
  j["snssai"] = o.m_Snssai;
  if (o.dnnIsSet() || !o.m_Dnn.empty())
    j["dnn"] = o.m_Dnn;
}

void from_json(const nlohmann::json &j, UsageMonDataScope &o) {
  j.at("snssai").get_to(o.m_Snssai);
  if (j.find("dnn") != j.end()) {
    j.at("dnn").get_to(o.m_Dnn);
    o.m_DnnIsSet = true;
  }
}

Snssai UsageMonDataScope::getSnssai() const { return m_Snssai; }
void UsageMonDataScope::setSnssai(Snssai const &value) { m_Snssai = value; }
std::vector<std::string> &UsageMonDataScope::getDnn() { return m_Dnn; }
void UsageMonDataScope::setDnn(std::vector<std::string> const &value) {
  m_Dnn = value;
  m_DnnIsSet = true;
}
bool UsageMonDataScope::dnnIsSet() const { return m_DnnIsSet; }
void UsageMonDataScope::unsetDnn() { m_DnnIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
