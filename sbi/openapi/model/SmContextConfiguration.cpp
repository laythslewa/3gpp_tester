/**
 * Nnef_SMContext
 * Nnef SMContext Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SmContextConfiguration.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SmContextConfiguration::SmContextConfiguration() {
  m_SmalDataRateControlIsSet = false;
  m_SmallDataRateStatusIsSet = false;
  m_ServPlmnDataRateCtl = 0;
  m_ServPlmnDataRateCtlIsSet = false;
}

SmContextConfiguration::~SmContextConfiguration() {}

void SmContextConfiguration::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SmContextConfiguration &o) {
  j = nlohmann::json();
  if (o.smalDataRateControlIsSet())
    j["smalDataRateControl"] = o.m_SmalDataRateControl;
  if (o.smallDataRateStatusIsSet())
    j["smallDataRateStatus"] = o.m_SmallDataRateStatus;
  if (o.servPlmnDataRateCtlIsSet())
    j["servPlmnDataRateCtl"] = o.m_ServPlmnDataRateCtl;
}

void from_json(const nlohmann::json &j, SmContextConfiguration &o) {
  if (j.find("smalDataRateControl") != j.end()) {
    j.at("smalDataRateControl").get_to(o.m_SmalDataRateControl);
    o.m_SmalDataRateControlIsSet = true;
  }
  if (j.find("smallDataRateStatus") != j.end()) {
    j.at("smallDataRateStatus").get_to(o.m_SmallDataRateStatus);
    o.m_SmallDataRateStatusIsSet = true;
  }
  if (j.find("servPlmnDataRateCtl") != j.end()) {
    j.at("servPlmnDataRateCtl").get_to(o.m_ServPlmnDataRateCtl);
    o.m_ServPlmnDataRateCtlIsSet = true;
  }
}

SmallDataRateControl SmContextConfiguration::getSmalDataRateControl() const {
  return m_SmalDataRateControl;
}
void SmContextConfiguration::setSmalDataRateControl(
    SmallDataRateControl const &value) {
  m_SmalDataRateControl = value;
  m_SmalDataRateControlIsSet = true;
}
bool SmContextConfiguration::smalDataRateControlIsSet() const {
  return m_SmalDataRateControlIsSet;
}
void SmContextConfiguration::unsetSmalDataRateControl() {
  m_SmalDataRateControlIsSet = false;
}
SmallDataRateStatus SmContextConfiguration::getSmallDataRateStatus() const {
  return m_SmallDataRateStatus;
}
void SmContextConfiguration::setSmallDataRateStatus(
    SmallDataRateStatus const &value) {
  m_SmallDataRateStatus = value;
  m_SmallDataRateStatusIsSet = true;
}
bool SmContextConfiguration::smallDataRateStatusIsSet() const {
  return m_SmallDataRateStatusIsSet;
}
void SmContextConfiguration::unsetSmallDataRateStatus() {
  m_SmallDataRateStatusIsSet = false;
}
int32_t SmContextConfiguration::getServPlmnDataRateCtl() const {
  return m_ServPlmnDataRateCtl;
}
void SmContextConfiguration::setServPlmnDataRateCtl(int32_t const value) {
  m_ServPlmnDataRateCtl = value;
  m_ServPlmnDataRateCtlIsSet = true;
}
bool SmContextConfiguration::servPlmnDataRateCtlIsSet() const {
  return m_ServPlmnDataRateCtlIsSet;
}
void SmContextConfiguration::unsetServPlmnDataRateCtl() {
  m_ServPlmnDataRateCtlIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
