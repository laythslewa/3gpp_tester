/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AccumulatedUsage.h
 *
 * Represents an accumulated usage.
 */

#ifndef AccumulatedUsage_H_
#define AccumulatedUsage_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents an accumulated usage.
/// </summary>
class AccumulatedUsage {
public:
  AccumulatedUsage();
  virtual ~AccumulatedUsage();

  void validate();

  /////////////////////////////////////////////
  /// AccumulatedUsage members

  /// <summary>
  /// Unsigned integer identifying a period of time in units of seconds.
  /// </summary>
  int32_t getDuration() const;
  void setDuration(int32_t const value);
  bool durationIsSet() const;
  void unsetDuration();
  /// <summary>
  /// Unsigned integer identifying a volume in units of bytes.
  /// </summary>
  int64_t getTotalVolume() const;
  void setTotalVolume(int64_t const value);
  bool totalVolumeIsSet() const;
  void unsetTotalVolume();
  /// <summary>
  /// Unsigned integer identifying a volume in units of bytes.
  /// </summary>
  int64_t getDownlinkVolume() const;
  void setDownlinkVolume(int64_t const value);
  bool downlinkVolumeIsSet() const;
  void unsetDownlinkVolume();
  /// <summary>
  /// Unsigned integer identifying a volume in units of bytes.
  /// </summary>
  int64_t getUplinkVolume() const;
  void setUplinkVolume(int64_t const value);
  bool uplinkVolumeIsSet() const;
  void unsetUplinkVolume();

  friend void to_json(nlohmann::json &j, const AccumulatedUsage &o);
  friend void from_json(const nlohmann::json &j, AccumulatedUsage &o);

protected:
  int32_t m_Duration;
  bool m_DurationIsSet;
  int64_t m_TotalVolume;
  bool m_TotalVolumeIsSet;
  int64_t m_DownlinkVolume;
  bool m_DownlinkVolumeIsSet;
  int64_t m_UplinkVolume;
  bool m_UplinkVolumeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AccumulatedUsage_H_ */
