/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NEFChargingInformation.h
 *
 *
 */

#ifndef NEFChargingInformation_H_
#define NEFChargingInformation_H_

#include "APIDirection.h"
#include "NFIdentification.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class NEFChargingInformation {
public:
  NEFChargingInformation();
  virtual ~NEFChargingInformation();

  void validate();

  /////////////////////////////////////////////
  /// NEFChargingInformation members

  /// <summary>
  /// String identifying a Gpsi shall contain either an External Id or an
  /// MSISDN. It shall be formatted as follows -External Identifier&#x3D;
  /// \&quot;extid-&lt;extid&gt;, where &lt;extid&gt; shall be formatted
  /// according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
  /// Identifier.
  /// </summary>
  std::string getExternalIndividualIdentifier() const;
  void setExternalIndividualIdentifier(std::string const &value);
  bool externalIndividualIdentifierIsSet() const;
  void unsetExternalIndividualIdentifier();
  /// <summary>
  /// String identifying External Group Identifier that identifies a group made
  /// up of one or more subscriptions associated to a group of IMSIs, as
  /// specified in clause 19.7.3 of 3GPP TS 23.003.
  /// </summary>
  std::string getExternalGroupIdentifier() const;
  void setExternalGroupIdentifier(std::string const &value);
  bool externalGroupIdentifierIsSet() const;
  void unsetExternalGroupIdentifier();
  /// <summary>
  /// String identifying a group of devices network internal globally unique ID
  /// which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP
  /// TS 23.003.
  /// </summary>
  std::string getGroupIdentifier() const;
  void setGroupIdentifier(std::string const &value);
  bool groupIdentifierIsSet() const;
  void unsetGroupIdentifier();
  /// <summary>
  ///
  /// </summary>
  APIDirection getAPIDirection() const;
  void setAPIDirection(APIDirection const &value);
  bool aPIDirectionIsSet() const;
  void unsetAPIDirection();
  /// <summary>
  ///
  /// </summary>
  NFIdentification getAPITargetNetworkFunction() const;
  void setAPITargetNetworkFunction(NFIdentification const &value);
  bool aPITargetNetworkFunctionIsSet() const;
  void unsetAPITargetNetworkFunction();
  /// <summary>
  /// Integer where the allowed values correspond to the value range of an
  /// unsigned 32-bit integer.
  /// </summary>
  int32_t getAPIResultCode() const;
  void setAPIResultCode(int32_t const value);
  bool aPIResultCodeIsSet() const;
  void unsetAPIResultCode();
  /// <summary>
  ///
  /// </summary>
  std::string getAPIName() const;
  void setAPIName(std::string const &value);
  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getAPIReference() const;
  void setAPIReference(std::string const &value);
  bool aPIReferenceIsSet() const;
  void unsetAPIReference();
  /// <summary>
  ///
  /// </summary>
  std::string getAPIContent() const;
  void setAPIContent(std::string const &value);
  bool aPIContentIsSet() const;
  void unsetAPIContent();

  friend void to_json(nlohmann::json &j, const NEFChargingInformation &o);
  friend void from_json(const nlohmann::json &j, NEFChargingInformation &o);

protected:
  std::string m_ExternalIndividualIdentifier;
  bool m_ExternalIndividualIdentifierIsSet;
  std::string m_ExternalGroupIdentifier;
  bool m_ExternalGroupIdentifierIsSet;
  std::string m_GroupIdentifier;
  bool m_GroupIdentifierIsSet;
  APIDirection m_APIDirection;
  bool m_APIDirectionIsSet;
  NFIdentification m_APITargetNetworkFunction;
  bool m_APITargetNetworkFunctionIsSet;
  int32_t m_APIResultCode;
  bool m_APIResultCodeIsSet;
  std::string m_APIName;

  std::string m_APIReference;
  bool m_APIReferenceIsSet;
  std::string m_APIContent;
  bool m_APIContentIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NEFChargingInformation_H_ */
