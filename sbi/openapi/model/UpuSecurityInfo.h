/**
 * Nausf_UPUProtection Service
 * AUSF UPU Protection Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UpuSecurityInfo.h
 *
 * Contains the material generated for securing of UPU. It contains at least the
 * UPU-MAC-IAUSF and CounterUPU.
 */

#ifndef UpuSecurityInfo_H_
#define UpuSecurityInfo_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the material generated for securing of UPU. It contains at least
/// the UPU-MAC-IAUSF and CounterUPU.
/// </summary>
class UpuSecurityInfo {
public:
  UpuSecurityInfo();
  virtual ~UpuSecurityInfo();

  void validate();

  /////////////////////////////////////////////
  /// UpuSecurityInfo members

  /// <summary>
  /// MAC value for protecting UPU procedure (UPU-MAC-IAUSF and UPU-MAC-IUE).
  /// </summary>
  std::string getUpuMacIausf() const;
  void setUpuMacIausf(std::string const &value);
  /// <summary>
  /// CounterUPU.
  /// </summary>
  std::string getCounterUpu() const;
  void setCounterUpu(std::string const &value);
  /// <summary>
  /// MAC value for protecting UPU procedure (UPU-MAC-IAUSF and UPU-MAC-IUE).
  /// </summary>
  std::string getUpuXmacIue() const;
  void setUpuXmacIue(std::string const &value);
  bool upuXmacIueIsSet() const;
  void unsetUpuXmacIue();

  friend void to_json(nlohmann::json &j, const UpuSecurityInfo &o);
  friend void from_json(const nlohmann::json &j, UpuSecurityInfo &o);

protected:
  std::string m_UpuMacIausf;

  std::string m_CounterUpu;

  std::string m_UpuXmacIue;
  bool m_UpuXmacIueIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UpuSecurityInfo_H_ */
