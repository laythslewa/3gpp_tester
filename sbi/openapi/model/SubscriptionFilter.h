/**
 * Nudsf_DataRepository
 * Nudsf Data Repository Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SubscriptionFilter.h
 *
 * A subscription filter
 */

#ifndef SubscriptionFilter_H_
#define SubscriptionFilter_H_

#include "RecordOperation.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A subscription filter
/// </summary>
class SubscriptionFilter {
public:
  SubscriptionFilter();
  virtual ~SubscriptionFilter();

  void validate();

  /////////////////////////////////////////////
  /// SubscriptionFilter members

  /// <summary>
  /// list of resources applicable to the subscription
  /// </summary>
  std::vector<std::string> &getMonitoredResourceUris();
  void setMonitoredResourceUris(std::vector<std::string> const &value);
  bool monitoredResourceUrisIsSet() const;
  void unsetMonitoredResourceUris();
  /// <summary>
  /// list of resources applicable to the subscription
  /// </summary>
  std::vector<RecordOperation> &getOperations();
  void setOperations(std::vector<RecordOperation> const &value);
  bool operationsIsSet() const;
  void unsetOperations();

  friend void to_json(nlohmann::json &j, const SubscriptionFilter &o);
  friend void from_json(const nlohmann::json &j, SubscriptionFilter &o);

protected:
  std::vector<std::string> m_MonitoredResourceUris;
  bool m_MonitoredResourceUrisIsSet;
  std::vector<RecordOperation> m_Operations;
  bool m_OperationsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SubscriptionFilter_H_ */
