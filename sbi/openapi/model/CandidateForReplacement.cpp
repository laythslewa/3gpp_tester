/**
 * Npcf_AMPolicyControl
 * Access and Mobility Policy Control Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CandidateForReplacement.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CandidateForReplacement::CandidateForReplacement() { m_DnnsIsSet = false; }

CandidateForReplacement::~CandidateForReplacement() {}

void CandidateForReplacement::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CandidateForReplacement &o) {
  j = nlohmann::json();
  j["snssai"] = o.m_Snssai;
  if (o.dnnsIsSet() || !o.m_Dnns.empty())
    j["dnns"] = o.m_Dnns;
}

void from_json(const nlohmann::json &j, CandidateForReplacement &o) {
  j.at("snssai").get_to(o.m_Snssai);
  if (j.find("dnns") != j.end()) {
    j.at("dnns").get_to(o.m_Dnns);
    o.m_DnnsIsSet = true;
  }
}

Snssai CandidateForReplacement::getSnssai() const { return m_Snssai; }
void CandidateForReplacement::setSnssai(Snssai const &value) {
  m_Snssai = value;
}
std::vector<std::string> &CandidateForReplacement::getDnns() { return m_Dnns; }
void CandidateForReplacement::setDnns(std::vector<std::string> const &value) {
  m_Dnns = value;
  m_DnnsIsSet = true;
}
bool CandidateForReplacement::dnnsIsSet() const { return m_DnnsIsSet; }
void CandidateForReplacement::unsetDnns() { m_DnnsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
