/**
 * Nudm_NIDDAU
 * Nudm NIDD Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NiddAuthUpdateInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NiddAuthUpdateInfo::NiddAuthUpdateInfo() {
  m_InvalidityInd = false;
  m_InvalidityIndIsSet = false;
}

NiddAuthUpdateInfo::~NiddAuthUpdateInfo() {}

void NiddAuthUpdateInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NiddAuthUpdateInfo &o) {
  j = nlohmann::json();
  j["authorizationData"] = o.m_AuthorizationData;
  if (o.invalidityIndIsSet())
    j["invalidityInd"] = o.m_InvalidityInd;
}

void from_json(const nlohmann::json &j, NiddAuthUpdateInfo &o) {
  j.at("authorizationData").get_to(o.m_AuthorizationData);
  if (j.find("invalidityInd") != j.end()) {
    j.at("invalidityInd").get_to(o.m_InvalidityInd);
    o.m_InvalidityIndIsSet = true;
  }
}

AuthorizationData NiddAuthUpdateInfo::getAuthorizationData() const {
  return m_AuthorizationData;
}
void NiddAuthUpdateInfo::setAuthorizationData(AuthorizationData const &value) {
  m_AuthorizationData = value;
}
bool NiddAuthUpdateInfo::isInvalidityInd() const { return m_InvalidityInd; }
void NiddAuthUpdateInfo::setInvalidityInd(bool const value) {
  m_InvalidityInd = value;
  m_InvalidityIndIsSet = true;
}
bool NiddAuthUpdateInfo::invalidityIndIsSet() const {
  return m_InvalidityIndIsSet;
}
void NiddAuthUpdateInfo::unsetInvalidityInd() { m_InvalidityIndIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
