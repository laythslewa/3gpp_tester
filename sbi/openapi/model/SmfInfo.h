/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmfInfo.h
 *
 * Information of an SMF NF Instance
 */

#ifndef SmfInfo_H_
#define SmfInfo_H_

#include "AccessType.h"
#include "SnssaiSmfInfoItem.h"
#include "Tai.h"
#include "TaiRange.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Information of an SMF NF Instance
/// </summary>
class SmfInfo {
public:
  SmfInfo();
  virtual ~SmfInfo();

  void validate();

  /////////////////////////////////////////////
  /// SmfInfo members

  /// <summary>
  ///
  /// </summary>
  std::vector<SnssaiSmfInfoItem> &getSNssaiSmfInfoList();
  void setSNssaiSmfInfoList(std::vector<SnssaiSmfInfoItem> const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<Tai> &getTaiList();
  void setTaiList(std::vector<Tai> const &value);
  bool taiListIsSet() const;
  void unsetTaiList();
  /// <summary>
  ///
  /// </summary>
  std::vector<TaiRange> &getTaiRangeList();
  void setTaiRangeList(std::vector<TaiRange> const &value);
  bool taiRangeListIsSet() const;
  void unsetTaiRangeList();
  /// <summary>
  /// Fully Qualified Domain Name
  /// </summary>
  std::string getPgwFqdn() const;
  void setPgwFqdn(std::string const &value);
  bool pgwFqdnIsSet() const;
  void unsetPgwFqdn();
  /// <summary>
  ///
  /// </summary>
  std::vector<AccessType> &getAccessType();
  void setAccessType(std::vector<AccessType> const &value);
  bool accessTypeIsSet() const;
  void unsetAccessType();
  /// <summary>
  ///
  /// </summary>
  int32_t getPriority() const;
  void setPriority(int32_t const value);
  bool priorityIsSet() const;
  void unsetPriority();
  /// <summary>
  ///
  /// </summary>
  bool isVsmfSupportInd() const;
  void setVsmfSupportInd(bool const value);
  bool vsmfSupportIndIsSet() const;
  void unsetVsmfSupportInd();

  friend void to_json(nlohmann::json &j, const SmfInfo &o);
  friend void from_json(const nlohmann::json &j, SmfInfo &o);

protected:
  std::vector<SnssaiSmfInfoItem> m_SNssaiSmfInfoList;

  std::vector<Tai> m_TaiList;
  bool m_TaiListIsSet;
  std::vector<TaiRange> m_TaiRangeList;
  bool m_TaiRangeListIsSet;
  std::string m_PgwFqdn;
  bool m_PgwFqdnIsSet;
  std::vector<AccessType> m_AccessType;
  bool m_AccessTypeIsSet;
  int32_t m_Priority;
  bool m_PriorityIsSet;
  bool m_VsmfSupportInd;
  bool m_VsmfSupportIndIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmfInfo_H_ */
