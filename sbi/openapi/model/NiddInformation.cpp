/**
 * Nnef_SMContext
 * Nnef SMContext Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NiddInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NiddInformation::NiddInformation() {
  m_ExtGroupId = "";
  m_ExtGroupIdIsSet = false;
  m_Gpsi = "";
  m_GpsiIsSet = false;
  m_AfId = "";
  m_AfIdIsSet = false;
}

NiddInformation::~NiddInformation() {}

void NiddInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NiddInformation &o) {
  j = nlohmann::json();
  if (o.extGroupIdIsSet())
    j["extGroupId"] = o.m_ExtGroupId;
  if (o.gpsiIsSet())
    j["gpsi"] = o.m_Gpsi;
  if (o.afIdIsSet())
    j["afId"] = o.m_AfId;
}

void from_json(const nlohmann::json &j, NiddInformation &o) {
  if (j.find("extGroupId") != j.end()) {
    j.at("extGroupId").get_to(o.m_ExtGroupId);
    o.m_ExtGroupIdIsSet = true;
  }
  if (j.find("gpsi") != j.end()) {
    j.at("gpsi").get_to(o.m_Gpsi);
    o.m_GpsiIsSet = true;
  }
  if (j.find("afId") != j.end()) {
    j.at("afId").get_to(o.m_AfId);
    o.m_AfIdIsSet = true;
  }
}

std::string NiddInformation::getExtGroupId() const { return m_ExtGroupId; }
void NiddInformation::setExtGroupId(std::string const &value) {
  m_ExtGroupId = value;
  m_ExtGroupIdIsSet = true;
}
bool NiddInformation::extGroupIdIsSet() const { return m_ExtGroupIdIsSet; }
void NiddInformation::unsetExtGroupId() { m_ExtGroupIdIsSet = false; }
std::string NiddInformation::getGpsi() const { return m_Gpsi; }
void NiddInformation::setGpsi(std::string const &value) {
  m_Gpsi = value;
  m_GpsiIsSet = true;
}
bool NiddInformation::gpsiIsSet() const { return m_GpsiIsSet; }
void NiddInformation::unsetGpsi() { m_GpsiIsSet = false; }
std::string NiddInformation::getAfId() const { return m_AfId; }
void NiddInformation::setAfId(std::string const &value) {
  m_AfId = value;
  m_AfIdIsSet = true;
}
bool NiddInformation::afIdIsSet() const { return m_AfIdIsSet; }
void NiddInformation::unsetAfId() { m_AfIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
