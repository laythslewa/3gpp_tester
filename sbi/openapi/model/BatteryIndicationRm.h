/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * BatteryIndicationRm.h
 *
 * This data type is defined in the same way as the
 * \&quot;BatteryIndication\&quot; data type, but with the OpenAPI
 * \&quot;nullable&#x3D; true\&quot; property.
 */

#ifndef BatteryIndicationRm_H_
#define BatteryIndicationRm_H_

#include "BatteryIndication.h"
#include "NullValue.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// This data type is defined in the same way as the
/// \&quot;BatteryIndication\&quot; data type, but with the OpenAPI
/// \&quot;nullable&#x3D; true\&quot; property.
/// </summary>
class BatteryIndicationRm {
public:
  BatteryIndicationRm();
  virtual ~BatteryIndicationRm();

  void validate();

  /////////////////////////////////////////////
  /// BatteryIndicationRm members

  /// <summary>
  /// This IE shall indicate whether the UE is battery powered or not. true: the
  /// UE is battery powered; false or absent: the UE is not battery powered
  /// </summary>
  bool isBatteryInd() const;
  void setBatteryInd(bool const value);
  bool batteryIndIsSet() const;
  void unsetBatteryInd();
  /// <summary>
  /// This IE shall indicate whether the battery of the UE is replaceable or
  /// not. true: the battery of the UE is replaceable; false or absent: the
  /// battery of the UE is not replaceable.
  /// </summary>
  bool isReplaceableInd() const;
  void setReplaceableInd(bool const value);
  bool replaceableIndIsSet() const;
  void unsetReplaceableInd();
  /// <summary>
  /// This IE shall indicate whether the battery of the UE is rechargeable or
  /// not. true: the battery of UE is rechargeable; false or absent: the battery
  /// of the UE is not rechargeable.
  /// </summary>
  bool isRechargeableInd() const;
  void setRechargeableInd(bool const value);
  bool rechargeableIndIsSet() const;
  void unsetRechargeableInd();

  friend void to_json(nlohmann::json &j, const BatteryIndicationRm &o);
  friend void from_json(const nlohmann::json &j, BatteryIndicationRm &o);

protected:
  bool m_BatteryInd;
  bool m_BatteryIndIsSet;
  bool m_ReplaceableInd;
  bool m_ReplaceableIndIsSet;
  bool m_RechargeableInd;
  bool m_RechargeableIndIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* BatteryIndicationRm_H_ */
