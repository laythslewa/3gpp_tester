/**
 * Nudm_UECM
 * Nudm Context Management Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SMFSmfRegistrationApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

SMFSmfRegistrationApiImpl::SMFSmfRegistrationApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : SMFSmfRegistrationApi(rtr) {}

void SMFSmfRegistrationApiImpl::get_smf_registration(
    const std::string &ueId, const Pistache::Optional<Snssai> &singleNssai,
    const Pistache::Optional<std::string> &dnn,
    const Pistache::Optional<std::string> &supportedFeatures,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void SMFSmfRegistrationApiImpl::registration(
    const std::string &ueId, const int32_t &pduSessionId,
    const SmfRegistration &smfRegistration,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
