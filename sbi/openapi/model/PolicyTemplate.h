/**
 * M1_PolicyTemplatesProvisioning
 * 5GMS AF M1 Policy Templates Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PolicyTemplate.h
 *
 *
 */

#ifndef PolicyTemplate_H_
#define PolicyTemplate_H_

#include "AnyOfstringstring.h"
#include "ChargingSpecification.h"
#include "M1QoSSpecification.h"
#include "PolicyTemplate_ApplicationSessionContext.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class PolicyTemplate {
public:
  PolicyTemplate();
  virtual ~PolicyTemplate();

  void validate();

  /////////////////////////////////////////////
  /// PolicyTemplate members

  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getPolicyTemplateId() const;
  void setPolicyTemplateId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  AnyOfstringstring getState() const;
  void setState(AnyOfstringstring const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getApiEndPoint() const;
  void setApiEndPoint(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  AnyOfstringstring getApiType() const;
  void setApiType(AnyOfstringstring const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getExternalReference() const;
  void setExternalReference(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  M1QoSSpecification getQoSSpecification() const;
  void setQoSSpecification(M1QoSSpecification const &value);
  bool qoSSpecificationIsSet() const;
  void unsetQoSSpecification();
  /// <summary>
  ///
  /// </summary>
  PolicyTemplate_ApplicationSessionContext getApplicationSessionContext() const;
  void setApplicationSessionContext(
      PolicyTemplate_ApplicationSessionContext const &value);
  /// <summary>
  ///
  /// </summary>
  ChargingSpecification getChargingSpecification() const;
  void setChargingSpecification(ChargingSpecification const &value);
  bool chargingSpecificationIsSet() const;
  void unsetChargingSpecification();

  friend void to_json(nlohmann::json &j, const PolicyTemplate &o);
  friend void from_json(const nlohmann::json &j, PolicyTemplate &o);

protected:
  std::string m_PolicyTemplateId;

  AnyOfstringstring m_State;

  std::string m_ApiEndPoint;

  AnyOfstringstring m_ApiType;

  std::string m_ExternalReference;

  M1QoSSpecification m_QoSSpecification;
  bool m_QoSSpecificationIsSet;
  PolicyTemplate_ApplicationSessionContext m_ApplicationSessionContext;

  ChargingSpecification m_ChargingSpecification;
  bool m_ChargingSpecificationIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PolicyTemplate_H_ */
