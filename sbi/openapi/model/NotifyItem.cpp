/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NotifyItem.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NotifyItem::NotifyItem() { m_ResourceId = ""; }

NotifyItem::~NotifyItem() {}

void NotifyItem::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NotifyItem &o) {
  j = nlohmann::json();
  j["resourceId"] = o.m_ResourceId;
  j["changes"] = o.m_Changes;
}

void from_json(const nlohmann::json &j, NotifyItem &o) {
  j.at("resourceId").get_to(o.m_ResourceId);
  j.at("changes").get_to(o.m_Changes);
}

std::string NotifyItem::getResourceId() const { return m_ResourceId; }
void NotifyItem::setResourceId(std::string const &value) {
  m_ResourceId = value;
}
std::vector<ChangeItem> &NotifyItem::getChanges() { return m_Changes; }
void NotifyItem::setChanges(std::vector<ChangeItem> const &value) {
  m_Changes = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
