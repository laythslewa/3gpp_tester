/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AmfEventSubscriptionInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AmfEventSubscriptionInfo::AmfEventSubscriptionInfo() {
  m_SubId = "";
  m_NotifyCorrelationId = "";
  m_NotifyCorrelationIdIsSet = false;
  m_OldSubId = "";
  m_OldSubIdIsSet = false;
}

AmfEventSubscriptionInfo::~AmfEventSubscriptionInfo() {}

void AmfEventSubscriptionInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AmfEventSubscriptionInfo &o) {
  j = nlohmann::json();
  j["subId"] = o.m_SubId;
  if (o.notifyCorrelationIdIsSet())
    j["notifyCorrelationId"] = o.m_NotifyCorrelationId;
  j["refIdList"] = o.m_RefIdList;
  if (o.oldSubIdIsSet())
    j["oldSubId"] = o.m_OldSubId;
}

void from_json(const nlohmann::json &j, AmfEventSubscriptionInfo &o) {
  j.at("subId").get_to(o.m_SubId);
  if (j.find("notifyCorrelationId") != j.end()) {
    j.at("notifyCorrelationId").get_to(o.m_NotifyCorrelationId);
    o.m_NotifyCorrelationIdIsSet = true;
  }
  j.at("refIdList").get_to(o.m_RefIdList);
  if (j.find("oldSubId") != j.end()) {
    j.at("oldSubId").get_to(o.m_OldSubId);
    o.m_OldSubIdIsSet = true;
  }
}

std::string AmfEventSubscriptionInfo::getSubId() const { return m_SubId; }
void AmfEventSubscriptionInfo::setSubId(std::string const &value) {
  m_SubId = value;
}
std::string AmfEventSubscriptionInfo::getNotifyCorrelationId() const {
  return m_NotifyCorrelationId;
}
void AmfEventSubscriptionInfo::setNotifyCorrelationId(
    std::string const &value) {
  m_NotifyCorrelationId = value;
  m_NotifyCorrelationIdIsSet = true;
}
bool AmfEventSubscriptionInfo::notifyCorrelationIdIsSet() const {
  return m_NotifyCorrelationIdIsSet;
}
void AmfEventSubscriptionInfo::unsetNotifyCorrelationId() {
  m_NotifyCorrelationIdIsSet = false;
}
std::vector<int32_t> &AmfEventSubscriptionInfo::getRefIdList() {
  return m_RefIdList;
}
void AmfEventSubscriptionInfo::setRefIdList(std::vector<int32_t> const value) {
  m_RefIdList = value;
}
std::string AmfEventSubscriptionInfo::getOldSubId() const { return m_OldSubId; }
void AmfEventSubscriptionInfo::setOldSubId(std::string const &value) {
  m_OldSubId = value;
  m_OldSubIdIsSet = true;
}
bool AmfEventSubscriptionInfo::oldSubIdIsSet() const { return m_OldSubIdIsSet; }
void AmfEventSubscriptionInfo::unsetOldSubId() { m_OldSubIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
