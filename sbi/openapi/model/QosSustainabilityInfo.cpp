/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "QosSustainabilityInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

QosSustainabilityInfo::QosSustainabilityInfo() {
  m_AreaInfoIsSet = false;
  m_StartTs = "";
  m_StartTsIsSet = false;
  m_EndTs = "";
  m_EndTsIsSet = false;
  m_QosFlowRetThdIsSet = false;
  m_RanUeThrouThd = "";
  m_RanUeThrouThdIsSet = false;
  m_SnssaiIsSet = false;
  m_Confidence = 0;
  m_ConfidenceIsSet = false;
}

QosSustainabilityInfo::~QosSustainabilityInfo() {}

void QosSustainabilityInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const QosSustainabilityInfo &o) {
  j = nlohmann::json();
  if (o.areaInfoIsSet())
    j["areaInfo"] = o.m_AreaInfo;
  if (o.startTsIsSet())
    j["startTs"] = o.m_StartTs;
  if (o.endTsIsSet())
    j["endTs"] = o.m_EndTs;
  if (o.qosFlowRetThdIsSet())
    j["qosFlowRetThd"] = o.m_QosFlowRetThd;
  if (o.ranUeThrouThdIsSet())
    j["ranUeThrouThd"] = o.m_RanUeThrouThd;
  if (o.snssaiIsSet())
    j["snssai"] = o.m_Snssai;
  if (o.confidenceIsSet())
    j["confidence"] = o.m_Confidence;
}

void from_json(const nlohmann::json &j, QosSustainabilityInfo &o) {
  if (j.find("areaInfo") != j.end()) {
    j.at("areaInfo").get_to(o.m_AreaInfo);
    o.m_AreaInfoIsSet = true;
  }
  if (j.find("startTs") != j.end()) {
    j.at("startTs").get_to(o.m_StartTs);
    o.m_StartTsIsSet = true;
  }
  if (j.find("endTs") != j.end()) {
    j.at("endTs").get_to(o.m_EndTs);
    o.m_EndTsIsSet = true;
  }
  if (j.find("qosFlowRetThd") != j.end()) {
    j.at("qosFlowRetThd").get_to(o.m_QosFlowRetThd);
    o.m_QosFlowRetThdIsSet = true;
  }
  if (j.find("ranUeThrouThd") != j.end()) {
    j.at("ranUeThrouThd").get_to(o.m_RanUeThrouThd);
    o.m_RanUeThrouThdIsSet = true;
  }
  if (j.find("snssai") != j.end()) {
    j.at("snssai").get_to(o.m_Snssai);
    o.m_SnssaiIsSet = true;
  }
  if (j.find("confidence") != j.end()) {
    j.at("confidence").get_to(o.m_Confidence);
    o.m_ConfidenceIsSet = true;
  }
}

NetworkAreaInfo QosSustainabilityInfo::getAreaInfo() const {
  return m_AreaInfo;
}
void QosSustainabilityInfo::setAreaInfo(NetworkAreaInfo const &value) {
  m_AreaInfo = value;
  m_AreaInfoIsSet = true;
}
bool QosSustainabilityInfo::areaInfoIsSet() const { return m_AreaInfoIsSet; }
void QosSustainabilityInfo::unsetAreaInfo() { m_AreaInfoIsSet = false; }
std::string QosSustainabilityInfo::getStartTs() const { return m_StartTs; }
void QosSustainabilityInfo::setStartTs(std::string const &value) {
  m_StartTs = value;
  m_StartTsIsSet = true;
}
bool QosSustainabilityInfo::startTsIsSet() const { return m_StartTsIsSet; }
void QosSustainabilityInfo::unsetStartTs() { m_StartTsIsSet = false; }
std::string QosSustainabilityInfo::getEndTs() const { return m_EndTs; }
void QosSustainabilityInfo::setEndTs(std::string const &value) {
  m_EndTs = value;
  m_EndTsIsSet = true;
}
bool QosSustainabilityInfo::endTsIsSet() const { return m_EndTsIsSet; }
void QosSustainabilityInfo::unsetEndTs() { m_EndTsIsSet = false; }
RetainabilityThreshold QosSustainabilityInfo::getQosFlowRetThd() const {
  return m_QosFlowRetThd;
}
void QosSustainabilityInfo::setQosFlowRetThd(
    RetainabilityThreshold const &value) {
  m_QosFlowRetThd = value;
  m_QosFlowRetThdIsSet = true;
}
bool QosSustainabilityInfo::qosFlowRetThdIsSet() const {
  return m_QosFlowRetThdIsSet;
}
void QosSustainabilityInfo::unsetQosFlowRetThd() {
  m_QosFlowRetThdIsSet = false;
}
std::string QosSustainabilityInfo::getRanUeThrouThd() const {
  return m_RanUeThrouThd;
}
void QosSustainabilityInfo::setRanUeThrouThd(std::string const &value) {
  m_RanUeThrouThd = value;
  m_RanUeThrouThdIsSet = true;
}
bool QosSustainabilityInfo::ranUeThrouThdIsSet() const {
  return m_RanUeThrouThdIsSet;
}
void QosSustainabilityInfo::unsetRanUeThrouThd() {
  m_RanUeThrouThdIsSet = false;
}
Snssai QosSustainabilityInfo::getSnssai() const { return m_Snssai; }
void QosSustainabilityInfo::setSnssai(Snssai const &value) {
  m_Snssai = value;
  m_SnssaiIsSet = true;
}
bool QosSustainabilityInfo::snssaiIsSet() const { return m_SnssaiIsSet; }
void QosSustainabilityInfo::unsetSnssai() { m_SnssaiIsSet = false; }
int32_t QosSustainabilityInfo::getConfidence() const { return m_Confidence; }
void QosSustainabilityInfo::setConfidence(int32_t const value) {
  m_Confidence = value;
  m_ConfidenceIsSet = true;
}
bool QosSustainabilityInfo::confidenceIsSet() const {
  return m_ConfidenceIsSet;
}
void QosSustainabilityInfo::unsetConfidence() { m_ConfidenceIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
