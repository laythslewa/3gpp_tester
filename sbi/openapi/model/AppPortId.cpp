/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppPortId.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AppPortId::AppPortId() {
  m_DestinationPort = 0;
  m_DestinationPortIsSet = false;
  m_OriginatorPort = 0;
  m_OriginatorPortIsSet = false;
}

AppPortId::~AppPortId() {}

void AppPortId::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AppPortId &o) {
  j = nlohmann::json();
  if (o.destinationPortIsSet())
    j["destinationPort"] = o.m_DestinationPort;
  if (o.originatorPortIsSet())
    j["originatorPort"] = o.m_OriginatorPort;
}

void from_json(const nlohmann::json &j, AppPortId &o) {
  if (j.find("destinationPort") != j.end()) {
    j.at("destinationPort").get_to(o.m_DestinationPort);
    o.m_DestinationPortIsSet = true;
  }
  if (j.find("originatorPort") != j.end()) {
    j.at("originatorPort").get_to(o.m_OriginatorPort);
    o.m_OriginatorPortIsSet = true;
  }
}

int32_t AppPortId::getDestinationPort() const { return m_DestinationPort; }
void AppPortId::setDestinationPort(int32_t const value) {
  m_DestinationPort = value;
  m_DestinationPortIsSet = true;
}
bool AppPortId::destinationPortIsSet() const { return m_DestinationPortIsSet; }
void AppPortId::unsetDestinationPort() { m_DestinationPortIsSet = false; }
int32_t AppPortId::getOriginatorPort() const { return m_OriginatorPort; }
void AppPortId::setOriginatorPort(int32_t const value) {
  m_OriginatorPort = value;
  m_OriginatorPortIsSet = true;
}
bool AppPortId::originatorPortIsSet() const { return m_OriginatorPortIsSet; }
void AppPortId::unsetOriginatorPort() { m_OriginatorPortIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
