/**
 * 3gpp-chargeable-party
 * API for Chargeable Party management. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * ChargeablePartyTransactionOperationApiImpl.h
 *
 *
 */

#ifndef CHARGEABLE_PARTY_TRANSACTION_OPERATION_API_IMPL_H_
#define CHARGEABLE_PARTY_TRANSACTION_OPERATION_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <ChargeablePartyTransactionOperationApi.h>

#include <pistache/optional.h>

#include "ChargeableParty.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class ChargeablePartyTransactionOperationApiImpl
    : public org::openapitools::server::api::
          ChargeablePartyTransactionOperationApi {
public:
  ChargeablePartyTransactionOperationApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~ChargeablePartyTransactionOperationApiImpl() {}

  void scs_as_id_transactions_get(const std::string &scsAsId,
                                  Pistache::Http::ResponseWriter &response);
  void scs_as_id_transactions_post(const std::string &scsAsId,
                                   const ChargeableParty &chargeableParty,
                                   Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif