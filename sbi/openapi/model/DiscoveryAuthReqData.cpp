/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "DiscoveryAuthReqData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

DiscoveryAuthReqData::DiscoveryAuthReqData() {
  m_RestrictedDiscDataIsSet = false;
}

DiscoveryAuthReqData::~DiscoveryAuthReqData() {}

void DiscoveryAuthReqData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const DiscoveryAuthReqData &o) {
  j = nlohmann::json();
  j["discType"] = o.m_DiscType;
  if (o.restrictedDiscDataIsSet())
    j["restrictedDiscData"] = o.m_RestrictedDiscData;
}

void from_json(const nlohmann::json &j, DiscoveryAuthReqData &o) {
  j.at("discType").get_to(o.m_DiscType);
  if (j.find("restrictedDiscData") != j.end()) {
    j.at("restrictedDiscData").get_to(o.m_RestrictedDiscData);
    o.m_RestrictedDiscDataIsSet = true;
  }
}

DiscoveryType DiscoveryAuthReqData::getDiscType() const { return m_DiscType; }
void DiscoveryAuthReqData::setDiscType(DiscoveryType const &value) {
  m_DiscType = value;
}
DiscDataForRestricted DiscoveryAuthReqData::getRestrictedDiscData() const {
  return m_RestrictedDiscData;
}
void DiscoveryAuthReqData::setRestrictedDiscData(
    DiscDataForRestricted const &value) {
  m_RestrictedDiscData = value;
  m_RestrictedDiscDataIsSet = true;
}
bool DiscoveryAuthReqData::restrictedDiscDataIsSet() const {
  return m_RestrictedDiscDataIsSet;
}
void DiscoveryAuthReqData::unsetRestrictedDiscData() {
  m_RestrictedDiscDataIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
