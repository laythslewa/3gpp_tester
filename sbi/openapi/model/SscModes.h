/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SscModes.h
 *
 *
 */

#ifndef SscModes_H_
#define SscModes_H_

#include "SscMode.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class SscModes {
public:
  SscModes();
  virtual ~SscModes();

  void validate();

  /////////////////////////////////////////////
  /// SscModes members

  /// <summary>
  ///
  /// </summary>
  SscMode getDefaultSscMode() const;
  void setDefaultSscMode(SscMode const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<SscMode> &getAllowedSscModes();
  void setAllowedSscModes(std::vector<SscMode> const &value);
  bool allowedSscModesIsSet() const;
  void unsetAllowedSscModes();

  friend void to_json(nlohmann::json &j, const SscModes &o);
  friend void from_json(const nlohmann::json &j, SscModes &o);

protected:
  SscMode m_DefaultSscMode;

  std::vector<SscMode> m_AllowedSscModes;
  bool m_AllowedSscModesIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SscModes_H_ */
