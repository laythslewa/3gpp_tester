/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * MoExpDataCounter.h
 *
 *
 */

#ifndef MoExpDataCounter_H_
#define MoExpDataCounter_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class MoExpDataCounter {
public:
  MoExpDataCounter();
  virtual ~MoExpDataCounter();

  void validate();

  /////////////////////////////////////////////
  /// MoExpDataCounter members

  /// <summary>
  /// Unsigned integer identifying the MO Exception Data Counter, as specified
  /// in clause 5.31.14.3 of 3GPP TS 23.501.
  /// </summary>
  int32_t getCounter() const;
  void setCounter(int32_t const value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getTimeStamp() const;
  void setTimeStamp(std::string const &value);
  bool timeStampIsSet() const;
  void unsetTimeStamp();

  friend void to_json(nlohmann::json &j, const MoExpDataCounter &o);
  friend void from_json(const nlohmann::json &j, MoExpDataCounter &o);

protected:
  int32_t m_Counter;

  std::string m_TimeStamp;
  bool m_TimeStampIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* MoExpDataCounter_H_ */
