/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "MetaData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

MetaData::MetaData() {
  m_N32fContextId = "";
  m_MessageId = "";
  m_AuthorizedIpxId = "";
}

MetaData::~MetaData() {}

void MetaData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const MetaData &o) {
  j = nlohmann::json();
  j["n32fContextId"] = o.m_N32fContextId;
  j["messageId"] = o.m_MessageId;
  j["authorizedIpxId"] = o.m_AuthorizedIpxId;
}

void from_json(const nlohmann::json &j, MetaData &o) {
  j.at("n32fContextId").get_to(o.m_N32fContextId);
  j.at("messageId").get_to(o.m_MessageId);
  j.at("authorizedIpxId").get_to(o.m_AuthorizedIpxId);
}

std::string MetaData::getN32fContextId() const { return m_N32fContextId; }
void MetaData::setN32fContextId(std::string const &value) {
  m_N32fContextId = value;
}
std::string MetaData::getMessageId() const { return m_MessageId; }
void MetaData::setMessageId(std::string const &value) { m_MessageId = value; }
std::string MetaData::getAuthorizedIpxId() const { return m_AuthorizedIpxId; }
void MetaData::setAuthorizedIpxId(std::string const &value) {
  m_AuthorizedIpxId = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
