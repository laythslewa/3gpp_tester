/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * HttpHeader.h
 *
 * Contains the encoding of HTTP headers in the API request / response
 */

#ifndef HttpHeader_H_
#define HttpHeader_H_

#include "EncodedHttpHeaderValue.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the encoding of HTTP headers in the API request / response
/// </summary>
class HttpHeader {
public:
  HttpHeader();
  virtual ~HttpHeader();

  void validate();

  /////////////////////////////////////////////
  /// HttpHeader members

  /// <summary>
  ///
  /// </summary>
  std::string getHeader() const;
  void setHeader(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  EncodedHttpHeaderValue getValue() const;
  void setValue(EncodedHttpHeaderValue const &value);

  friend void to_json(nlohmann::json &j, const HttpHeader &o);
  friend void from_json(const nlohmann::json &j, HttpHeader &o);

protected:
  std::string m_Header;

  EncodedHttpHeaderValue m_Value;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* HttpHeader_H_ */
