/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UeId.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UeId::UeId() {
  m_Supi = "";
  m_GpsiListIsSet = false;
}

UeId::~UeId() {}

void UeId::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UeId &o) {
  j = nlohmann::json();
  j["supi"] = o.m_Supi;
  if (o.gpsiListIsSet() || !o.m_GpsiList.empty())
    j["gpsiList"] = o.m_GpsiList;
}

void from_json(const nlohmann::json &j, UeId &o) {
  j.at("supi").get_to(o.m_Supi);
  if (j.find("gpsiList") != j.end()) {
    j.at("gpsiList").get_to(o.m_GpsiList);
    o.m_GpsiListIsSet = true;
  }
}

std::string UeId::getSupi() const { return m_Supi; }
void UeId::setSupi(std::string const &value) { m_Supi = value; }
std::vector<std::string> &UeId::getGpsiList() { return m_GpsiList; }
void UeId::setGpsiList(std::vector<std::string> const &value) {
  m_GpsiList = value;
  m_GpsiListIsSet = true;
}
bool UeId::gpsiListIsSet() const { return m_GpsiListIsSet; }
void UeId::unsetGpsiList() { m_GpsiListIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
