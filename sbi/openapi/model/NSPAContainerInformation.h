/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NSPAContainerInformation.h
 *
 *
 */

#ifndef NSPAContainerInformation_H_
#define NSPAContainerInformation_H_

#include "NsiLoadLevelInfo.h"
#include "ServiceExperienceInfo.h"
#include "Throughput.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class NSPAContainerInformation {
public:
  NSPAContainerInformation();
  virtual ~NSPAContainerInformation();

  void validate();

  /////////////////////////////////////////////
  /// NSPAContainerInformation members

  /// <summary>
  ///
  /// </summary>
  int32_t getLatency() const;
  void setLatency(int32_t const value);
  bool latencyIsSet() const;
  void unsetLatency();
  /// <summary>
  ///
  /// </summary>
  Throughput getThroughput() const;
  void setThroughput(Throughput const &value);
  bool throughputIsSet() const;
  void unsetThroughput();
  /// <summary>
  ///
  /// </summary>
  std::string getMaximumPacketLossRate() const;
  void setMaximumPacketLossRate(std::string const &value);
  bool maximumPacketLossRateIsSet() const;
  void unsetMaximumPacketLossRate();
  /// <summary>
  ///
  /// </summary>
  ServiceExperienceInfo getServiceExperienceStatisticsData() const;
  void setServiceExperienceStatisticsData(ServiceExperienceInfo const &value);
  bool serviceExperienceStatisticsDataIsSet() const;
  void unsetServiceExperienceStatisticsData();
  /// <summary>
  ///
  /// </summary>
  int32_t getTheNumberOfPDUSessions() const;
  void setTheNumberOfPDUSessions(int32_t const value);
  bool theNumberOfPDUSessionsIsSet() const;
  void unsetTheNumberOfPDUSessions();
  /// <summary>
  ///
  /// </summary>
  int32_t getTheNumberOfRegisteredSubscribers() const;
  void setTheNumberOfRegisteredSubscribers(int32_t const value);
  bool theNumberOfRegisteredSubscribersIsSet() const;
  void unsetTheNumberOfRegisteredSubscribers();
  /// <summary>
  ///
  /// </summary>
  NsiLoadLevelInfo getLoadLevel() const;
  void setLoadLevel(NsiLoadLevelInfo const &value);
  bool loadLevelIsSet() const;
  void unsetLoadLevel();

  friend void to_json(nlohmann::json &j, const NSPAContainerInformation &o);
  friend void from_json(const nlohmann::json &j, NSPAContainerInformation &o);

protected:
  int32_t m_Latency;
  bool m_LatencyIsSet;
  Throughput m_Throughput;
  bool m_ThroughputIsSet;
  std::string m_MaximumPacketLossRate;
  bool m_MaximumPacketLossRateIsSet;
  ServiceExperienceInfo m_ServiceExperienceStatisticsData;
  bool m_ServiceExperienceStatisticsDataIsSet;
  int32_t m_TheNumberOfPDUSessions;
  bool m_TheNumberOfPDUSessionsIsSet;
  int32_t m_TheNumberOfRegisteredSubscribers;
  bool m_TheNumberOfRegisteredSubscribersIsSet;
  NsiLoadLevelInfo m_LoadLevel;
  bool m_LoadLevelIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NSPAContainerInformation_H_ */
