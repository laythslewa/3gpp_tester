/**
 * Nudsf_Timer
 * Nudsf Timer Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SearchCondition.h
 *
 * A logical condition
 */

#ifndef SearchCondition_H_
#define SearchCondition_H_

#include "ConditionOperator.h"
#include "SearchExpression.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A logical condition
/// </summary>
class SearchCondition {
public:
  SearchCondition();
  virtual ~SearchCondition();

  void validate();

  /////////////////////////////////////////////
  /// SearchCondition members

  /// <summary>
  ///
  /// </summary>
  ConditionOperator getCond() const;
  void setCond(ConditionOperator const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<SearchExpression> &getUnits();
  void setUnits(std::vector<SearchExpression> const &value);
  /// <summary>
  /// Represents the Identifier of a Meta schema.
  /// </summary>
  std::string getSchemaId() const;
  void setSchemaId(std::string const &value);
  bool schemaIdIsSet() const;
  void unsetSchemaId();

  friend void to_json(nlohmann::json &j, const SearchCondition &o);
  friend void from_json(const nlohmann::json &j, SearchCondition &o);

protected:
  ConditionOperator m_Cond;

  std::vector<SearchExpression> m_Units;

  std::string m_SchemaId;
  bool m_SchemaIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SearchCondition_H_ */
