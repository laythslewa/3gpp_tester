/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AnalyticsSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AnalyticsSubscription::AnalyticsSubscription() {
  m_NwdafId = "";
  m_NwdafIdIsSet = false;
  m_NwdafSetId = "";
  m_NwdafSetIdIsSet = false;
}

AnalyticsSubscription::~AnalyticsSubscription() {}

void AnalyticsSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AnalyticsSubscription &o) {
  j = nlohmann::json();
  if (o.nwdafIdIsSet())
    j["nwdafId"] = o.m_NwdafId;
  if (o.nwdafSetIdIsSet())
    j["nwdafSetId"] = o.m_NwdafSetId;
  j["nwdafSubscriptionList"] = o.m_NwdafSubscriptionList;
}

void from_json(const nlohmann::json &j, AnalyticsSubscription &o) {
  if (j.find("nwdafId") != j.end()) {
    j.at("nwdafId").get_to(o.m_NwdafId);
    o.m_NwdafIdIsSet = true;
  }
  if (j.find("nwdafSetId") != j.end()) {
    j.at("nwdafSetId").get_to(o.m_NwdafSetId);
    o.m_NwdafSetIdIsSet = true;
  }
  j.at("nwdafSubscriptionList").get_to(o.m_NwdafSubscriptionList);
}

std::string AnalyticsSubscription::getNwdafId() const { return m_NwdafId; }
void AnalyticsSubscription::setNwdafId(std::string const &value) {
  m_NwdafId = value;
  m_NwdafIdIsSet = true;
}
bool AnalyticsSubscription::nwdafIdIsSet() const { return m_NwdafIdIsSet; }
void AnalyticsSubscription::unsetNwdafId() { m_NwdafIdIsSet = false; }
std::string AnalyticsSubscription::getNwdafSetId() const {
  return m_NwdafSetId;
}
void AnalyticsSubscription::setNwdafSetId(std::string const &value) {
  m_NwdafSetId = value;
  m_NwdafSetIdIsSet = true;
}
bool AnalyticsSubscription::nwdafSetIdIsSet() const {
  return m_NwdafSetIdIsSet;
}
void AnalyticsSubscription::unsetNwdafSetId() { m_NwdafSetIdIsSet = false; }
std::vector<NwdafSubscription> &
AnalyticsSubscription::getNwdafSubscriptionList() {
  return m_NwdafSubscriptionList;
}
void AnalyticsSubscription::setNwdafSubscriptionList(
    std::vector<NwdafSubscription> const &value) {
  m_NwdafSubscriptionList = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
