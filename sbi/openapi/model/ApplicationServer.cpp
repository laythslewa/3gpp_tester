/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ApplicationServer.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ApplicationServer::ApplicationServer() {
  m_AsUri = "";
  m_SessionContinue = false;
  m_SessionContinueIsSet = false;
  m_ServiceInfoListIsSet = false;
}

ApplicationServer::~ApplicationServer() {}

void ApplicationServer::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ApplicationServer &o) {
  j = nlohmann::json();
  j["asUri"] = o.m_AsUri;
  if (o.sessionContinueIsSet())
    j["sessionContinue"] = o.m_SessionContinue;
  if (o.serviceInfoListIsSet() || !o.m_ServiceInfoList.empty())
    j["serviceInfoList"] = o.m_ServiceInfoList;
}

void from_json(const nlohmann::json &j, ApplicationServer &o) {
  j.at("asUri").get_to(o.m_AsUri);
  if (j.find("sessionContinue") != j.end()) {
    j.at("sessionContinue").get_to(o.m_SessionContinue);
    o.m_SessionContinueIsSet = true;
  }
  if (j.find("serviceInfoList") != j.end()) {
    j.at("serviceInfoList").get_to(o.m_ServiceInfoList);
    o.m_ServiceInfoListIsSet = true;
  }
}

std::string ApplicationServer::getAsUri() const { return m_AsUri; }
void ApplicationServer::setAsUri(std::string const &value) { m_AsUri = value; }
bool ApplicationServer::isSessionContinue() const { return m_SessionContinue; }
void ApplicationServer::setSessionContinue(bool const value) {
  m_SessionContinue = value;
  m_SessionContinueIsSet = true;
}
bool ApplicationServer::sessionContinueIsSet() const {
  return m_SessionContinueIsSet;
}
void ApplicationServer::unsetSessionContinue() {
  m_SessionContinueIsSet = false;
}
std::vector<ServiceInformation> &ApplicationServer::getServiceInfoList() {
  return m_ServiceInfoList;
}
void ApplicationServer::setServiceInfoList(
    std::vector<ServiceInformation> const &value) {
  m_ServiceInfoList = value;
  m_ServiceInfoListIsSet = true;
}
bool ApplicationServer::serviceInfoListIsSet() const {
  return m_ServiceInfoListIsSet;
}
void ApplicationServer::unsetServiceInfoList() {
  m_ServiceInfoListIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
