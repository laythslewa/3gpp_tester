/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmPolicyDnnDataPatch.h
 *
 * Contains the SM policy data for a given DNN (and S-NSSAI).
 */

#ifndef SmPolicyDnnDataPatch_H_
#define SmPolicyDnnDataPatch_H_

#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the SM policy data for a given DNN (and S-NSSAI).
/// </summary>
class SmPolicyDnnDataPatch {
public:
  SmPolicyDnnDataPatch();
  virtual ~SmPolicyDnnDataPatch();

  void validate();

  /////////////////////////////////////////////
  /// SmPolicyDnnDataPatch members

  /// <summary>
  /// String representing a Data Network as defined in clause 9A of 3GPP
  /// TS 23.003; it shall contain either a DNN Network Identifier, or a full DNN
  /// with both the Network Identifier and Operator Identifier, as specified in
  /// 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in
  /// which the labels are separated by dots (e.g.
  /// \&quot;Label1.Label2.Label3\&quot;).
  /// </summary>
  std::string getDnn() const;
  void setDnn(std::string const &value);
  /// <summary>
  /// Contains updated transfer policies of background data transfer. Any string
  /// value can be used as a key of the map.
  /// </summary>
  std::map<std::string, std::string> &getBdtRefIds();
  void setBdtRefIds(std::map<std::string, std::string> const &value);
  bool bdtRefIdsIsSet() const;
  void unsetBdtRefIds();

  friend void to_json(nlohmann::json &j, const SmPolicyDnnDataPatch &o);
  friend void from_json(const nlohmann::json &j, SmPolicyDnnDataPatch &o);

protected:
  std::string m_Dnn;

  std::map<std::string, std::string> m_BdtRefIds;
  bool m_BdtRefIdsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmPolicyDnnDataPatch_H_ */
