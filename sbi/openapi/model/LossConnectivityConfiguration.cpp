/**
 * Nhss_EE
 * HSS Event Exposure Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LossConnectivityConfiguration.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LossConnectivityConfiguration::LossConnectivityConfiguration() {
  m_MaxDetectionTime = 0;
  m_MaxDetectionTimeIsSet = false;
}

LossConnectivityConfiguration::~LossConnectivityConfiguration() {}

void LossConnectivityConfiguration::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LossConnectivityConfiguration &o) {
  j = nlohmann::json();
  if (o.maxDetectionTimeIsSet())
    j["maxDetectionTime"] = o.m_MaxDetectionTime;
}

void from_json(const nlohmann::json &j, LossConnectivityConfiguration &o) {
  if (j.find("maxDetectionTime") != j.end()) {
    j.at("maxDetectionTime").get_to(o.m_MaxDetectionTime);
    o.m_MaxDetectionTimeIsSet = true;
  }
}

int32_t LossConnectivityConfiguration::getMaxDetectionTime() const {
  return m_MaxDetectionTime;
}
void LossConnectivityConfiguration::setMaxDetectionTime(int32_t const value) {
  m_MaxDetectionTime = value;
  m_MaxDetectionTimeIsSet = true;
}
bool LossConnectivityConfiguration::maxDetectionTimeIsSet() const {
  return m_MaxDetectionTimeIsSet;
}
void LossConnectivityConfiguration::unsetMaxDetectionTime() {
  m_MaxDetectionTimeIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
