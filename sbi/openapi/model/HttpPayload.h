/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * HttpPayload.h
 *
 * Contains the encoding of JSON payload in the API request / response
 */

#ifndef HttpPayload_H_
#define HttpPayload_H_

#include "IeLocation.h"
#include "Object.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the encoding of JSON payload in the API request / response
/// </summary>
class HttpPayload {
public:
  HttpPayload();
  virtual ~HttpPayload();

  void validate();

  /////////////////////////////////////////////
  /// HttpPayload members

  /// <summary>
  ///
  /// </summary>
  std::string getIePath() const;
  void setIePath(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  IeLocation getIeValueLocation() const;
  void setIeValueLocation(IeLocation const &value);
  /// <summary>
  ///
  /// </summary>
  Object getValue() const;
  void setValue(Object const &value);

  friend void to_json(nlohmann::json &j, const HttpPayload &o);
  friend void from_json(const nlohmann::json &j, HttpPayload &o);

protected:
  std::string m_IePath;

  IeLocation m_IeValueLocation;

  Object m_Value;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* HttpPayload_H_ */
