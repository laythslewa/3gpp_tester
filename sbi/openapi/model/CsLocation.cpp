/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CsLocation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CsLocation::CsLocation() {
  m_MscNumber = "";
  m_VlrNumber = "";
  m_VlrLocationIsSet = false;
  m_CsgInformationIsSet = false;
  m_TimeZone = "";
  m_TimeZoneIsSet = false;
  m_RatTypeIsSet = false;
}

CsLocation::~CsLocation() {}

void CsLocation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CsLocation &o) {
  j = nlohmann::json();
  j["mscNumber"] = o.m_MscNumber;
  j["vlrNumber"] = o.m_VlrNumber;
  j["plmnId"] = o.m_PlmnId;
  if (o.vlrLocationIsSet())
    j["vlrLocation"] = o.m_VlrLocation;
  if (o.csgInformationIsSet())
    j["csgInformation"] = o.m_CsgInformation;
  if (o.timeZoneIsSet())
    j["timeZone"] = o.m_TimeZone;
  if (o.ratTypeIsSet())
    j["ratType"] = o.m_RatType;
}

void from_json(const nlohmann::json &j, CsLocation &o) {
  j.at("mscNumber").get_to(o.m_MscNumber);
  j.at("vlrNumber").get_to(o.m_VlrNumber);
  j.at("plmnId").get_to(o.m_PlmnId);
  if (j.find("vlrLocation") != j.end()) {
    j.at("vlrLocation").get_to(o.m_VlrLocation);
    o.m_VlrLocationIsSet = true;
  }
  if (j.find("csgInformation") != j.end()) {
    j.at("csgInformation").get_to(o.m_CsgInformation);
    o.m_CsgInformationIsSet = true;
  }
  if (j.find("timeZone") != j.end()) {
    j.at("timeZone").get_to(o.m_TimeZone);
    o.m_TimeZoneIsSet = true;
  }
  if (j.find("ratType") != j.end()) {
    j.at("ratType").get_to(o.m_RatType);
    o.m_RatTypeIsSet = true;
  }
}

std::string CsLocation::getMscNumber() const { return m_MscNumber; }
void CsLocation::setMscNumber(std::string const &value) { m_MscNumber = value; }
std::string CsLocation::getVlrNumber() const { return m_VlrNumber; }
void CsLocation::setVlrNumber(std::string const &value) { m_VlrNumber = value; }
PlmnId CsLocation::getPlmnId() const { return m_PlmnId; }
void CsLocation::setPlmnId(PlmnId const &value) { m_PlmnId = value; }
GeraLocation CsLocation::getVlrLocation() const { return m_VlrLocation; }
void CsLocation::setVlrLocation(GeraLocation const &value) {
  m_VlrLocation = value;
  m_VlrLocationIsSet = true;
}
bool CsLocation::vlrLocationIsSet() const { return m_VlrLocationIsSet; }
void CsLocation::unsetVlrLocation() { m_VlrLocationIsSet = false; }
CsgInformation CsLocation::getCsgInformation() const {
  return m_CsgInformation;
}
void CsLocation::setCsgInformation(CsgInformation const &value) {
  m_CsgInformation = value;
  m_CsgInformationIsSet = true;
}
bool CsLocation::csgInformationIsSet() const { return m_CsgInformationIsSet; }
void CsLocation::unsetCsgInformation() { m_CsgInformationIsSet = false; }
std::string CsLocation::getTimeZone() const { return m_TimeZone; }
void CsLocation::setTimeZone(std::string const &value) {
  m_TimeZone = value;
  m_TimeZoneIsSet = true;
}
bool CsLocation::timeZoneIsSet() const { return m_TimeZoneIsSet; }
void CsLocation::unsetTimeZone() { m_TimeZoneIsSet = false; }
RatType CsLocation::getRatType() const { return m_RatType; }
void CsLocation::setRatType(RatType const &value) {
  m_RatType = value;
  m_RatTypeIsSet = true;
}
bool CsLocation::ratTypeIsSet() const { return m_RatTypeIsSet; }
void CsLocation::unsetRatType() { m_RatTypeIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
