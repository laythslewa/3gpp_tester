/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LimitIdToMonitoringKey.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LimitIdToMonitoringKey::LimitIdToMonitoringKey() {
  m_LimitId = "";
  m_MonkeyIsSet = false;
}

LimitIdToMonitoringKey::~LimitIdToMonitoringKey() {}

void LimitIdToMonitoringKey::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LimitIdToMonitoringKey &o) {
  j = nlohmann::json();
  j["limitId"] = o.m_LimitId;
  if (o.monkeyIsSet() || !o.m_Monkey.empty())
    j["monkey"] = o.m_Monkey;
}

void from_json(const nlohmann::json &j, LimitIdToMonitoringKey &o) {
  j.at("limitId").get_to(o.m_LimitId);
  if (j.find("monkey") != j.end()) {
    j.at("monkey").get_to(o.m_Monkey);
    o.m_MonkeyIsSet = true;
  }
}

std::string LimitIdToMonitoringKey::getLimitId() const { return m_LimitId; }
void LimitIdToMonitoringKey::setLimitId(std::string const &value) {
  m_LimitId = value;
}
std::vector<std::string> &LimitIdToMonitoringKey::getMonkey() {
  return m_Monkey;
}
void LimitIdToMonitoringKey::setMonkey(std::vector<std::string> const &value) {
  m_Monkey = value;
  m_MonkeyIsSet = true;
}
bool LimitIdToMonitoringKey::monkeyIsSet() const { return m_MonkeyIsSet; }
void LimitIdToMonitoringKey::unsetMonkey() { m_MonkeyIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
