/**
 * 3gpp-network-status-reporting
 * API for reporting network status. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NetworkStatusReportingNotification.h
 *
 * Represents a network status reporting notification.
 */

#ifndef NetworkStatusReportingNotification_H_
#define NetworkStatusReportingNotification_H_

#include "CongestionType.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a network status reporting notification.
/// </summary>
class NetworkStatusReportingNotification {
public:
  NetworkStatusReportingNotification();
  virtual ~NetworkStatusReportingNotification();

  void validate();

  /////////////////////////////////////////////
  /// NetworkStatusReportingNotification members

  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getSubscription() const;
  void setSubscription(std::string const &value);
  /// <summary>
  /// Unsigned integer with valid values between 0 and 31. The value 0 indicates
  /// that there is no congestion. The value 1 is the lowest congestion level
  /// and value 31 is the highest congestion level.
  /// </summary>
  int32_t getNsiValue() const;
  void setNsiValue(int32_t const value);
  bool nsiValueIsSet() const;
  void unsetNsiValue();
  /// <summary>
  ///
  /// </summary>
  CongestionType getNsiType() const;
  void setNsiType(CongestionType const &value);
  bool nsiTypeIsSet() const;
  void unsetNsiType();

  friend void to_json(nlohmann::json &j,
                      const NetworkStatusReportingNotification &o);
  friend void from_json(const nlohmann::json &j,
                        NetworkStatusReportingNotification &o);

protected:
  std::string m_Subscription;

  int32_t m_NsiValue;
  bool m_NsiValueIsSet;
  CongestionType m_NsiType;
  bool m_NsiTypeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NetworkStatusReportingNotification_H_ */
