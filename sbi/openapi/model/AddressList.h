/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AddressList.h
 *
 * Represents a list of IPv4 and/or IPv6 addresses.
 */

#ifndef AddressList_H_
#define AddressList_H_

#include "Ipv6Addr.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a list of IPv4 and/or IPv6 addresses.
/// </summary>
class AddressList {
public:
  AddressList();
  virtual ~AddressList();

  void validate();

  /////////////////////////////////////////////
  /// AddressList members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getIpv4Addrs();
  void setIpv4Addrs(std::vector<std::string> const &value);
  bool ipv4AddrsIsSet() const;
  void unsetIpv4Addrs();
  /// <summary>
  ///
  /// </summary>
  std::vector<Ipv6Addr> &getIpv6Addrs();
  void setIpv6Addrs(std::vector<Ipv6Addr> const &value);
  bool ipv6AddrsIsSet() const;
  void unsetIpv6Addrs();

  friend void to_json(nlohmann::json &j, const AddressList &o);
  friend void from_json(const nlohmann::json &j, AddressList &o);

protected:
  std::vector<std::string> m_Ipv4Addrs;
  bool m_Ipv4AddrsIsSet;
  std::vector<Ipv6Addr> m_Ipv6Addrs;
  bool m_Ipv6AddrsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AddressList_H_ */
