/**
 * NSSF NS Selection
 * NSSF Network Slice Selection Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SliceInfoForPDUSession.h
 *
 * Contains the slice information requested during PDU Session establishment
 * procedure
 */

#ifndef SliceInfoForPDUSession_H_
#define SliceInfoForPDUSession_H_

#include "RoamingIndication.h"
#include "Snssai.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the slice information requested during PDU Session establishment
/// procedure
/// </summary>
class SliceInfoForPDUSession {
public:
  SliceInfoForPDUSession();
  virtual ~SliceInfoForPDUSession();

  void validate();

  /////////////////////////////////////////////
  /// SliceInfoForPDUSession members

  /// <summary>
  ///
  /// </summary>
  Snssai getSNssai() const;
  void setSNssai(Snssai const &value);
  /// <summary>
  ///
  /// </summary>
  RoamingIndication getRoamingIndication() const;
  void setRoamingIndication(RoamingIndication const &value);
  /// <summary>
  ///
  /// </summary>
  Snssai getHomeSnssai() const;
  void setHomeSnssai(Snssai const &value);
  bool homeSnssaiIsSet() const;
  void unsetHomeSnssai();

  friend void to_json(nlohmann::json &j, const SliceInfoForPDUSession &o);
  friend void from_json(const nlohmann::json &j, SliceInfoForPDUSession &o);

protected:
  Snssai m_SNssai;

  RoamingIndication m_RoamingIndication;

  Snssai m_HomeSnssai;
  bool m_HomeSnssaiIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SliceInfoForPDUSession_H_ */
