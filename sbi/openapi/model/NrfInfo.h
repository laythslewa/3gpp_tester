/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NrfInfo.h
 *
 * Information of an NRF NF Instance, used in hierarchical NRF deployments
 */

#ifndef NrfInfo_H_
#define NrfInfo_H_

#include "5GDdnmfInfo.h"
#include "AnyOfAanfInfoobject.h"
#include "AnyOfAmfInfoobject.h"
#include "AnyOfAusfInfoobject.h"
#include "AnyOfBsfInfoobject.h"
#include "AnyOfChfInfoobject.h"
#include "AnyOfGmlcInfoobject.h"
#include "AnyOfHssInfoobject.h"
#include "AnyOfLmfInfoobject.h"
#include "AnyOfNefInfoobject.h"
#include "AnyOfNwdafInfoobject.h"
#include "AnyOfPcfInfoobject.h"
#include "AnyOfPcscfInfoobject.h"
#include "AnyOfScpInfoobject.h"
#include "AnyOfSeppInfoobject.h"
#include "AnyOfSmfInfoobject.h"
#include "AnyOfUdmInfoobject.h"
#include "AnyOfUdrInfoobject.h"
#include "AnyOfUdsfInfoobject.h"
#include "AnyOfUpfInfoobject.h"
#include "DccfInfo.h"
#include "EasdfInfo.h"
#include "MfafInfo.h"
#include "NfInfo.h"
#include "NwdafInfo.h"
#include <map>
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Information of an NRF NF Instance, used in hierarchical NRF deployments
/// </summary>
class NrfInfo {
public:
  NrfInfo();
  virtual ~NrfInfo();

  void validate();

  /////////////////////////////////////////////
  /// NrfInfo members

  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfUdrInfoobject> &getServedUdrInfo();
  void setServedUdrInfo(std::map<std::string, AnyOfUdrInfoobject> const &value);
  bool servedUdrInfoIsSet() const;
  void unsetServedUdrInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfUdrInfoobject>> &
  getServedUdrInfoList();
  void setServedUdrInfoList(
      std::map<std::string, std::map<std::string, AnyOfUdrInfoobject>> const
          &value);
  bool servedUdrInfoListIsSet() const;
  void unsetServedUdrInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfUdmInfoobject> &getServedUdmInfo();
  void setServedUdmInfo(std::map<std::string, AnyOfUdmInfoobject> const &value);
  bool servedUdmInfoIsSet() const;
  void unsetServedUdmInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfUdmInfoobject>> &
  getServedUdmInfoList();
  void setServedUdmInfoList(
      std::map<std::string, std::map<std::string, AnyOfUdmInfoobject>> const
          &value);
  bool servedUdmInfoListIsSet() const;
  void unsetServedUdmInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfAusfInfoobject> &getServedAusfInfo();
  void
  setServedAusfInfo(std::map<std::string, AnyOfAusfInfoobject> const &value);
  bool servedAusfInfoIsSet() const;
  void unsetServedAusfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfAusfInfoobject>> &
  getServedAusfInfoList();
  void setServedAusfInfoList(
      std::map<std::string, std::map<std::string, AnyOfAusfInfoobject>> const
          &value);
  bool servedAusfInfoListIsSet() const;
  void unsetServedAusfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfAmfInfoobject> &getServedAmfInfo();
  void setServedAmfInfo(std::map<std::string, AnyOfAmfInfoobject> const &value);
  bool servedAmfInfoIsSet() const;
  void unsetServedAmfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfAmfInfoobject>> &
  getServedAmfInfoList();
  void setServedAmfInfoList(
      std::map<std::string, std::map<std::string, AnyOfAmfInfoobject>> const
          &value);
  bool servedAmfInfoListIsSet() const;
  void unsetServedAmfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfSmfInfoobject> &getServedSmfInfo();
  void setServedSmfInfo(std::map<std::string, AnyOfSmfInfoobject> const &value);
  bool servedSmfInfoIsSet() const;
  void unsetServedSmfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfSmfInfoobject>> &
  getServedSmfInfoList();
  void setServedSmfInfoList(
      std::map<std::string, std::map<std::string, AnyOfSmfInfoobject>> const
          &value);
  bool servedSmfInfoListIsSet() const;
  void unsetServedSmfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfUpfInfoobject> &getServedUpfInfo();
  void setServedUpfInfo(std::map<std::string, AnyOfUpfInfoobject> const &value);
  bool servedUpfInfoIsSet() const;
  void unsetServedUpfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfUpfInfoobject>> &
  getServedUpfInfoList();
  void setServedUpfInfoList(
      std::map<std::string, std::map<std::string, AnyOfUpfInfoobject>> const
          &value);
  bool servedUpfInfoListIsSet() const;
  void unsetServedUpfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfPcfInfoobject> &getServedPcfInfo();
  void setServedPcfInfo(std::map<std::string, AnyOfPcfInfoobject> const &value);
  bool servedPcfInfoIsSet() const;
  void unsetServedPcfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfPcfInfoobject>> &
  getServedPcfInfoList();
  void setServedPcfInfoList(
      std::map<std::string, std::map<std::string, AnyOfPcfInfoobject>> const
          &value);
  bool servedPcfInfoListIsSet() const;
  void unsetServedPcfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfBsfInfoobject> &getServedBsfInfo();
  void setServedBsfInfo(std::map<std::string, AnyOfBsfInfoobject> const &value);
  bool servedBsfInfoIsSet() const;
  void unsetServedBsfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfBsfInfoobject>> &
  getServedBsfInfoList();
  void setServedBsfInfoList(
      std::map<std::string, std::map<std::string, AnyOfBsfInfoobject>> const
          &value);
  bool servedBsfInfoListIsSet() const;
  void unsetServedBsfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfChfInfoobject> &getServedChfInfo();
  void setServedChfInfo(std::map<std::string, AnyOfChfInfoobject> const &value);
  bool servedChfInfoIsSet() const;
  void unsetServedChfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfChfInfoobject>> &
  getServedChfInfoList();
  void setServedChfInfoList(
      std::map<std::string, std::map<std::string, AnyOfChfInfoobject>> const
          &value);
  bool servedChfInfoListIsSet() const;
  void unsetServedChfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfNefInfoobject> &getServedNefInfo();
  void setServedNefInfo(std::map<std::string, AnyOfNefInfoobject> const &value);
  bool servedNefInfoIsSet() const;
  void unsetServedNefInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfNwdafInfoobject> &getServedNwdafInfo();
  void
  setServedNwdafInfo(std::map<std::string, AnyOfNwdafInfoobject> const &value);
  bool servedNwdafInfoIsSet() const;
  void unsetServedNwdafInfo();
  /// <summary>
  /// A map (list of key-value pairs) where NF Instance Id serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, NwdafInfo>> &
  getServedNwdafInfoList();
  void setServedNwdafInfoList(
      std::map<std::string, std::map<std::string, NwdafInfo>> const &value);
  bool servedNwdafInfoListIsSet() const;
  void unsetServedNwdafInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfPcscfInfoobject>> &
  getServedPcscfInfoList();
  void setServedPcscfInfoList(
      std::map<std::string, std::map<std::string, AnyOfPcscfInfoobject>> const
          &value);
  bool servedPcscfInfoListIsSet() const;
  void unsetServedPcscfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfGmlcInfoobject> &getServedGmlcInfo();
  void
  setServedGmlcInfo(std::map<std::string, AnyOfGmlcInfoobject> const &value);
  bool servedGmlcInfoIsSet() const;
  void unsetServedGmlcInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfLmfInfoobject> &getServedLmfInfo();
  void setServedLmfInfo(std::map<std::string, AnyOfLmfInfoobject> const &value);
  bool servedLmfInfoIsSet() const;
  void unsetServedLmfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, NfInfo> &getServedNfInfo();
  void setServedNfInfo(std::map<std::string, NfInfo> const &value);
  bool servedNfInfoIsSet() const;
  void unsetServedNfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfHssInfoobject>> &
  getServedHssInfoList();
  void setServedHssInfoList(
      std::map<std::string, std::map<std::string, AnyOfHssInfoobject>> const
          &value);
  bool servedHssInfoListIsSet() const;
  void unsetServedHssInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfUdsfInfoobject> &getServedUdsfInfo();
  void
  setServedUdsfInfo(std::map<std::string, AnyOfUdsfInfoobject> const &value);
  bool servedUdsfInfoIsSet() const;
  void unsetServedUdsfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfUdsfInfoobject>> &
  getServedUdsfInfoList();
  void setServedUdsfInfoList(
      std::map<std::string, std::map<std::string, AnyOfUdsfInfoobject>> const
          &value);
  bool servedUdsfInfoListIsSet() const;
  void unsetServedUdsfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfScpInfoobject> &getServedScpInfoList();
  void
  setServedScpInfoList(std::map<std::string, AnyOfScpInfoobject> const &value);
  bool servedScpInfoListIsSet() const;
  void unsetServedScpInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where nfInstanceId serves as key
  /// </summary>
  std::map<std::string, AnyOfSeppInfoobject> &getServedSeppInfoList();
  void setServedSeppInfoList(
      std::map<std::string, AnyOfSeppInfoobject> const &value);
  bool servedSeppInfoListIsSet() const;
  void unsetServedSeppInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where NF Instance Id serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, AnyOfAanfInfoobject>> &
  getServedAanfInfoList();
  void setServedAanfInfoList(
      std::map<std::string, std::map<std::string, AnyOfAanfInfoobject>> const
          &value);
  bool servedAanfInfoListIsSet() const;
  void unsetServedAanfInfoList();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, 5GDdnmfInfo> &getServed5gDdnmfInfo();
  void setServed5gDdnmfInfo(std::map<std::string, 5GDdnmfInfo> const &value);
  bool served5gDdnmfInfoIsSet() const;
  void unsetServed5gDdnmfInfo();
  /// <summary>
  /// A map (list of key-value pairs) where NF Instance Id serves as key
  /// </summary>
  std::map<std::string, MfafInfo> &getServedMfafInfoList();
  void setServedMfafInfoList(std::map<std::string, MfafInfo> const &value);
  bool servedMfafInfoListIsSet() const;
  void unsetServedMfafInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where NF Instance Id serves as key
  /// </summary>
  std::map<std::string, std::map<std::string, EasdfInfo>> &
  getServedEasdfInfoList();
  void setServedEasdfInfoList(
      std::map<std::string, std::map<std::string, EasdfInfo>> const &value);
  bool servedEasdfInfoListIsSet() const;
  void unsetServedEasdfInfoList();
  /// <summary>
  /// A map (list of key-value pairs) where NF Instance Id serves as key
  /// </summary>
  std::map<std::string, DccfInfo> &getServedDccfInfoList();
  void setServedDccfInfoList(std::map<std::string, DccfInfo> const &value);
  bool servedDccfInfoListIsSet() const;
  void unsetServedDccfInfoList();

  friend void to_json(nlohmann::json &j, const NrfInfo &o);
  friend void from_json(const nlohmann::json &j, NrfInfo &o);

protected:
  std::map<std::string, AnyOfUdrInfoobject> m_ServedUdrInfo;
  bool m_ServedUdrInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfUdrInfoobject>>
      m_ServedUdrInfoList;
  bool m_ServedUdrInfoListIsSet;
  std::map<std::string, AnyOfUdmInfoobject> m_ServedUdmInfo;
  bool m_ServedUdmInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfUdmInfoobject>>
      m_ServedUdmInfoList;
  bool m_ServedUdmInfoListIsSet;
  std::map<std::string, AnyOfAusfInfoobject> m_ServedAusfInfo;
  bool m_ServedAusfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfAusfInfoobject>>
      m_ServedAusfInfoList;
  bool m_ServedAusfInfoListIsSet;
  std::map<std::string, AnyOfAmfInfoobject> m_ServedAmfInfo;
  bool m_ServedAmfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfAmfInfoobject>>
      m_ServedAmfInfoList;
  bool m_ServedAmfInfoListIsSet;
  std::map<std::string, AnyOfSmfInfoobject> m_ServedSmfInfo;
  bool m_ServedSmfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfSmfInfoobject>>
      m_ServedSmfInfoList;
  bool m_ServedSmfInfoListIsSet;
  std::map<std::string, AnyOfUpfInfoobject> m_ServedUpfInfo;
  bool m_ServedUpfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfUpfInfoobject>>
      m_ServedUpfInfoList;
  bool m_ServedUpfInfoListIsSet;
  std::map<std::string, AnyOfPcfInfoobject> m_ServedPcfInfo;
  bool m_ServedPcfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfPcfInfoobject>>
      m_ServedPcfInfoList;
  bool m_ServedPcfInfoListIsSet;
  std::map<std::string, AnyOfBsfInfoobject> m_ServedBsfInfo;
  bool m_ServedBsfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfBsfInfoobject>>
      m_ServedBsfInfoList;
  bool m_ServedBsfInfoListIsSet;
  std::map<std::string, AnyOfChfInfoobject> m_ServedChfInfo;
  bool m_ServedChfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfChfInfoobject>>
      m_ServedChfInfoList;
  bool m_ServedChfInfoListIsSet;
  std::map<std::string, AnyOfNefInfoobject> m_ServedNefInfo;
  bool m_ServedNefInfoIsSet;
  std::map<std::string, AnyOfNwdafInfoobject> m_ServedNwdafInfo;
  bool m_ServedNwdafInfoIsSet;
  std::map<std::string, std::map<std::string, NwdafInfo>> m_ServedNwdafInfoList;
  bool m_ServedNwdafInfoListIsSet;
  std::map<std::string, std::map<std::string, AnyOfPcscfInfoobject>>
      m_ServedPcscfInfoList;
  bool m_ServedPcscfInfoListIsSet;
  std::map<std::string, AnyOfGmlcInfoobject> m_ServedGmlcInfo;
  bool m_ServedGmlcInfoIsSet;
  std::map<std::string, AnyOfLmfInfoobject> m_ServedLmfInfo;
  bool m_ServedLmfInfoIsSet;
  std::map<std::string, NfInfo> m_ServedNfInfo;
  bool m_ServedNfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfHssInfoobject>>
      m_ServedHssInfoList;
  bool m_ServedHssInfoListIsSet;
  std::map<std::string, AnyOfUdsfInfoobject> m_ServedUdsfInfo;
  bool m_ServedUdsfInfoIsSet;
  std::map<std::string, std::map<std::string, AnyOfUdsfInfoobject>>
      m_ServedUdsfInfoList;
  bool m_ServedUdsfInfoListIsSet;
  std::map<std::string, AnyOfScpInfoobject> m_ServedScpInfoList;
  bool m_ServedScpInfoListIsSet;
  std::map<std::string, AnyOfSeppInfoobject> m_ServedSeppInfoList;
  bool m_ServedSeppInfoListIsSet;
  std::map<std::string, std::map<std::string, AnyOfAanfInfoobject>>
      m_ServedAanfInfoList;
  bool m_ServedAanfInfoListIsSet;
  std::map<std::string, 5GDdnmfInfo> m_Served5gDdnmfInfo;
  bool m_Served5gDdnmfInfoIsSet;
  std::map<std::string, MfafInfo> m_ServedMfafInfoList;
  bool m_ServedMfafInfoListIsSet;
  std::map<std::string, std::map<std::string, EasdfInfo>> m_ServedEasdfInfoList;
  bool m_ServedEasdfInfoListIsSet;
  std::map<std::string, DccfInfo> m_ServedDccfInfoList;
  bool m_ServedDccfInfoListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NrfInfo_H_ */
