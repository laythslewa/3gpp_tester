/**
 * Nudm_PP
 * Nudm Parameter Provision Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * ParameterProvisioningDataEntryDocumentApiImpl.h
 *
 *
 */

#ifndef PARAMETER_PROVISIONING_DATA_ENTRY_DOCUMENT_API_IMPL_H_
#define PARAMETER_PROVISIONING_DATA_ENTRY_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <ParameterProvisioningDataEntryDocumentApi.h>

#include <pistache/optional.h>

#include "PpDataEntry.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class ParameterProvisioningDataEntryDocumentApiImpl
    : public org::openapitools::server::api::
          ParameterProvisioningDataEntryDocumentApi {
public:
  ParameterProvisioningDataEntryDocumentApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~ParameterProvisioningDataEntryDocumentApiImpl() {}

  void create_pp_data_entry(const std::string &ueId,
                            const std::string &afInstanceId,
                            const PpDataEntry &ppDataEntry,
                            Pistache::Http::ResponseWriter &response);
  void delete_pp_data_entry(const std::string &ueId,
                            const std::string &afInstanceId,
                            Pistache::Http::ResponseWriter &response);
  void
  get_pp_data_entry(const std::string &ueId, const std::string &afInstanceId,
                    const Pistache::Optional<std::string> &supportedFeatures,
                    Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif