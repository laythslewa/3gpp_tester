/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AuthenticationSoRDocumentApi.h
 *
 *
 */

#ifndef AuthenticationSoRDocumentApi_H_
#define AuthenticationSoRDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "SorData.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class AuthenticationSoRDocumentApi {
public:
  AuthenticationSoRDocumentApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~AuthenticationSoRDocumentApi() {}
  void init();

  const std::string base = "";

private:
  void setupRoutes();

  void
  create_authentication_so_r_handler(const Pistache::Rest::Request &request,
                                     Pistache::Http::ResponseWriter response);
  void query_auth_so_r_handler(const Pistache::Rest::Request &request,
                               Pistache::Http::ResponseWriter response);
  void authentication_so_r_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// To store the SoR acknowledgement information of a UE
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueId">UE id</param>
  /// <param name="sorData"></param>
  /// <param name="supportedFeatures">Supported Features (optional, default to
  /// &quot;&quot;)</param>
  virtual void create_authentication_so_r(
      const std::string &ueId, const SorData &sorData,
      const Pistache::Optional<std::string> &supportedFeatures,
      Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Retrieves the SoR acknowledgement information of a UE
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueId">UE id</param>
  /// <param name="supportedFeatures">Supported Features (optional, default to
  /// &quot;&quot;)</param>
  virtual void
  query_auth_so_r(const std::string &ueId,
                  const Pistache::Optional<std::string> &supportedFeatures,
                  Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AuthenticationSoRDocumentApi_H_ */
