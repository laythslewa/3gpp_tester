/**
 * Nudm_PP
 * Nudm Parameter Provision Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ParameterProvisioningDataEntryDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

ParameterProvisioningDataEntryDocumentApiImpl::
    ParameterProvisioningDataEntryDocumentApiImpl(
        std::shared_ptr<Pistache::Rest::Router> rtr)
    : ParameterProvisioningDataEntryDocumentApi(rtr) {}

void ParameterProvisioningDataEntryDocumentApiImpl::create_pp_data_entry(
    const std::string &ueId, const std::string &afInstanceId,
    const PpDataEntry &ppDataEntry, Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ParameterProvisioningDataEntryDocumentApiImpl::delete_pp_data_entry(
    const std::string &ueId, const std::string &afInstanceId,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ParameterProvisioningDataEntryDocumentApiImpl::get_pp_data_entry(
    const std::string &ueId, const std::string &afInstanceId,
    const Pistache::Optional<std::string> &supportedFeatures,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
