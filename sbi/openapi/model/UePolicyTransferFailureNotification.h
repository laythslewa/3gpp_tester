/**
 * Npcf_UEPolicyControl
 * UE Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UePolicyTransferFailureNotification.h
 *
 * Represents information on the failure of a UE policy transfer to the UE
 * because the UE is not reachable.
 */

#ifndef UePolicyTransferFailureNotification_H_
#define UePolicyTransferFailureNotification_H_

#include "N1N2MessageTransferCause.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents information on the failure of a UE policy transfer to the UE
/// because the UE is not reachable.
/// </summary>
class UePolicyTransferFailureNotification {
public:
  UePolicyTransferFailureNotification();
  virtual ~UePolicyTransferFailureNotification();

  void validate();

  /////////////////////////////////////////////
  /// UePolicyTransferFailureNotification members

  /// <summary>
  ///
  /// </summary>
  N1N2MessageTransferCause getCause() const;
  void setCause(N1N2MessageTransferCause const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t> &getPtis();
  void setPtis(std::vector<int32_t> const value);

  friend void to_json(nlohmann::json &j,
                      const UePolicyTransferFailureNotification &o);
  friend void from_json(const nlohmann::json &j,
                        UePolicyTransferFailureNotification &o);

protected:
  N1N2MessageTransferCause m_Cause;

  std::vector<int32_t> m_Ptis;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UePolicyTransferFailureNotification_H_ */
