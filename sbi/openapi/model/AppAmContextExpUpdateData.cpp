/**
 * 3gpp-am-policyauthorization
 * API for AM policy authorization. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppAmContextExpUpdateData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AppAmContextExpUpdateData::AppAmContextExpUpdateData() {
  m_EvSubscIsSet = false;
}

AppAmContextExpUpdateData::~AppAmContextExpUpdateData() {}

void AppAmContextExpUpdateData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AppAmContextExpUpdateData &o) {
  j = nlohmann::json();
  if (o.evSubscIsSet())
    j["evSubsc"] = o.m_EvSubsc;
}

void from_json(const nlohmann::json &j, AppAmContextExpUpdateData &o) {
  if (j.find("evSubsc") != j.end()) {
    j.at("evSubsc").get_to(o.m_EvSubsc);
    o.m_EvSubscIsSet = true;
  }
}

AmEventsSubscDataRm AppAmContextExpUpdateData::getEvSubsc() const {
  return m_EvSubsc;
}
void AppAmContextExpUpdateData::setEvSubsc(AmEventsSubscDataRm const &value) {
  m_EvSubsc = value;
  m_EvSubscIsSet = true;
}
bool AppAmContextExpUpdateData::evSubscIsSet() const { return m_EvSubscIsSet; }
void AppAmContextExpUpdateData::unsetEvSubsc() { m_EvSubscIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
