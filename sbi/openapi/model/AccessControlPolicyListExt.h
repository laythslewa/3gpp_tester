/**
 * CAPIF_Events_API
 * API for event subscription management. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AccessControlPolicyListExt.h
 *
 * Represents the extension for access control policies.
 */

#ifndef AccessControlPolicyListExt_H_
#define AccessControlPolicyListExt_H_

#include "AccessControlPolicyList.h"
#include "AccessControlPolicyListExt_allOf.h"
#include "ApiInvokerPolicy.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the extension for access control policies.
/// </summary>
class AccessControlPolicyListExt {
public:
  AccessControlPolicyListExt();
  virtual ~AccessControlPolicyListExt();

  void validate();

  /////////////////////////////////////////////
  /// AccessControlPolicyListExt members

  /// <summary>
  /// Policy of each API invoker.
  /// </summary>
  std::vector<ApiInvokerPolicy> &getApiInvokerPolicies();
  void setApiInvokerPolicies(std::vector<ApiInvokerPolicy> const &value);
  bool apiInvokerPoliciesIsSet() const;
  void unsetApiInvokerPolicies();
  /// <summary>
  ///
  /// </summary>
  std::string getApiId() const;
  void setApiId(std::string const &value);

  friend void to_json(nlohmann::json &j, const AccessControlPolicyListExt &o);
  friend void from_json(const nlohmann::json &j, AccessControlPolicyListExt &o);

protected:
  std::vector<ApiInvokerPolicy> m_ApiInvokerPolicies;
  bool m_ApiInvokerPoliciesIsSet;
  std::string m_ApiId;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AccessControlPolicyListExt_H_ */
