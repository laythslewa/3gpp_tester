/**
 * 3gpp-as-session-with-qos
 * API for setting us an AS session with required QoS. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * AsSessionWithQoSAPISubscriptionLevelPATCHOperationApiImpl.h
 *
 *
 */

#ifndef AS_SESSION_WITH_QO_SAPI_SUBSCRIPTION_LEVEL_PATCH_OPERATION_API_IMPL_H_
#define AS_SESSION_WITH_QO_SAPI_SUBSCRIPTION_LEVEL_PATCH_OPERATION_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <AsSessionWithQoSAPISubscriptionLevelPATCHOperationApi.h>

#include <pistache/optional.h>

#include "AsSessionWithQoSSubscription.h"
#include "AsSessionWithQoSSubscriptionPatch.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class AsSessionWithQoSAPISubscriptionLevelPATCHOperationApiImpl
    : public org::openapitools::server::api::
          AsSessionWithQoSAPISubscriptionLevelPATCHOperationApi {
public:
  AsSessionWithQoSAPISubscriptionLevelPATCHOperationApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~AsSessionWithQoSAPISubscriptionLevelPATCHOperationApiImpl() {}

  void scs_as_id_subscriptions_subscription_id_patch(
      const std::string &scsAsId, const std::string &subscriptionId,
      const AsSessionWithQoSSubscriptionPatch
          &asSessionWithQoSSubscriptionPatch,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif