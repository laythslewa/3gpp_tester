/**
 * Npcf_EventExposure
 * PCF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PcEventNotification.h
 *
 * Represents the information reported for a Policy Control event.
 */

#ifndef PcEventNotification_H_
#define PcEventNotification_H_

#include "AccessType.h"
#include "AdditionalAccessInfo.h"
#include "AnGwAddress.h"
#include "PcEvent.h"
#include "PduSessionInformation.h"
#include "PlmnIdNid.h"
#include "RatType.h"
#include "SatelliteBackhaulCategory.h"
#include "ServiceAreaRestriction.h"
#include "ServiceIdentification.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the information reported for a Policy Control event.
/// </summary>
class PcEventNotification {
public:
  PcEventNotification();
  virtual ~PcEventNotification();

  void validate();

  /////////////////////////////////////////////
  /// PcEventNotification members

  /// <summary>
  ///
  /// </summary>
  PcEvent getEvent() const;
  void setEvent(PcEvent const &value);
  /// <summary>
  ///
  /// </summary>
  AccessType getAccType() const;
  void setAccType(AccessType const &value);
  bool accTypeIsSet() const;
  void unsetAccType();
  /// <summary>
  ///
  /// </summary>
  AdditionalAccessInfo getAddAccessInfo() const;
  void setAddAccessInfo(AdditionalAccessInfo const &value);
  bool addAccessInfoIsSet() const;
  void unsetAddAccessInfo();
  /// <summary>
  ///
  /// </summary>
  AdditionalAccessInfo getRelAccessInfo() const;
  void setRelAccessInfo(AdditionalAccessInfo const &value);
  bool relAccessInfoIsSet() const;
  void unsetRelAccessInfo();
  /// <summary>
  ///
  /// </summary>
  AnGwAddress getAnGwAddr() const;
  void setAnGwAddr(AnGwAddress const &value);
  bool anGwAddrIsSet() const;
  void unsetAnGwAddr();
  /// <summary>
  ///
  /// </summary>
  RatType getRatType() const;
  void setRatType(RatType const &value);
  bool ratTypeIsSet() const;
  void unsetRatType();
  /// <summary>
  ///
  /// </summary>
  PlmnIdNid getPlmnId() const;
  void setPlmnId(PlmnIdNid const &value);
  bool plmnIdIsSet() const;
  void unsetPlmnId();
  /// <summary>
  ///
  /// </summary>
  SatelliteBackhaulCategory getSatBackhaulCategory() const;
  void setSatBackhaulCategory(SatelliteBackhaulCategory const &value);
  bool satBackhaulCategoryIsSet() const;
  void unsetSatBackhaulCategory();
  /// <summary>
  ///
  /// </summary>
  ServiceAreaRestriction getServAreaRes() const;
  void setServAreaRes(ServiceAreaRestriction const &value);
  bool servAreaResIsSet() const;
  void unsetServAreaRes();
  /// <summary>
  /// String identifying a Supi that shall contain either an IMSI, a network
  /// specific identifier, a Global Cable Identifier (GCI) or a Global Line
  /// Identifier (GLI) as specified in clause 2.2A of 3GPP TS 23.003. It shall
  /// be formatted as follows  - for an IMSI \&quot;imsi-&lt;imsi&gt;\&quot;,
  /// where &lt;imsi&gt; shall be formatted according to clause 2.2 of 3GPP
  /// TS 23.003 that describes an IMSI.  - for a network specific identifier
  /// \&quot;nai-&lt;nai&gt;, where &lt;nai&gt; shall be formatted according to
  /// clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI
  /// \&quot;gci-&lt;gci&gt;\&quot;, where &lt;gci&gt; shall be formatted
  /// according to clause 28.15.2 of 3GPP TS 23.003.  - for a GLI
  /// \&quot;gli-&lt;gli&gt;\&quot;, where &lt;gli&gt; shall be formatted
  /// according to clause 28.16.2 of 3GPP TS 23.003.To enable that the value is
  /// used as part of an URI, the string shall only contain characters allowed
  /// according to the \&quot;lower-with-hyphen\&quot; naming convention defined
  /// in 3GPP TS 29.501.
  /// </summary>
  std::string getSupi() const;
  void setSupi(std::string const &value);
  bool supiIsSet() const;
  void unsetSupi();
  /// <summary>
  /// String identifying a Gpsi shall contain either an External Id or an
  /// MSISDN. It shall be formatted as follows -External Identifier&#x3D;
  /// \&quot;extid-&lt;extid&gt;, where &lt;extid&gt; shall be formatted
  /// according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
  /// Identifier.
  /// </summary>
  std::string getGpsi() const;
  void setGpsi(std::string const &value);
  bool gpsiIsSet() const;
  void unsetGpsi();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getTimeStamp() const;
  void setTimeStamp(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  PduSessionInformation getPduSessionInfo() const;
  void setPduSessionInfo(PduSessionInformation const &value);
  bool pduSessionInfoIsSet() const;
  void unsetPduSessionInfo();
  /// <summary>
  ///
  /// </summary>
  ServiceIdentification getRepServices() const;
  void setRepServices(ServiceIdentification const &value);
  bool repServicesIsSet() const;
  void unsetRepServices();

  friend void to_json(nlohmann::json &j, const PcEventNotification &o);
  friend void from_json(const nlohmann::json &j, PcEventNotification &o);

protected:
  PcEvent m_Event;

  AccessType m_AccType;
  bool m_AccTypeIsSet;
  AdditionalAccessInfo m_AddAccessInfo;
  bool m_AddAccessInfoIsSet;
  AdditionalAccessInfo m_RelAccessInfo;
  bool m_RelAccessInfoIsSet;
  AnGwAddress m_AnGwAddr;
  bool m_AnGwAddrIsSet;
  RatType m_RatType;
  bool m_RatTypeIsSet;
  PlmnIdNid m_PlmnId;
  bool m_PlmnIdIsSet;
  SatelliteBackhaulCategory m_SatBackhaulCategory;
  bool m_SatBackhaulCategoryIsSet;
  ServiceAreaRestriction m_ServAreaRes;
  bool m_ServAreaResIsSet;
  std::string m_Supi;
  bool m_SupiIsSet;
  std::string m_Gpsi;
  bool m_GpsiIsSet;
  std::string m_TimeStamp;

  PduSessionInformation m_PduSessionInfo;
  bool m_PduSessionInfoIsSet;
  ServiceIdentification m_RepServices;
  bool m_RepServicesIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PcEventNotification_H_ */
