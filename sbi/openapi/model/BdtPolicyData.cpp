/**
 * Npcf_BDTPolicyControl Service API
 * PCF BDT Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "BdtPolicyData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

BdtPolicyData::BdtPolicyData() {
  m_BdtRefId = "";
  m_SelTransPolicyId = 0;
  m_SelTransPolicyIdIsSet = false;
  m_SuppFeat = "";
  m_SuppFeatIsSet = false;
}

BdtPolicyData::~BdtPolicyData() {}

void BdtPolicyData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const BdtPolicyData &o) {
  j = nlohmann::json();
  j["bdtRefId"] = o.m_BdtRefId;
  j["transfPolicies"] = o.m_TransfPolicies;
  if (o.selTransPolicyIdIsSet())
    j["selTransPolicyId"] = o.m_SelTransPolicyId;
  if (o.suppFeatIsSet())
    j["suppFeat"] = o.m_SuppFeat;
}

void from_json(const nlohmann::json &j, BdtPolicyData &o) {
  j.at("bdtRefId").get_to(o.m_BdtRefId);
  j.at("transfPolicies").get_to(o.m_TransfPolicies);
  if (j.find("selTransPolicyId") != j.end()) {
    j.at("selTransPolicyId").get_to(o.m_SelTransPolicyId);
    o.m_SelTransPolicyIdIsSet = true;
  }
  if (j.find("suppFeat") != j.end()) {
    j.at("suppFeat").get_to(o.m_SuppFeat);
    o.m_SuppFeatIsSet = true;
  }
}

std::string BdtPolicyData::getBdtRefId() const { return m_BdtRefId; }
void BdtPolicyData::setBdtRefId(std::string const &value) {
  m_BdtRefId = value;
}
std::vector<TransferPolicy> &BdtPolicyData::getTransfPolicies() {
  return m_TransfPolicies;
}
void BdtPolicyData::setTransfPolicies(
    std::vector<TransferPolicy> const &value) {
  m_TransfPolicies = value;
}
int32_t BdtPolicyData::getSelTransPolicyId() const {
  return m_SelTransPolicyId;
}
void BdtPolicyData::setSelTransPolicyId(int32_t const value) {
  m_SelTransPolicyId = value;
  m_SelTransPolicyIdIsSet = true;
}
bool BdtPolicyData::selTransPolicyIdIsSet() const {
  return m_SelTransPolicyIdIsSet;
}
void BdtPolicyData::unsetSelTransPolicyId() { m_SelTransPolicyIdIsSet = false; }
std::string BdtPolicyData::getSuppFeat() const { return m_SuppFeat; }
void BdtPolicyData::setSuppFeat(std::string const &value) {
  m_SuppFeat = value;
  m_SuppFeatIsSet = true;
}
bool BdtPolicyData::suppFeatIsSet() const { return m_SuppFeatIsSet; }
void BdtPolicyData::unsetSuppFeat() { m_SuppFeatIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
