/**
 * Nudsf_DataRepository
 * Nudsf Data Repository Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RecordNotification.h
 *
 * Definition of a notification on a record
 */

#ifndef RecordNotification_H_
#define RecordNotification_H_

#include "AnyType.h"
#include "NotificationDescription.h"
#include "RecordMeta.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Definition of a notification on a record
/// </summary>
class RecordNotification {
public:
  RecordNotification();
  virtual ~RecordNotification();

  void validate();

  /////////////////////////////////////////////
  /// RecordNotification members

  /// <summary>
  ///
  /// </summary>
  NotificationDescription getDescriptor() const;
  void setDescriptor(NotificationDescription const &value);
  /// <summary>
  ///
  /// </summary>
  RecordMeta getMeta() const;
  void setMeta(RecordMeta const &value);
  /// <summary>
  /// list of opaque Block&#39;s in this Record
  /// </summary>
  std::vector<AnyType> &getBlocks();
  void setBlocks(std::vector<AnyType> const &value);
  bool blocksIsSet() const;
  void unsetBlocks();

  friend void to_json(nlohmann::json &j, const RecordNotification &o);
  friend void from_json(const nlohmann::json &j, RecordNotification &o);

protected:
  NotificationDescription m_Descriptor;

  RecordMeta m_Meta;

  std::vector<AnyType> m_Blocks;
  bool m_BlocksIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RecordNotification_H_ */
