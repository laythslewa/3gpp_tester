/**
 * Npcf_UEPolicyControl
 * UE Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ProSeCapability.h
 *
 * Possible values are - PROSE_DD: This value is used to indicate that 5G ProSe
 * Direct Discovery is supported by the UE. - PROSE_DC: This value is used to
 * indicate that 5G ProSe Direct Communication is supported by the UE. -
 * PROSE_L2_U2N_RELAY: This value is used to indicate that Layer-2 5G ProSe
 * UE-to-Network Relay is supported by the UE. - PROSE_L3_U2N_RELAY: This value
 * is used to indicate that Layer-3 5G ProSe UE-to-Network Relay is supported by
 * the UE. - PROSE_L2_REMOTE_UE: This value is used to indicate that Layer-2 5G
 * ProSe Remote UE is supported by the UE. - PROSE_L3_REMOTE_UE: This value is
 * used to indicate that Layer-3 5G ProSe Remote UE is supported by the UE.
 */

#ifndef ProSeCapability_H_
#define ProSeCapability_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Possible values are - PROSE_DD: This value is used to indicate that 5G ProSe
/// Direct Discovery is supported by the UE. - PROSE_DC: This value is used to
/// indicate that 5G ProSe Direct Communication is supported by the UE. -
/// PROSE_L2_U2N_RELAY: This value is used to indicate that Layer-2 5G ProSe
/// UE-to-Network Relay is supported by the UE. - PROSE_L3_U2N_RELAY: This value
/// is used to indicate that Layer-3 5G ProSe UE-to-Network Relay is supported
/// by the UE. - PROSE_L2_REMOTE_UE: This value is used to indicate that Layer-2
/// 5G ProSe Remote UE is supported by the UE. - PROSE_L3_REMOTE_UE: This value
/// is used to indicate that Layer-3 5G ProSe Remote UE is supported by the UE.
/// </summary>
class ProSeCapability {
public:
  ProSeCapability();
  virtual ~ProSeCapability();

  void validate();

  /////////////////////////////////////////////
  /// ProSeCapability members

  friend void to_json(nlohmann::json &j, const ProSeCapability &o);
  friend void from_json(const nlohmann::json &j, ProSeCapability &o);

protected:
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ProSeCapability_H_ */
