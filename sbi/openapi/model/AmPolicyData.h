/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmPolicyData.h
 *
 * Contains the AM policy data for a given subscriber.
 */

#ifndef AmPolicyData_H_
#define AmPolicyData_H_

#include "PresenceInfo.h"
#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the AM policy data for a given subscriber.
/// </summary>
class AmPolicyData {
public:
  AmPolicyData();
  virtual ~AmPolicyData();

  void validate();

  /////////////////////////////////////////////
  /// AmPolicyData members

  /// <summary>
  /// Contains Presence reporting area information. The praId attribute within
  /// the PresenceInfo data type is the key of the map.
  /// </summary>
  std::map<std::string, PresenceInfo> &getPraInfos();
  void setPraInfos(std::map<std::string, PresenceInfo> const &value);
  bool praInfosIsSet() const;
  void unsetPraInfos();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getSubscCats();
  void setSubscCats(std::vector<std::string> const &value);
  bool subscCatsIsSet() const;
  void unsetSubscCats();

  friend void to_json(nlohmann::json &j, const AmPolicyData &o);
  friend void from_json(const nlohmann::json &j, AmPolicyData &o);

protected:
  std::map<std::string, PresenceInfo> m_PraInfos;
  bool m_PraInfosIsSet;
  std::vector<std::string> m_SubscCats;
  bool m_SubscCatsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AmPolicyData_H_ */
