/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CreateSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CreateSubscription::CreateSubscription() {
  m_NfId = "";
  m_NfIdIsSet = false;
  m_UcmfNotificationUri = "";
  m_SuggestedExpires = "";
  m_SuggestedExpiresIsSet = false;
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
}

CreateSubscription::~CreateSubscription() {}

void CreateSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CreateSubscription &o) {
  j = nlohmann::json();
  if (o.nfIdIsSet())
    j["nfId"] = o.m_NfId;
  j["ucmfNotificationUri"] = o.m_UcmfNotificationUri;
  if (o.suggestedExpiresIsSet())
    j["suggestedExpires"] = o.m_SuggestedExpires;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, CreateSubscription &o) {
  if (j.find("nfId") != j.end()) {
    j.at("nfId").get_to(o.m_NfId);
    o.m_NfIdIsSet = true;
  }
  j.at("ucmfNotificationUri").get_to(o.m_UcmfNotificationUri);
  if (j.find("suggestedExpires") != j.end()) {
    j.at("suggestedExpires").get_to(o.m_SuggestedExpires);
    o.m_SuggestedExpiresIsSet = true;
  }
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
}

std::string CreateSubscription::getNfId() const { return m_NfId; }
void CreateSubscription::setNfId(std::string const &value) {
  m_NfId = value;
  m_NfIdIsSet = true;
}
bool CreateSubscription::nfIdIsSet() const { return m_NfIdIsSet; }
void CreateSubscription::unsetNfId() { m_NfIdIsSet = false; }
std::string CreateSubscription::getUcmfNotificationUri() const {
  return m_UcmfNotificationUri;
}
void CreateSubscription::setUcmfNotificationUri(std::string const &value) {
  m_UcmfNotificationUri = value;
}
std::string CreateSubscription::getSuggestedExpires() const {
  return m_SuggestedExpires;
}
void CreateSubscription::setSuggestedExpires(std::string const &value) {
  m_SuggestedExpires = value;
  m_SuggestedExpiresIsSet = true;
}
bool CreateSubscription::suggestedExpiresIsSet() const {
  return m_SuggestedExpiresIsSet;
}
void CreateSubscription::unsetSuggestedExpires() {
  m_SuggestedExpiresIsSet = false;
}
std::string CreateSubscription::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void CreateSubscription::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool CreateSubscription::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void CreateSubscription::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
