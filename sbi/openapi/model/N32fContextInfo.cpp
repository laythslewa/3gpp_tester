/**
 * N32 Handshake API
 * N32-c Handshake Service.  Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "N32fContextInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

N32fContextInfo::N32fContextInfo() { m_N32fContextId = ""; }

N32fContextInfo::~N32fContextInfo() {}

void N32fContextInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const N32fContextInfo &o) {
  j = nlohmann::json();
  j["n32fContextId"] = o.m_N32fContextId;
}

void from_json(const nlohmann::json &j, N32fContextInfo &o) {
  j.at("n32fContextId").get_to(o.m_N32fContextId);
}

std::string N32fContextInfo::getN32fContextId() const {
  return m_N32fContextId;
}
void N32fContextInfo::setN32fContextId(std::string const &value) {
  m_N32fContextId = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
