/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DnnSmfInfoItem.h
 *
 * Set of parameters supported by SMF for a given DNN
 */

#ifndef DnnSmfInfoItem_H_
#define DnnSmfInfoItem_H_

#include "AnyOfstringstring.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Set of parameters supported by SMF for a given DNN
/// </summary>
class DnnSmfInfoItem {
public:
  DnnSmfInfoItem();
  virtual ~DnnSmfInfoItem();

  void validate();

  /////////////////////////////////////////////
  /// DnnSmfInfoItem members

  /// <summary>
  ///
  /// </summary>
  AnyOfstringstring getDnn() const;
  void setDnn(AnyOfstringstring const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<AnyOfstringstring> &getDnaiList();
  void setDnaiList(std::vector<AnyOfstringstring> const &value);
  bool dnaiListIsSet() const;
  void unsetDnaiList();

  friend void to_json(nlohmann::json &j, const DnnSmfInfoItem &o);
  friend void from_json(const nlohmann::json &j, DnnSmfInfoItem &o);

protected:
  AnyOfstringstring m_Dnn;

  std::vector<AnyOfstringstring> m_DnaiList;
  bool m_DnaiListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* DnnSmfInfoItem_H_ */
