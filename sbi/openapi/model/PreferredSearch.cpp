/**
 * NRF NFDiscovery Service
 * NRF NFDiscovery Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PreferredSearch.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PreferredSearch::PreferredSearch() {
  m_PreferredTaiMatchInd = false;
  m_PreferredTaiMatchIndIsSet = false;
  m_PreferredFullPlmnMatchInd = false;
  m_PreferredFullPlmnMatchIndIsSet = false;
  m_PreferredApiVersionsMatchInd = false;
  m_PreferredApiVersionsMatchIndIsSet = false;
  m_OtherApiVersionsInd = false;
  m_OtherApiVersionsIndIsSet = false;
  m_PreferredLocalityMatchInd = false;
  m_PreferredLocalityMatchIndIsSet = false;
  m_OtherLocalityInd = false;
  m_OtherLocalityIndIsSet = false;
  m_PreferredVendorSpecificFeaturesInd = false;
  m_PreferredVendorSpecificFeaturesIndIsSet = false;
}

PreferredSearch::~PreferredSearch() {}

void PreferredSearch::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PreferredSearch &o) {
  j = nlohmann::json();
  if (o.preferredTaiMatchIndIsSet())
    j["preferredTaiMatchInd"] = o.m_PreferredTaiMatchInd;
  if (o.preferredFullPlmnMatchIndIsSet())
    j["preferredFullPlmnMatchInd"] = o.m_PreferredFullPlmnMatchInd;
  if (o.preferredApiVersionsMatchIndIsSet())
    j["preferredApiVersionsMatchInd"] = o.m_PreferredApiVersionsMatchInd;
  if (o.otherApiVersionsIndIsSet())
    j["otherApiVersionsInd"] = o.m_OtherApiVersionsInd;
  if (o.preferredLocalityMatchIndIsSet())
    j["preferredLocalityMatchInd"] = o.m_PreferredLocalityMatchInd;
  if (o.otherLocalityIndIsSet())
    j["otherLocalityInd"] = o.m_OtherLocalityInd;
  if (o.preferredVendorSpecificFeaturesIndIsSet())
    j["preferredVendorSpecificFeaturesInd"] =
        o.m_PreferredVendorSpecificFeaturesInd;
}

void from_json(const nlohmann::json &j, PreferredSearch &o) {
  if (j.find("preferredTaiMatchInd") != j.end()) {
    j.at("preferredTaiMatchInd").get_to(o.m_PreferredTaiMatchInd);
    o.m_PreferredTaiMatchIndIsSet = true;
  }
  if (j.find("preferredFullPlmnMatchInd") != j.end()) {
    j.at("preferredFullPlmnMatchInd").get_to(o.m_PreferredFullPlmnMatchInd);
    o.m_PreferredFullPlmnMatchIndIsSet = true;
  }
  if (j.find("preferredApiVersionsMatchInd") != j.end()) {
    j.at("preferredApiVersionsMatchInd")
        .get_to(o.m_PreferredApiVersionsMatchInd);
    o.m_PreferredApiVersionsMatchIndIsSet = true;
  }
  if (j.find("otherApiVersionsInd") != j.end()) {
    j.at("otherApiVersionsInd").get_to(o.m_OtherApiVersionsInd);
    o.m_OtherApiVersionsIndIsSet = true;
  }
  if (j.find("preferredLocalityMatchInd") != j.end()) {
    j.at("preferredLocalityMatchInd").get_to(o.m_PreferredLocalityMatchInd);
    o.m_PreferredLocalityMatchIndIsSet = true;
  }
  if (j.find("otherLocalityInd") != j.end()) {
    j.at("otherLocalityInd").get_to(o.m_OtherLocalityInd);
    o.m_OtherLocalityIndIsSet = true;
  }
  if (j.find("preferredVendorSpecificFeaturesInd") != j.end()) {
    j.at("preferredVendorSpecificFeaturesInd")
        .get_to(o.m_PreferredVendorSpecificFeaturesInd);
    o.m_PreferredVendorSpecificFeaturesIndIsSet = true;
  }
}

bool PreferredSearch::isPreferredTaiMatchInd() const {
  return m_PreferredTaiMatchInd;
}
void PreferredSearch::setPreferredTaiMatchInd(bool const value) {
  m_PreferredTaiMatchInd = value;
  m_PreferredTaiMatchIndIsSet = true;
}
bool PreferredSearch::preferredTaiMatchIndIsSet() const {
  return m_PreferredTaiMatchIndIsSet;
}
void PreferredSearch::unsetPreferredTaiMatchInd() {
  m_PreferredTaiMatchIndIsSet = false;
}
bool PreferredSearch::isPreferredFullPlmnMatchInd() const {
  return m_PreferredFullPlmnMatchInd;
}
void PreferredSearch::setPreferredFullPlmnMatchInd(bool const value) {
  m_PreferredFullPlmnMatchInd = value;
  m_PreferredFullPlmnMatchIndIsSet = true;
}
bool PreferredSearch::preferredFullPlmnMatchIndIsSet() const {
  return m_PreferredFullPlmnMatchIndIsSet;
}
void PreferredSearch::unsetPreferredFullPlmnMatchInd() {
  m_PreferredFullPlmnMatchIndIsSet = false;
}
bool PreferredSearch::isPreferredApiVersionsMatchInd() const {
  return m_PreferredApiVersionsMatchInd;
}
void PreferredSearch::setPreferredApiVersionsMatchInd(bool const value) {
  m_PreferredApiVersionsMatchInd = value;
  m_PreferredApiVersionsMatchIndIsSet = true;
}
bool PreferredSearch::preferredApiVersionsMatchIndIsSet() const {
  return m_PreferredApiVersionsMatchIndIsSet;
}
void PreferredSearch::unsetPreferredApiVersionsMatchInd() {
  m_PreferredApiVersionsMatchIndIsSet = false;
}
bool PreferredSearch::isOtherApiVersionsInd() const {
  return m_OtherApiVersionsInd;
}
void PreferredSearch::setOtherApiVersionsInd(bool const value) {
  m_OtherApiVersionsInd = value;
  m_OtherApiVersionsIndIsSet = true;
}
bool PreferredSearch::otherApiVersionsIndIsSet() const {
  return m_OtherApiVersionsIndIsSet;
}
void PreferredSearch::unsetOtherApiVersionsInd() {
  m_OtherApiVersionsIndIsSet = false;
}
bool PreferredSearch::isPreferredLocalityMatchInd() const {
  return m_PreferredLocalityMatchInd;
}
void PreferredSearch::setPreferredLocalityMatchInd(bool const value) {
  m_PreferredLocalityMatchInd = value;
  m_PreferredLocalityMatchIndIsSet = true;
}
bool PreferredSearch::preferredLocalityMatchIndIsSet() const {
  return m_PreferredLocalityMatchIndIsSet;
}
void PreferredSearch::unsetPreferredLocalityMatchInd() {
  m_PreferredLocalityMatchIndIsSet = false;
}
bool PreferredSearch::isOtherLocalityInd() const { return m_OtherLocalityInd; }
void PreferredSearch::setOtherLocalityInd(bool const value) {
  m_OtherLocalityInd = value;
  m_OtherLocalityIndIsSet = true;
}
bool PreferredSearch::otherLocalityIndIsSet() const {
  return m_OtherLocalityIndIsSet;
}
void PreferredSearch::unsetOtherLocalityInd() {
  m_OtherLocalityIndIsSet = false;
}
bool PreferredSearch::isPreferredVendorSpecificFeaturesInd() const {
  return m_PreferredVendorSpecificFeaturesInd;
}
void PreferredSearch::setPreferredVendorSpecificFeaturesInd(bool const value) {
  m_PreferredVendorSpecificFeaturesInd = value;
  m_PreferredVendorSpecificFeaturesIndIsSet = true;
}
bool PreferredSearch::preferredVendorSpecificFeaturesIndIsSet() const {
  return m_PreferredVendorSpecificFeaturesIndIsSet;
}
void PreferredSearch::unsetPreferredVendorSpecificFeaturesInd() {
  m_PreferredVendorSpecificFeaturesIndIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
