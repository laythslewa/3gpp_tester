/**
 * M1_ContentHostingProvisioning
 * 5GMS AF M1 Content Hosting Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "DistributionConfiguration_GeoFencing.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

DistributionConfiguration_GeoFencing::DistributionConfiguration_GeoFencing() {
  m_LocatorType = "";
}

DistributionConfiguration_GeoFencing::~DistributionConfiguration_GeoFencing() {}

void DistributionConfiguration_GeoFencing::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const DistributionConfiguration_GeoFencing &o) {
  j = nlohmann::json();
  j["locatorType"] = o.m_LocatorType;
  j["locators"] = o.m_Locators;
}

void from_json(const nlohmann::json &j,
               DistributionConfiguration_GeoFencing &o) {
  j.at("locatorType").get_to(o.m_LocatorType);
  j.at("locators").get_to(o.m_Locators);
}

std::string DistributionConfiguration_GeoFencing::getLocatorType() const {
  return m_LocatorType;
}
void DistributionConfiguration_GeoFencing::setLocatorType(
    std::string const &value) {
  m_LocatorType = value;
}
std::vector<std::string> &DistributionConfiguration_GeoFencing::getLocators() {
  return m_Locators;
}
void DistributionConfiguration_GeoFencing::setLocators(
    std::vector<std::string> const &value) {
  m_Locators = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
