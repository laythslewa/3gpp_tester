/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RetrievalOfMultipleDataSetsApi.h
 *
 *
 */

#ifndef RetrievalOfMultipleDataSetsApi_H_
#define RetrievalOfMultipleDataSetsApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "DataSetName.h"
#include "PlmnId.h"
#include "ProblemDetails.h"
#include "SubscriptionDataSets.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class RetrievalOfMultipleDataSetsApi {
public:
  RetrievalOfMultipleDataSetsApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~RetrievalOfMultipleDataSetsApi() {}
  void init();

  const std::string base = "/nudm-sdm/v2";

private:
  void setupRoutes();

  void get_data_sets_handler(const Pistache::Rest::Request &request,
                             Pistache::Http::ResponseWriter response);
  void retrieval_of_multiple_data_sets_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// retrieve multiple data sets
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="supi">Identifier of the UE</param>
  /// <param name="datasetNames">List of dataset names</param>
  /// <param name="plmnId">serving PLMN ID (optional, default to
  /// PlmnId())</param> <param name="supportedFeatures">Supported Features
  /// (optional, default to &quot;&quot;)</param> <param
  /// name="ifNoneMatch">Validator for conditional requests, as described in RFC
  /// 7232, 3.2 (optional, default to &quot;&quot;)</param> <param
  /// name="ifModifiedSince">Validator for conditional requests, as described in
  /// RFC 7232, 3.3 (optional, default to &quot;&quot;)</param>
  virtual void get_data_sets(
      const std::string &supi,
      const Pistache::Optional<std::vector<DataSetName>> &datasetNames,
      const Pistache::Optional<PlmnId> &plmnId,
      const Pistache::Optional<std::string> &supportedFeatures,
      const Pistache::Optional<Pistache::Http::Header::Raw> &ifNoneMatch,
      const Pistache::Optional<Pistache::Http::Header::Raw> &ifModifiedSince,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RetrievalOfMultipleDataSetsApi_H_ */
