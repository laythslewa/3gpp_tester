/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "MatchReportRespData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

MatchReportRespData::MatchReportRespData() {
  m_ProseAppIdNamesIsSet = false;
  m_ValidityTime = "";
  m_ValidityTimeIsSet = false;
  m_MetaData = "";
  m_MetaDataIsSet = false;
  m_MetaDataIndexMasksIsSet = false;
}

MatchReportRespData::~MatchReportRespData() {}

void MatchReportRespData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const MatchReportRespData &o) {
  j = nlohmann::json();
  if (o.proseAppIdNamesIsSet() || !o.m_ProseAppIdNames.empty())
    j["proseAppIdNames"] = o.m_ProseAppIdNames;
  if (o.validityTimeIsSet())
    j["validityTime"] = o.m_ValidityTime;
  if (o.metaDataIsSet())
    j["metaData"] = o.m_MetaData;
  if (o.metaDataIndexMasksIsSet() || !o.m_MetaDataIndexMasks.empty())
    j["metaDataIndexMasks"] = o.m_MetaDataIndexMasks;
}

void from_json(const nlohmann::json &j, MatchReportRespData &o) {
  if (j.find("proseAppIdNames") != j.end()) {
    j.at("proseAppIdNames").get_to(o.m_ProseAppIdNames);
    o.m_ProseAppIdNamesIsSet = true;
  }
  if (j.find("validityTime") != j.end()) {
    j.at("validityTime").get_to(o.m_ValidityTime);
    o.m_ValidityTimeIsSet = true;
  }
  if (j.find("metaData") != j.end()) {
    j.at("metaData").get_to(o.m_MetaData);
    o.m_MetaDataIsSet = true;
  }
  if (j.find("metaDataIndexMasks") != j.end()) {
    j.at("metaDataIndexMasks").get_to(o.m_MetaDataIndexMasks);
    o.m_MetaDataIndexMasksIsSet = true;
  }
}

std::vector<std::string> &MatchReportRespData::getProseAppIdNames() {
  return m_ProseAppIdNames;
}
void MatchReportRespData::setProseAppIdNames(
    std::vector<std::string> const &value) {
  m_ProseAppIdNames = value;
  m_ProseAppIdNamesIsSet = true;
}
bool MatchReportRespData::proseAppIdNamesIsSet() const {
  return m_ProseAppIdNamesIsSet;
}
void MatchReportRespData::unsetProseAppIdNames() {
  m_ProseAppIdNamesIsSet = false;
}
std::string MatchReportRespData::getValidityTime() const {
  return m_ValidityTime;
}
void MatchReportRespData::setValidityTime(std::string const &value) {
  m_ValidityTime = value;
  m_ValidityTimeIsSet = true;
}
bool MatchReportRespData::validityTimeIsSet() const {
  return m_ValidityTimeIsSet;
}
void MatchReportRespData::unsetValidityTime() { m_ValidityTimeIsSet = false; }
std::string MatchReportRespData::getMetaData() const { return m_MetaData; }
void MatchReportRespData::setMetaData(std::string const &value) {
  m_MetaData = value;
  m_MetaDataIsSet = true;
}
bool MatchReportRespData::metaDataIsSet() const { return m_MetaDataIsSet; }
void MatchReportRespData::unsetMetaData() { m_MetaDataIsSet = false; }
std::vector<std::string> &MatchReportRespData::getMetaDataIndexMasks() {
  return m_MetaDataIndexMasks;
}
void MatchReportRespData::setMetaDataIndexMasks(
    std::vector<std::string> const &value) {
  m_MetaDataIndexMasks = value;
  m_MetaDataIndexMasksIsSet = true;
}
bool MatchReportRespData::metaDataIndexMasksIsSet() const {
  return m_MetaDataIndexMasksIsSet;
}
void MatchReportRespData::unsetMetaDataIndexMasks() {
  m_MetaDataIndexMasksIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
