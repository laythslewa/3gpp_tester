/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NotificationFlag.h
 *
 * Possible values are - ACTIVATE: The event notification is activated. -
 * DEACTIVATE: The event notification is deactivated and shall be muted. The
 * available event(s) shall be stored. - RETRIEVAL: The event notification shall
 * be sent to the NF service consumer(s), after that, is muted again.
 */

#ifndef NotificationFlag_H_
#define NotificationFlag_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Possible values are - ACTIVATE: The event notification is activated. -
/// DEACTIVATE: The event notification is deactivated and shall be muted. The
/// available event(s) shall be stored. - RETRIEVAL: The event notification
/// shall be sent to the NF service consumer(s), after that, is muted again.
/// </summary>
class NotificationFlag {
public:
  NotificationFlag();
  virtual ~NotificationFlag();

  void validate();

  /////////////////////////////////////////////
  /// NotificationFlag members

  friend void to_json(nlohmann::json &j, const NotificationFlag &o);
  friend void from_json(const nlohmann::json &j, NotificationFlag &o);

protected:
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NotificationFlag_H_ */
