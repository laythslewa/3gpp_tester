/**
 * Nsmf_EventExposure
 * Session Management Event Exposure Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NsmfEventExposureNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NsmfEventExposureNotification::NsmfEventExposureNotification() {
  m_NotifId = "";
  m_AckUri = "";
  m_AckUriIsSet = false;
}

NsmfEventExposureNotification::~NsmfEventExposureNotification() {}

void NsmfEventExposureNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NsmfEventExposureNotification &o) {
  j = nlohmann::json();
  j["notifId"] = o.m_NotifId;
  j["eventNotifs"] = o.m_EventNotifs;
  if (o.ackUriIsSet())
    j["ackUri"] = o.m_AckUri;
}

void from_json(const nlohmann::json &j, NsmfEventExposureNotification &o) {
  j.at("notifId").get_to(o.m_NotifId);
  j.at("eventNotifs").get_to(o.m_EventNotifs);
  if (j.find("ackUri") != j.end()) {
    j.at("ackUri").get_to(o.m_AckUri);
    o.m_AckUriIsSet = true;
  }
}

std::string NsmfEventExposureNotification::getNotifId() const {
  return m_NotifId;
}
void NsmfEventExposureNotification::setNotifId(std::string const &value) {
  m_NotifId = value;
}
std::vector<EventNotification> &
NsmfEventExposureNotification::getEventNotifs() {
  return m_EventNotifs;
}
void NsmfEventExposureNotification::setEventNotifs(
    std::vector<EventNotification> const &value) {
  m_EventNotifs = value;
}
std::string NsmfEventExposureNotification::getAckUri() const {
  return m_AckUri;
}
void NsmfEventExposureNotification::setAckUri(std::string const &value) {
  m_AckUri = value;
  m_AckUriIsSet = true;
}
bool NsmfEventExposureNotification::ackUriIsSet() const {
  return m_AckUriIsSet;
}
void NsmfEventExposureNotification::unsetAckUri() { m_AckUriIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
