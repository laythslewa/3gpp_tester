/**
 * Nchf_SpendingLimitControl
 * Nchf Spending Limit Control Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SubscriptionTerminationInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SubscriptionTerminationInfo::SubscriptionTerminationInfo() {
  m_Supi = "";
  m_NotifId = "";
  m_NotifIdIsSet = false;
  m_TermCauseIsSet = false;
}

SubscriptionTerminationInfo::~SubscriptionTerminationInfo() {}

void SubscriptionTerminationInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SubscriptionTerminationInfo &o) {
  j = nlohmann::json();
  j["supi"] = o.m_Supi;
  if (o.notifIdIsSet())
    j["notifId"] = o.m_NotifId;
  if (o.termCauseIsSet())
    j["termCause"] = o.m_TermCause;
}

void from_json(const nlohmann::json &j, SubscriptionTerminationInfo &o) {
  j.at("supi").get_to(o.m_Supi);
  if (j.find("notifId") != j.end()) {
    j.at("notifId").get_to(o.m_NotifId);
    o.m_NotifIdIsSet = true;
  }
  if (j.find("termCause") != j.end()) {
    j.at("termCause").get_to(o.m_TermCause);
    o.m_TermCauseIsSet = true;
  }
}

std::string SubscriptionTerminationInfo::getSupi() const { return m_Supi; }
void SubscriptionTerminationInfo::setSupi(std::string const &value) {
  m_Supi = value;
}
std::string SubscriptionTerminationInfo::getNotifId() const {
  return m_NotifId;
}
void SubscriptionTerminationInfo::setNotifId(std::string const &value) {
  m_NotifId = value;
  m_NotifIdIsSet = true;
}
bool SubscriptionTerminationInfo::notifIdIsSet() const {
  return m_NotifIdIsSet;
}
void SubscriptionTerminationInfo::unsetNotifId() { m_NotifIdIsSet = false; }
TerminationCause SubscriptionTerminationInfo::getTermCause() const {
  return m_TermCause;
}
void SubscriptionTerminationInfo::setTermCause(TerminationCause const &value) {
  m_TermCause = value;
  m_TermCauseIsSet = true;
}
bool SubscriptionTerminationInfo::termCauseIsSet() const {
  return m_TermCauseIsSet;
}
void SubscriptionTerminationInfo::unsetTermCause() { m_TermCauseIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
