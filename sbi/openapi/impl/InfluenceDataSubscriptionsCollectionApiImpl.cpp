/**
 * Unified Data Repository Service API file for Application Data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "InfluenceDataSubscriptionsCollectionApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

InfluenceDataSubscriptionsCollectionApiImpl::
    InfluenceDataSubscriptionsCollectionApiImpl(
        std::shared_ptr<Pistache::Rest::Router> rtr)
    : InfluenceDataSubscriptionsCollectionApi(rtr) {}

void InfluenceDataSubscriptionsCollectionApiImpl::
    create_individual_influence_data_subscription(
        const TrafficInfluSub &trafficInfluSub,
        Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void InfluenceDataSubscriptionsCollectionApiImpl::
    read_influence_data_subscriptions(
        const Pistache::Optional<std::string> &dnn,
        const Pistache::Optional<Snssai> &snssai,
        const Pistache::Optional<std::string> &internalGroupId,
        const Pistache::Optional<std::string> &supi,
        Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
