/**
 * Nbsf_Management
 * Binding Support Management Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * PCFBindingsCollectionApiImpl.h
 *
 *
 */

#ifndef PCF_BINDINGS_COLLECTION_API_IMPL_H_
#define PCF_BINDINGS_COLLECTION_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <PCFBindingsCollectionApi.h>

#include <pistache/optional.h>

#include "ExtProblemDetails.h"
#include "Ipv6Prefix.h"
#include "PcfBinding.h"
#include "ProblemDetails.h"
#include "Snssai.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class PCFBindingsCollectionApiImpl
    : public org::openapitools::server::api::PCFBindingsCollectionApi {
public:
  PCFBindingsCollectionApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~PCFBindingsCollectionApiImpl() {}

  void create_pcf_binding(const PcfBinding &pcfBinding,
                          Pistache::Http::ResponseWriter &response);
  void get_pcf_bindings(const Pistache::Optional<std::string> &ipv4Addr,
                        const Pistache::Optional<Ipv6Prefix> &ipv6Prefix,
                        const Pistache::Optional<std::string> &macAddr48,
                        const Pistache::Optional<std::string> &dnn,
                        const Pistache::Optional<std::string> &supi,
                        const Pistache::Optional<std::string> &gpsi,
                        const Pistache::Optional<Snssai> &snssai,
                        const Pistache::Optional<std::string> &ipDomain,
                        const Pistache::Optional<std::string> &suppFeat,
                        Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif