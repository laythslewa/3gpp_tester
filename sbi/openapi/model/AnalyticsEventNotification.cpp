/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AnalyticsEventNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AnalyticsEventNotification::AnalyticsEventNotification() { m_NotifId = ""; }

AnalyticsEventNotification::~AnalyticsEventNotification() {}

void AnalyticsEventNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AnalyticsEventNotification &o) {
  j = nlohmann::json();
  j["notifId"] = o.m_NotifId;
  j["analyEventNotifs"] = o.m_AnalyEventNotifs;
}

void from_json(const nlohmann::json &j, AnalyticsEventNotification &o) {
  j.at("notifId").get_to(o.m_NotifId);
  j.at("analyEventNotifs").get_to(o.m_AnalyEventNotifs);
}

std::string AnalyticsEventNotification::getNotifId() const { return m_NotifId; }
void AnalyticsEventNotification::setNotifId(std::string const &value) {
  m_NotifId = value;
}
std::vector<AnalyticsEventNotif> &
AnalyticsEventNotification::getAnalyEventNotifs() {
  return m_AnalyEventNotifs;
}
void AnalyticsEventNotification::setAnalyEventNotifs(
    std::vector<AnalyticsEventNotif> const &value) {
  m_AnalyEventNotifs = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
