/**
 * Nnef_PFDmanagement Service API
 * Packet Flow Description Management Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NotificationPush.h
 *
 * Represents the information to be used by the NF service consumer to retrieve
 * the PFDs and/or remove the PFDs of the applicable application identifier(s).
 */

#ifndef NotificationPush_H_
#define NotificationPush_H_

#include "PfdOperation.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the information to be used by the NF service consumer to retrieve
/// the PFDs and/or remove the PFDs of the applicable application identifier(s).
/// </summary>
class NotificationPush {
public:
  NotificationPush();
  virtual ~NotificationPush();

  void validate();

  /////////////////////////////////////////////
  /// NotificationPush members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getAppIds();
  void setAppIds(std::vector<std::string> const &value);
  /// <summary>
  /// indicating a time in seconds.
  /// </summary>
  int32_t getAllowedDelay() const;
  void setAllowedDelay(int32_t const value);
  bool allowedDelayIsSet() const;
  void unsetAllowedDelay();
  /// <summary>
  ///
  /// </summary>
  PfdOperation getPfdOp() const;
  void setPfdOp(PfdOperation const &value);
  bool pfdOpIsSet() const;
  void unsetPfdOp();

  friend void to_json(nlohmann::json &j, const NotificationPush &o);
  friend void from_json(const nlohmann::json &j, NotificationPush &o);

protected:
  std::vector<std::string> m_AppIds;

  int32_t m_AllowedDelay;
  bool m_AllowedDelayIsSet;
  PfdOperation m_PfdOp;
  bool m_PfdOpIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NotificationPush_H_ */
