/**
 * M5_DynamicPolicies
 * 5GMS AF M5 Dynamic Policy API Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DynamicPolicy.h
 *
 *
 */

#ifndef DynamicPolicy_H_
#define DynamicPolicy_H_

#include "M5QoSSpecification.h"
#include "ServiceDataFlowDescription.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class DynamicPolicy {
public:
  DynamicPolicy();
  virtual ~DynamicPolicy();

  void validate();

  /////////////////////////////////////////////
  /// DynamicPolicy members

  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getDynamicPolicyId() const;
  void setDynamicPolicyId(std::string const &value);
  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getPolicyTemplateId() const;
  void setPolicyTemplateId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<ServiceDataFlowDescription> &getServiceDataFlowDescriptions();
  void setServiceDataFlowDescriptions(
      std::vector<ServiceDataFlowDescription> const &value);
  bool serviceDataFlowDescriptionsIsSet() const;
  void unsetServiceDataFlowDescriptions();
  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getProvisioningSessionId() const;
  void setProvisioningSessionId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  M5QoSSpecification getQosSpecification() const;
  void setQosSpecification(M5QoSSpecification const &value);
  bool qosSpecificationIsSet() const;
  void unsetQosSpecification();
  /// <summary>
  ///
  /// </summary>
  std::string getEnforcementMethod() const;
  void setEnforcementMethod(std::string const &value);
  bool enforcementMethodIsSet() const;
  void unsetEnforcementMethod();
  /// <summary>
  ///
  /// </summary>
  int32_t getEnforcementBitRate() const;
  void setEnforcementBitRate(int32_t const value);
  bool enforcementBitRateIsSet() const;
  void unsetEnforcementBitRate();

  friend void to_json(nlohmann::json &j, const DynamicPolicy &o);
  friend void from_json(const nlohmann::json &j, DynamicPolicy &o);

protected:
  std::string m_DynamicPolicyId;

  std::string m_PolicyTemplateId;

  std::vector<ServiceDataFlowDescription> m_ServiceDataFlowDescriptions;
  bool m_ServiceDataFlowDescriptionsIsSet;
  std::string m_ProvisioningSessionId;

  M5QoSSpecification m_QosSpecification;
  bool m_QosSpecificationIsSet;
  std::string m_EnforcementMethod;
  bool m_EnforcementMethodIsSet;
  int32_t m_EnforcementBitRate;
  bool m_EnforcementBitRateIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* DynamicPolicy_H_ */
