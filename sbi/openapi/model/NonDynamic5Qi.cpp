/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NonDynamic5Qi.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NonDynamic5Qi::NonDynamic5Qi() {
  m_PriorityLevel = 0;
  m_PriorityLevelIsSet = false;
  m_AverWindow = 0;
  m_AverWindowIsSet = false;
  m_MaxDataBurstVol = 0;
  m_MaxDataBurstVolIsSet = false;
  m_ExtMaxDataBurstVol = 0;
  m_ExtMaxDataBurstVolIsSet = false;
  m_CnPacketDelayBudgetDl = 0;
  m_CnPacketDelayBudgetDlIsSet = false;
  m_CnPacketDelayBudgetUl = 0;
  m_CnPacketDelayBudgetUlIsSet = false;
}

NonDynamic5Qi::~NonDynamic5Qi() {}

void NonDynamic5Qi::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NonDynamic5Qi &o) {
  j = nlohmann::json();
  if (o.priorityLevelIsSet())
    j["priorityLevel"] = o.m_PriorityLevel;
  if (o.averWindowIsSet())
    j["averWindow"] = o.m_AverWindow;
  if (o.maxDataBurstVolIsSet())
    j["maxDataBurstVol"] = o.m_MaxDataBurstVol;
  if (o.extMaxDataBurstVolIsSet())
    j["extMaxDataBurstVol"] = o.m_ExtMaxDataBurstVol;
  if (o.cnPacketDelayBudgetDlIsSet())
    j["cnPacketDelayBudgetDl"] = o.m_CnPacketDelayBudgetDl;
  if (o.cnPacketDelayBudgetUlIsSet())
    j["cnPacketDelayBudgetUl"] = o.m_CnPacketDelayBudgetUl;
}

void from_json(const nlohmann::json &j, NonDynamic5Qi &o) {
  if (j.find("priorityLevel") != j.end()) {
    j.at("priorityLevel").get_to(o.m_PriorityLevel);
    o.m_PriorityLevelIsSet = true;
  }
  if (j.find("averWindow") != j.end()) {
    j.at("averWindow").get_to(o.m_AverWindow);
    o.m_AverWindowIsSet = true;
  }
  if (j.find("maxDataBurstVol") != j.end()) {
    j.at("maxDataBurstVol").get_to(o.m_MaxDataBurstVol);
    o.m_MaxDataBurstVolIsSet = true;
  }
  if (j.find("extMaxDataBurstVol") != j.end()) {
    j.at("extMaxDataBurstVol").get_to(o.m_ExtMaxDataBurstVol);
    o.m_ExtMaxDataBurstVolIsSet = true;
  }
  if (j.find("cnPacketDelayBudgetDl") != j.end()) {
    j.at("cnPacketDelayBudgetDl").get_to(o.m_CnPacketDelayBudgetDl);
    o.m_CnPacketDelayBudgetDlIsSet = true;
  }
  if (j.find("cnPacketDelayBudgetUl") != j.end()) {
    j.at("cnPacketDelayBudgetUl").get_to(o.m_CnPacketDelayBudgetUl);
    o.m_CnPacketDelayBudgetUlIsSet = true;
  }
}

int32_t NonDynamic5Qi::getPriorityLevel() const { return m_PriorityLevel; }
void NonDynamic5Qi::setPriorityLevel(int32_t const value) {
  m_PriorityLevel = value;
  m_PriorityLevelIsSet = true;
}
bool NonDynamic5Qi::priorityLevelIsSet() const { return m_PriorityLevelIsSet; }
void NonDynamic5Qi::unsetPriorityLevel() { m_PriorityLevelIsSet = false; }
int32_t NonDynamic5Qi::getAverWindow() const { return m_AverWindow; }
void NonDynamic5Qi::setAverWindow(int32_t const value) {
  m_AverWindow = value;
  m_AverWindowIsSet = true;
}
bool NonDynamic5Qi::averWindowIsSet() const { return m_AverWindowIsSet; }
void NonDynamic5Qi::unsetAverWindow() { m_AverWindowIsSet = false; }
int32_t NonDynamic5Qi::getMaxDataBurstVol() const { return m_MaxDataBurstVol; }
void NonDynamic5Qi::setMaxDataBurstVol(int32_t const value) {
  m_MaxDataBurstVol = value;
  m_MaxDataBurstVolIsSet = true;
}
bool NonDynamic5Qi::maxDataBurstVolIsSet() const {
  return m_MaxDataBurstVolIsSet;
}
void NonDynamic5Qi::unsetMaxDataBurstVol() { m_MaxDataBurstVolIsSet = false; }
int32_t NonDynamic5Qi::getExtMaxDataBurstVol() const {
  return m_ExtMaxDataBurstVol;
}
void NonDynamic5Qi::setExtMaxDataBurstVol(int32_t const value) {
  m_ExtMaxDataBurstVol = value;
  m_ExtMaxDataBurstVolIsSet = true;
}
bool NonDynamic5Qi::extMaxDataBurstVolIsSet() const {
  return m_ExtMaxDataBurstVolIsSet;
}
void NonDynamic5Qi::unsetExtMaxDataBurstVol() {
  m_ExtMaxDataBurstVolIsSet = false;
}
int32_t NonDynamic5Qi::getCnPacketDelayBudgetDl() const {
  return m_CnPacketDelayBudgetDl;
}
void NonDynamic5Qi::setCnPacketDelayBudgetDl(int32_t const value) {
  m_CnPacketDelayBudgetDl = value;
  m_CnPacketDelayBudgetDlIsSet = true;
}
bool NonDynamic5Qi::cnPacketDelayBudgetDlIsSet() const {
  return m_CnPacketDelayBudgetDlIsSet;
}
void NonDynamic5Qi::unsetCnPacketDelayBudgetDl() {
  m_CnPacketDelayBudgetDlIsSet = false;
}
int32_t NonDynamic5Qi::getCnPacketDelayBudgetUl() const {
  return m_CnPacketDelayBudgetUl;
}
void NonDynamic5Qi::setCnPacketDelayBudgetUl(int32_t const value) {
  m_CnPacketDelayBudgetUl = value;
  m_CnPacketDelayBudgetUlIsSet = true;
}
bool NonDynamic5Qi::cnPacketDelayBudgetUlIsSet() const {
  return m_CnPacketDelayBudgetUlIsSet;
}
void NonDynamic5Qi::unsetCnPacketDelayBudgetUl() {
  m_CnPacketDelayBudgetUlIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
