/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ExpectedUeBehavior.h
 *
 * Represents the expected UE behavior (e.g. UE moving trajectory) and its
 * validity period
 */

#ifndef ExpectedUeBehavior_H_
#define ExpectedUeBehavior_H_

#include "UserLocation.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the expected UE behavior (e.g. UE moving trajectory) and its
/// validity period
/// </summary>
class ExpectedUeBehavior {
public:
  ExpectedUeBehavior();
  virtual ~ExpectedUeBehavior();

  void validate();

  /////////////////////////////////////////////
  /// ExpectedUeBehavior members

  /// <summary>
  ///
  /// </summary>
  std::vector<UserLocation> &getExpMoveTrajectory();
  void setExpMoveTrajectory(std::vector<UserLocation> const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getValidityTime() const;
  void setValidityTime(std::string const &value);

  friend void to_json(nlohmann::json &j, const ExpectedUeBehavior &o);
  friend void from_json(const nlohmann::json &j, ExpectedUeBehavior &o);

protected:
  std::vector<UserLocation> m_ExpMoveTrajectory;

  std::string m_ValidityTime;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ExpectedUeBehavior_H_ */
