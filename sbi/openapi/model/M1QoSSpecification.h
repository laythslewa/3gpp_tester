/**
 * M1_PolicyTemplatesProvisioning
 * 5GMS AF M1 Policy Templates Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * M1QoSSpecification.h
 *
 *
 */

#ifndef M1QoSSpecification_H_
#define M1QoSSpecification_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class M1QoSSpecification {
public:
  M1QoSSpecification();
  virtual ~M1QoSSpecification();

  void validate();

  /////////////////////////////////////////////
  /// M1QoSSpecification members

  /// <summary>
  ///
  /// </summary>
  std::string getQosReference() const;
  void setQosReference(std::string const &value);
  bool qosReferenceIsSet() const;
  void unsetQosReference();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxBtrUl() const;
  void setMaxBtrUl(std::string const &value);
  bool maxBtrUlIsSet() const;
  void unsetMaxBtrUl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxBtrDl() const;
  void setMaxBtrDl(std::string const &value);
  bool maxBtrDlIsSet() const;
  void unsetMaxBtrDl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxAuthBtrUl() const;
  void setMaxAuthBtrUl(std::string const &value);
  bool maxAuthBtrUlIsSet() const;
  void unsetMaxAuthBtrUl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxAuthBtrDl() const;
  void setMaxAuthBtrDl(std::string const &value);
  bool maxAuthBtrDlIsSet() const;
  void unsetMaxAuthBtrDl();
  /// <summary>
  ///
  /// </summary>
  int32_t getDefPacketLossRateDl() const;
  void setDefPacketLossRateDl(int32_t const value);
  bool defPacketLossRateDlIsSet() const;
  void unsetDefPacketLossRateDl();
  /// <summary>
  ///
  /// </summary>
  int32_t getDefPacketLossRateUl() const;
  void setDefPacketLossRateUl(int32_t const value);
  bool defPacketLossRateUlIsSet() const;
  void unsetDefPacketLossRateUl();

  friend void to_json(nlohmann::json &j, const M1QoSSpecification &o);
  friend void from_json(const nlohmann::json &j, M1QoSSpecification &o);

protected:
  std::string m_QosReference;
  bool m_QosReferenceIsSet;
  std::string m_MaxBtrUl;
  bool m_MaxBtrUlIsSet;
  std::string m_MaxBtrDl;
  bool m_MaxBtrDlIsSet;
  std::string m_MaxAuthBtrUl;
  bool m_MaxAuthBtrUlIsSet;
  std::string m_MaxAuthBtrDl;
  bool m_MaxAuthBtrDlIsSet;
  int32_t m_DefPacketLossRateDl;
  bool m_DefPacketLossRateDlIsSet;
  int32_t m_DefPacketLossRateUl;
  bool m_DefPacketLossRateUlIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* M1QoSSpecification_H_ */
