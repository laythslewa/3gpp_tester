/**
 * M5_ServiceAccessInformation
 * 5GMS AF M5 Service Access Information API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration.h
 *
 *
 */

#ifndef ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration_H_
#define ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration_H_

#include "SdfMethod.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration {
public:
  ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration();
  virtual ~ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration();

  void validate();

  /////////////////////////////////////////////
  /// ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration
  /// members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getServerAddresses();
  void setServerAddresses(std::vector<std::string> const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getValidPolicyTemplateIds();
  void setValidPolicyTemplateIds(std::vector<std::string> const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<SdfMethod> &getSdfMethods();
  void setSdfMethods(std::vector<SdfMethod> const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getExternalReferences();
  void setExternalReferences(std::vector<std::string> const &value);
  bool externalReferencesIsSet() const;
  void unsetExternalReferences();

  friend void to_json(
      nlohmann::json &j,
      const ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration
          &o);
  friend void from_json(
      const nlohmann::json &j,
      ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration &o);

protected:
  std::vector<std::string> m_ServerAddresses;

  std::vector<std::string> m_ValidPolicyTemplateIds;

  std::vector<SdfMethod> m_SdfMethods;

  std::vector<std::string> m_ExternalReferences;
  bool m_ExternalReferencesIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ServiceAccessInformationResource_DynamicPolicyInvocationConfiguration_H_ \
        */
