/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualSMContextApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_SM_CONTEXT_API_IMPL_H_
#define INDIVIDUAL_SM_CONTEXT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualSMContextApi.h>

#include <pistache/optional.h>

#include "ExtProblemDetails.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include "SendMoDataReqData.h"
#include "SmContextReleaseData.h"
#include "SmContextReleasedData.h"
#include "SmContextRetrieveData.h"
#include "SmContextRetrievedData.h"
#include "SmContextUpdateData.h"
#include "SmContextUpdateError.h"
#include "SmContextUpdatedData.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualSMContextApiImpl
    : public org::openapitools::server::api::IndividualSMContextApi {
public:
  IndividualSMContextApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualSMContextApiImpl() {}

  void release_sm_context(const std::string &smContextRef,
                          const SmContextReleaseData &smContextReleaseData,
                          Pistache::Http::ResponseWriter &response);
  void retrieve_sm_context(const std::string &smContextRef,
                           const SmContextRetrieveData &smContextRetrieveData,
                           Pistache::Http::ResponseWriter &response);
  void send_mo_data(const Pistache::Rest::Request &request,
                    Pistache::Http::ResponseWriter &response);
  void update_sm_context(const std::string &smContextRef,
                         const SmContextUpdateData &smContextUpdateData,
                         Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif