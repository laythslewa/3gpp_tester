/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Spt.h
 *
 *
 */

#ifndef Spt_H_
#define Spt_H_

#include "HeaderSipRequest.h"
#include "RegistrationType.h"
#include "RequestDirection.h"
#include "SdpDescription.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class Spt {
public:
  Spt();
  virtual ~Spt();

  void validate();

  /////////////////////////////////////////////
  /// Spt members

  /// <summary>
  ///
  /// </summary>
  bool isConditionNegated() const;
  void setConditionNegated(bool const value);
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t> &getSptGroup();
  void setSptGroup(std::vector<int32_t> const value);
  /// <summary>
  ///
  /// </summary>
  std::vector<RegistrationType> &getRegType();
  void setRegType(std::vector<RegistrationType> const &value);
  bool regTypeIsSet() const;
  void unsetRegType();
  /// <summary>
  ///
  /// </summary>
  std::string getRequestUri() const;
  void setRequestUri(std::string const &value);
  bool requestUriIsSet() const;
  void unsetRequestUri();
  /// <summary>
  ///
  /// </summary>
  std::string getSipMethod() const;
  void setSipMethod(std::string const &value);
  bool sipMethodIsSet() const;
  void unsetSipMethod();
  /// <summary>
  ///
  /// </summary>
  HeaderSipRequest getSipHeader() const;
  void setSipHeader(HeaderSipRequest const &value);
  bool sipHeaderIsSet() const;
  void unsetSipHeader();
  /// <summary>
  ///
  /// </summary>
  RequestDirection getSessionCase() const;
  void setSessionCase(RequestDirection const &value);
  bool sessionCaseIsSet() const;
  void unsetSessionCase();
  /// <summary>
  ///
  /// </summary>
  SdpDescription getSessionDescription() const;
  void setSessionDescription(SdpDescription const &value);
  bool sessionDescriptionIsSet() const;
  void unsetSessionDescription();

  friend void to_json(nlohmann::json &j, const Spt &o);
  friend void from_json(const nlohmann::json &j, Spt &o);

protected:
  bool m_ConditionNegated;

  std::vector<int32_t> m_SptGroup;

  std::vector<RegistrationType> m_RegType;
  bool m_RegTypeIsSet;
  std::string m_RequestUri;
  bool m_RequestUriIsSet;
  std::string m_SipMethod;
  bool m_SipMethodIsSet;
  HeaderSipRequest m_SipHeader;
  bool m_SipHeaderIsSet;
  RequestDirection m_SessionCase;
  bool m_SessionCaseIsSet;
  SdpDescription m_SessionDescription;
  bool m_SessionDescriptionIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Spt_H_ */
