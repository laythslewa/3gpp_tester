/**
 * M1_ContentHostingProvisioning
 * 5GMS AF M1 Content Hosting Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CachingConfiguration.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CachingConfiguration::CachingConfiguration() {
  m_UrlPatternFilter = "";
  m_UrlPatternFilterIsSet = false;
  m_CachingDirectivesIsSet = false;
}

CachingConfiguration::~CachingConfiguration() {}

void CachingConfiguration::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CachingConfiguration &o) {
  j = nlohmann::json();
  if (o.urlPatternFilterIsSet())
    j["urlPatternFilter"] = o.m_UrlPatternFilter;
  if (o.cachingDirectivesIsSet())
    j["CachingDirectives"] = o.m_CachingDirectives;
}

void from_json(const nlohmann::json &j, CachingConfiguration &o) {
  if (j.find("urlPatternFilter") != j.end()) {
    j.at("urlPatternFilter").get_to(o.m_UrlPatternFilter);
    o.m_UrlPatternFilterIsSet = true;
  }
  if (j.find("CachingDirectives") != j.end()) {
    j.at("CachingDirectives").get_to(o.m_CachingDirectives);
    o.m_CachingDirectivesIsSet = true;
  }
}

std::string CachingConfiguration::getUrlPatternFilter() const {
  return m_UrlPatternFilter;
}
void CachingConfiguration::setUrlPatternFilter(std::string const &value) {
  m_UrlPatternFilter = value;
  m_UrlPatternFilterIsSet = true;
}
bool CachingConfiguration::urlPatternFilterIsSet() const {
  return m_UrlPatternFilterIsSet;
}
void CachingConfiguration::unsetUrlPatternFilter() {
  m_UrlPatternFilterIsSet = false;
}
CachingConfiguration_CachingDirectives
CachingConfiguration::getCachingDirectives() const {
  return m_CachingDirectives;
}
void CachingConfiguration::setCachingDirectives(
    CachingConfiguration_CachingDirectives const &value) {
  m_CachingDirectives = value;
  m_CachingDirectivesIsSet = true;
}
bool CachingConfiguration::cachingDirectivesIsSet() const {
  return m_CachingDirectivesIsSet;
}
void CachingConfiguration::unsetCachingDirectives() {
  m_CachingDirectivesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
