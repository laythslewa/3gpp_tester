/**
 * 3gpp-msisdn-less-mo-sms
 * API for MSISDN-less Mobile Originated SMS. © 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * MsisdnLessMoSmsNotification.h
 *
 * Represents a MSISDN-less MO SMS notification.
 */

#ifndef MsisdnLessMoSmsNotification_H_
#define MsisdnLessMoSmsNotification_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a MSISDN-less MO SMS notification.
/// </summary>
class MsisdnLessMoSmsNotification {
public:
  MsisdnLessMoSmsNotification();
  virtual ~MsisdnLessMoSmsNotification();

  void validate();

  /////////////////////////////////////////////
  /// MsisdnLessMoSmsNotification members

  /// <summary>
  /// A string used to indicate the features supported by an API that is used as
  /// defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a
  /// bitmask indicating supported features in hexadecimal representation Each
  /// character in the string shall take a value of \&quot;0\&quot; to
  /// \&quot;9\&quot;, \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to
  /// \&quot;F\&quot; and shall represent the support of 4 features as described
  /// in table 5.2.2-3. The most significant character representing the
  /// highest-numbered features shall appear first in the string, and the
  /// character representing features 1 to 4 shall appear last in the string.
  /// The list of features and their numbering (starting with 1) are defined
  /// separately for each API. If the string contains a lower number of
  /// characters than there are defined features for an API, all features that
  /// would be represented by characters that are not present in the string are
  /// not supported
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const &value);
  /// <summary>
  /// String with format \&quot;byte\&quot; as defined in OpenAPI Specification,
  /// i.e, base64-encoded characters.
  /// </summary>
  std::string getSms() const;
  void setSms(std::string const &value);
  /// <summary>
  /// External identifier has the form username@realm.
  /// </summary>
  std::string getExternalId() const;
  void setExternalId(std::string const &value);
  /// <summary>
  /// Unsigned integer with valid values between 0 and 65535.
  /// </summary>
  int32_t getApplicationPort() const;
  void setApplicationPort(int32_t const value);

  friend void to_json(nlohmann::json &j, const MsisdnLessMoSmsNotification &o);
  friend void from_json(const nlohmann::json &j,
                        MsisdnLessMoSmsNotification &o);

protected:
  std::string m_SupportedFeatures;

  std::string m_Sms;

  std::string m_ExternalId;

  int32_t m_ApplicationPort;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* MsisdnLessMoSmsNotification_H_ */
