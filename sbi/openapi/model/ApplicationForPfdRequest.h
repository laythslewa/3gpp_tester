/**
 * Nnef_PFDmanagement Service API
 * Packet Flow Description Management Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ApplicationForPfdRequest.h
 *
 * Contains the application identifer(s) for the PFD(s) request.
 */

#ifndef ApplicationForPfdRequest_H_
#define ApplicationForPfdRequest_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the application identifer(s) for the PFD(s) request.
/// </summary>
class ApplicationForPfdRequest {
public:
  ApplicationForPfdRequest();
  virtual ~ApplicationForPfdRequest();

  void validate();

  /////////////////////////////////////////////
  /// ApplicationForPfdRequest members

  /// <summary>
  /// String providing an application identifier.
  /// </summary>
  std::string getApplicationId() const;
  void setApplicationId(std::string const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getPfdTimestamp() const;
  void setPfdTimestamp(std::string const &value);
  bool pfdTimestampIsSet() const;
  void unsetPfdTimestamp();

  friend void to_json(nlohmann::json &j, const ApplicationForPfdRequest &o);
  friend void from_json(const nlohmann::json &j, ApplicationForPfdRequest &o);

protected:
  std::string m_ApplicationId;

  std::string m_PfdTimestamp;
  bool m_PfdTimestampIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ApplicationForPfdRequest_H_ */
