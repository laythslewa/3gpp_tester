/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ReleasedData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ReleasedData::ReleasedData() {
  m_SmallDataRateStatusIsSet = false;
  m_ApnRateStatusIsSet = false;
  m_N4InfoIsSet = false;
  m_N4InfoExt1IsSet = false;
  m_N4InfoExt2IsSet = false;
}

ReleasedData::~ReleasedData() {}

void ReleasedData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ReleasedData &o) {
  j = nlohmann::json();
  if (o.smallDataRateStatusIsSet())
    j["smallDataRateStatus"] = o.m_SmallDataRateStatus;
  if (o.apnRateStatusIsSet())
    j["apnRateStatus"] = o.m_ApnRateStatus;
  if (o.n4InfoIsSet())
    j["n4Info"] = o.m_N4Info;
  if (o.n4InfoExt1IsSet())
    j["n4InfoExt1"] = o.m_N4InfoExt1;
  if (o.n4InfoExt2IsSet())
    j["n4InfoExt2"] = o.m_N4InfoExt2;
}

void from_json(const nlohmann::json &j, ReleasedData &o) {
  if (j.find("smallDataRateStatus") != j.end()) {
    j.at("smallDataRateStatus").get_to(o.m_SmallDataRateStatus);
    o.m_SmallDataRateStatusIsSet = true;
  }
  if (j.find("apnRateStatus") != j.end()) {
    j.at("apnRateStatus").get_to(o.m_ApnRateStatus);
    o.m_ApnRateStatusIsSet = true;
  }
  if (j.find("n4Info") != j.end()) {
    j.at("n4Info").get_to(o.m_N4Info);
    o.m_N4InfoIsSet = true;
  }
  if (j.find("n4InfoExt1") != j.end()) {
    j.at("n4InfoExt1").get_to(o.m_N4InfoExt1);
    o.m_N4InfoExt1IsSet = true;
  }
  if (j.find("n4InfoExt2") != j.end()) {
    j.at("n4InfoExt2").get_to(o.m_N4InfoExt2);
    o.m_N4InfoExt2IsSet = true;
  }
}

SmallDataRateStatus ReleasedData::getSmallDataRateStatus() const {
  return m_SmallDataRateStatus;
}
void ReleasedData::setSmallDataRateStatus(SmallDataRateStatus const &value) {
  m_SmallDataRateStatus = value;
  m_SmallDataRateStatusIsSet = true;
}
bool ReleasedData::smallDataRateStatusIsSet() const {
  return m_SmallDataRateStatusIsSet;
}
void ReleasedData::unsetSmallDataRateStatus() {
  m_SmallDataRateStatusIsSet = false;
}
ApnRateStatus ReleasedData::getApnRateStatus() const { return m_ApnRateStatus; }
void ReleasedData::setApnRateStatus(ApnRateStatus const &value) {
  m_ApnRateStatus = value;
  m_ApnRateStatusIsSet = true;
}
bool ReleasedData::apnRateStatusIsSet() const { return m_ApnRateStatusIsSet; }
void ReleasedData::unsetApnRateStatus() { m_ApnRateStatusIsSet = false; }
N4Information ReleasedData::getN4Info() const { return m_N4Info; }
void ReleasedData::setN4Info(N4Information const &value) {
  m_N4Info = value;
  m_N4InfoIsSet = true;
}
bool ReleasedData::n4InfoIsSet() const { return m_N4InfoIsSet; }
void ReleasedData::unsetN4Info() { m_N4InfoIsSet = false; }
N4Information ReleasedData::getN4InfoExt1() const { return m_N4InfoExt1; }
void ReleasedData::setN4InfoExt1(N4Information const &value) {
  m_N4InfoExt1 = value;
  m_N4InfoExt1IsSet = true;
}
bool ReleasedData::n4InfoExt1IsSet() const { return m_N4InfoExt1IsSet; }
void ReleasedData::unsetN4InfoExt1() { m_N4InfoExt1IsSet = false; }
N4Information ReleasedData::getN4InfoExt2() const { return m_N4InfoExt2; }
void ReleasedData::setN4InfoExt2(N4Information const &value) {
  m_N4InfoExt2 = value;
  m_N4InfoExt2IsSet = true;
}
bool ReleasedData::n4InfoExt2IsSet() const { return m_N4InfoExt2IsSet; }
void ReleasedData::unsetN4InfoExt2() { m_N4InfoExt2IsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
