/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmContextRetrievedData.h
 *
 * Data within Retrieve SM Context Response
 */

#ifndef SmContextRetrievedData_H_
#define SmContextRetrievedData_H_

#include "ApnRateStatus.h"
#include "SmContext.h"
#include "SmallDataRateStatus.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Data within Retrieve SM Context Response
/// </summary>
class SmContextRetrievedData {
public:
  SmContextRetrievedData();
  virtual ~SmContextRetrievedData();

  void validate();

  /////////////////////////////////////////////
  /// SmContextRetrievedData members

  /// <summary>
  /// UE EPS PDN Connection container from SMF to AMF
  /// </summary>
  std::string getUeEpsPdnConnection() const;
  void setUeEpsPdnConnection(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  SmContext getSmContext() const;
  void setSmContext(SmContext const &value);
  bool smContextIsSet() const;
  void unsetSmContext();
  /// <summary>
  ///
  /// </summary>
  SmallDataRateStatus getSmallDataRateStatus() const;
  void setSmallDataRateStatus(SmallDataRateStatus const &value);
  bool smallDataRateStatusIsSet() const;
  void unsetSmallDataRateStatus();
  /// <summary>
  ///
  /// </summary>
  ApnRateStatus getApnRateStatus() const;
  void setApnRateStatus(ApnRateStatus const &value);
  bool apnRateStatusIsSet() const;
  void unsetApnRateStatus();
  /// <summary>
  ///
  /// </summary>
  bool isDlDataWaitingInd() const;
  void setDlDataWaitingInd(bool const value);
  bool dlDataWaitingIndIsSet() const;
  void unsetDlDataWaitingInd();

  friend void to_json(nlohmann::json &j, const SmContextRetrievedData &o);
  friend void from_json(const nlohmann::json &j, SmContextRetrievedData &o);

protected:
  std::string m_UeEpsPdnConnection;

  SmContext m_SmContext;
  bool m_SmContextIsSet;
  SmallDataRateStatus m_SmallDataRateStatus;
  bool m_SmallDataRateStatusIsSet;
  ApnRateStatus m_ApnRateStatus;
  bool m_ApnRateStatusIsSet;
  bool m_DlDataWaitingInd;
  bool m_DlDataWaitingIndIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmContextRetrievedData_H_ */
