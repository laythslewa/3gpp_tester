/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AuthEvent.h
 *
 *
 */

#ifndef AuthEvent_H_
#define AuthEvent_H_

#include "AuthType.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class AuthEvent {
public:
  AuthEvent();
  virtual ~AuthEvent();

  void validate();

  /////////////////////////////////////////////
  /// AuthEvent members

  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getNfInstanceId() const;
  void setNfInstanceId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  bool isSuccess() const;
  void setSuccess(bool const value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getTimeStamp() const;
  void setTimeStamp(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  AuthType getAuthType() const;
  void setAuthType(AuthType const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getServingNetworkName() const;
  void setServingNetworkName(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  bool isAuthRemovalInd() const;
  void setAuthRemovalInd(bool const value);
  bool authRemovalIndIsSet() const;
  void unsetAuthRemovalInd();

  friend void to_json(nlohmann::json &j, const AuthEvent &o);
  friend void from_json(const nlohmann::json &j, AuthEvent &o);

protected:
  std::string m_NfInstanceId;

  bool m_Success;

  std::string m_TimeStamp;

  AuthType m_AuthType;

  std::string m_ServingNetworkName;

  bool m_AuthRemovalInd;
  bool m_AuthRemovalIndIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AuthEvent_H_ */
