/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UEPolicySetDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

UEPolicySetDocumentApiImpl::UEPolicySetDocumentApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : UEPolicySetDocumentApi(rtr) {}

void UEPolicySetDocumentApiImpl::create_or_replace_ue_policy_set(
    const std::string &ueId, const UePolicySet &uePolicySet,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void UEPolicySetDocumentApiImpl::read_ue_policy_set(
    const std::string &ueId, const Pistache::Optional<std::string> &suppFeat,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void UEPolicySetDocumentApiImpl::update_ue_policy_set(
    const std::string &ueId, const UePolicySetPatch &uePolicySetPatch,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
