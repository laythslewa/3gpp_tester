/**
 * Nhss_imsUECM
 * Nhss UE Context Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RestorationInfo.h
 *
 * The information relevant to a specific registration required for an S-CSCF to
 * handle the requests for a user
 */

#ifndef RestorationInfo_H_
#define RestorationInfo_H_

#include "ImsSdmSubscription.h"
#include "PcscfSubscriptionInfo.h"
#include "UeSubscriptionInfo.h"
#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The information relevant to a specific registration required for an S-CSCF
/// to handle the requests for a user
/// </summary>
class RestorationInfo {
public:
  RestorationInfo();
  virtual ~RestorationInfo();

  void validate();

  /////////////////////////////////////////////
  /// RestorationInfo members

  /// <summary>
  ///
  /// </summary>
  std::string getPath() const;
  void setPath(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getContact() const;
  void setContact(std::string const &value);
  /// <summary>
  /// Integer where the allowed values correspond to the value range of an
  /// unsigned 32-bit integer.
  /// </summary>
  int32_t getInitialCSeqSequenceNumber() const;
  void setInitialCSeqSequenceNumber(int32_t const value);
  bool initialCSeqSequenceNumberIsSet() const;
  void unsetInitialCSeqSequenceNumber();
  /// <summary>
  ///
  /// </summary>
  std::string getCallIdSipHeader() const;
  void setCallIdSipHeader(std::string const &value);
  bool callIdSipHeaderIsSet() const;
  void unsetCallIdSipHeader();
  /// <summary>
  ///
  /// </summary>
  UeSubscriptionInfo getUesubscriptionInfo() const;
  void setUesubscriptionInfo(UeSubscriptionInfo const &value);
  bool uesubscriptionInfoIsSet() const;
  void unsetUesubscriptionInfo();
  /// <summary>
  ///
  /// </summary>
  PcscfSubscriptionInfo getPcscfSubscriptionInfo() const;
  void setPcscfSubscriptionInfo(PcscfSubscriptionInfo const &value);
  bool pcscfSubscriptionInfoIsSet() const;
  void unsetPcscfSubscriptionInfo();
  /// <summary>
  /// A map (list of key-value pairs where subscriptionId serves as key) of
  /// ImsSdmSubscription
  /// </summary>
  std::map<std::string, ImsSdmSubscription> &getImsSdmSubscriptions();
  void setImsSdmSubscriptions(
      std::map<std::string, ImsSdmSubscription> const &value);
  bool imsSdmSubscriptionsIsSet() const;
  void unsetImsSdmSubscriptions();

  friend void to_json(nlohmann::json &j, const RestorationInfo &o);
  friend void from_json(const nlohmann::json &j, RestorationInfo &o);

protected:
  std::string m_Path;

  std::string m_Contact;

  int32_t m_InitialCSeqSequenceNumber;
  bool m_InitialCSeqSequenceNumberIsSet;
  std::string m_CallIdSipHeader;
  bool m_CallIdSipHeaderIsSet;
  UeSubscriptionInfo m_UesubscriptionInfo;
  bool m_UesubscriptionInfoIsSet;
  PcscfSubscriptionInfo m_PcscfSubscriptionInfo;
  bool m_PcscfSubscriptionInfoIsSet;
  std::map<std::string, ImsSdmSubscription> m_ImsSdmSubscriptions;
  bool m_ImsSdmSubscriptionsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RestorationInfo_H_ */
