/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ReportingArea.h
 *
 * Indicates an area for event reporting.
 */

#ifndef ReportingArea_H_
#define ReportingArea_H_

#include "Ecgi.h"
#include "Ncgi.h"
#include "ReportingAreaType.h"
#include "Tai.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Indicates an area for event reporting.
/// </summary>
class ReportingArea {
public:
  ReportingArea();
  virtual ~ReportingArea();

  void validate();

  /////////////////////////////////////////////
  /// ReportingArea members

  /// <summary>
  ///
  /// </summary>
  ReportingAreaType getAreaType() const;
  void setAreaType(ReportingAreaType const &value);
  /// <summary>
  ///
  /// </summary>
  Tai getTai() const;
  void setTai(Tai const &value);
  bool taiIsSet() const;
  void unsetTai();
  /// <summary>
  ///
  /// </summary>
  Ecgi getEcgi() const;
  void setEcgi(Ecgi const &value);
  bool ecgiIsSet() const;
  void unsetEcgi();
  /// <summary>
  ///
  /// </summary>
  Ncgi getNcgi() const;
  void setNcgi(Ncgi const &value);
  bool ncgiIsSet() const;
  void unsetNcgi();

  friend void to_json(nlohmann::json &j, const ReportingArea &o);
  friend void from_json(const nlohmann::json &j, ReportingArea &o);

protected:
  ReportingAreaType m_AreaType;

  Tai m_Tai;
  bool m_TaiIsSet;
  Ecgi m_Ecgi;
  bool m_EcgiIsSet;
  Ncgi m_Ncgi;
  bool m_NcgiIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ReportingArea_H_ */
