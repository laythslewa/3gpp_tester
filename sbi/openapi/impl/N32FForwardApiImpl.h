/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * N32FForwardApiImpl.h
 *
 *
 */

#ifndef N32_F_FORWARD_API_IMPL_H_
#define N32_F_FORWARD_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <N32FForwardApi.h>

#include <pistache/optional.h>

#include "N32fReformattedReqMsg.h"
#include "N32fReformattedRspMsg.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class N32FForwardApiImpl
    : public org::openapitools::server::api::N32FForwardApi {
public:
  N32FForwardApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~N32FForwardApiImpl() {}

  void n32f_process_options(Pistache::Http::ResponseWriter &response);
  void post_n32f_process(
      const N32fReformattedReqMsg &n32fReformattedReqMsg,
      const Pistache::Optional<Pistache::Http::Header::Raw> &contentEncoding,
      const Pistache::Optional<Pistache::Http::Header::Raw> &acceptEncoding,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif