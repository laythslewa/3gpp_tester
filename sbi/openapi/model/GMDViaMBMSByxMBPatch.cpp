/**
 * GMDviaMBMSbyxMB
 * API for Group Message Delivery via MBMS by xMB Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "GMDViaMBMSByxMBPatch.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

GMDViaMBMSByxMBPatch::GMDViaMBMSByxMBPatch() {
  m_MbmsLocAreaIsSet = false;
  m_MessageDeliveryStartTime = "";
  m_MessageDeliveryStartTimeIsSet = false;
  m_MessageDeliveryStopTime = "";
  m_MessageDeliveryStopTimeIsSet = false;
  m_GroupMessagePayload = "";
  m_GroupMessagePayloadIsSet = false;
}

GMDViaMBMSByxMBPatch::~GMDViaMBMSByxMBPatch() {}

void GMDViaMBMSByxMBPatch::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const GMDViaMBMSByxMBPatch &o) {
  j = nlohmann::json();
  if (o.mbmsLocAreaIsSet())
    j["mbmsLocArea"] = o.m_MbmsLocArea;
  if (o.messageDeliveryStartTimeIsSet())
    j["messageDeliveryStartTime"] = o.m_MessageDeliveryStartTime;
  if (o.messageDeliveryStopTimeIsSet())
    j["messageDeliveryStopTime"] = o.m_MessageDeliveryStopTime;
  if (o.groupMessagePayloadIsSet())
    j["groupMessagePayload"] = o.m_GroupMessagePayload;
}

void from_json(const nlohmann::json &j, GMDViaMBMSByxMBPatch &o) {
  if (j.find("mbmsLocArea") != j.end()) {
    j.at("mbmsLocArea").get_to(o.m_MbmsLocArea);
    o.m_MbmsLocAreaIsSet = true;
  }
  if (j.find("messageDeliveryStartTime") != j.end()) {
    j.at("messageDeliveryStartTime").get_to(o.m_MessageDeliveryStartTime);
    o.m_MessageDeliveryStartTimeIsSet = true;
  }
  if (j.find("messageDeliveryStopTime") != j.end()) {
    j.at("messageDeliveryStopTime").get_to(o.m_MessageDeliveryStopTime);
    o.m_MessageDeliveryStopTimeIsSet = true;
  }
  if (j.find("groupMessagePayload") != j.end()) {
    j.at("groupMessagePayload").get_to(o.m_GroupMessagePayload);
    o.m_GroupMessagePayloadIsSet = true;
  }
}

MbmsLocArea GMDViaMBMSByxMBPatch::getMbmsLocArea() const {
  return m_MbmsLocArea;
}
void GMDViaMBMSByxMBPatch::setMbmsLocArea(MbmsLocArea const &value) {
  m_MbmsLocArea = value;
  m_MbmsLocAreaIsSet = true;
}
bool GMDViaMBMSByxMBPatch::mbmsLocAreaIsSet() const {
  return m_MbmsLocAreaIsSet;
}
void GMDViaMBMSByxMBPatch::unsetMbmsLocArea() { m_MbmsLocAreaIsSet = false; }
std::string GMDViaMBMSByxMBPatch::getMessageDeliveryStartTime() const {
  return m_MessageDeliveryStartTime;
}
void GMDViaMBMSByxMBPatch::setMessageDeliveryStartTime(
    std::string const &value) {
  m_MessageDeliveryStartTime = value;
  m_MessageDeliveryStartTimeIsSet = true;
}
bool GMDViaMBMSByxMBPatch::messageDeliveryStartTimeIsSet() const {
  return m_MessageDeliveryStartTimeIsSet;
}
void GMDViaMBMSByxMBPatch::unsetMessageDeliveryStartTime() {
  m_MessageDeliveryStartTimeIsSet = false;
}
std::string GMDViaMBMSByxMBPatch::getMessageDeliveryStopTime() const {
  return m_MessageDeliveryStopTime;
}
void GMDViaMBMSByxMBPatch::setMessageDeliveryStopTime(
    std::string const &value) {
  m_MessageDeliveryStopTime = value;
  m_MessageDeliveryStopTimeIsSet = true;
}
bool GMDViaMBMSByxMBPatch::messageDeliveryStopTimeIsSet() const {
  return m_MessageDeliveryStopTimeIsSet;
}
void GMDViaMBMSByxMBPatch::unsetMessageDeliveryStopTime() {
  m_MessageDeliveryStopTimeIsSet = false;
}
std::string GMDViaMBMSByxMBPatch::getGroupMessagePayload() const {
  return m_GroupMessagePayload;
}
void GMDViaMBMSByxMBPatch::setGroupMessagePayload(std::string const &value) {
  m_GroupMessagePayload = value;
  m_GroupMessagePayloadIsSet = true;
}
bool GMDViaMBMSByxMBPatch::groupMessagePayloadIsSet() const {
  return m_GroupMessagePayloadIsSet;
}
void GMDViaMBMSByxMBPatch::unsetGroupMessagePayload() {
  m_GroupMessagePayloadIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
