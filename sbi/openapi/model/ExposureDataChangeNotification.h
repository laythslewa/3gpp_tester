/**
 * Unified Data Repository Service API file for structured data for exposure
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ExposureDataChangeNotification.h
 *
 * Represents changed exposure data for one UE for which Notification was
 * requested.
 */

#ifndef ExposureDataChangeNotification_H_
#define ExposureDataChangeNotification_H_

#include "AccessAndMobilityData.h"
#include "PduSessionManagementData.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents changed exposure data for one UE for which Notification was
/// requested.
/// </summary>
class ExposureDataChangeNotification {
public:
  ExposureDataChangeNotification();
  virtual ~ExposureDataChangeNotification();

  void validate();

  /////////////////////////////////////////////
  /// ExposureDataChangeNotification members

  /// <summary>
  /// String represents the SUPI or GPSI
  /// </summary>
  std::string getUeId() const;
  void setUeId(std::string const &value);
  bool ueIdIsSet() const;
  void unsetUeId();
  /// <summary>
  ///
  /// </summary>
  AccessAndMobilityData getAccessAndMobilityData() const;
  void setAccessAndMobilityData(AccessAndMobilityData const &value);
  bool accessAndMobilityDataIsSet() const;
  void unsetAccessAndMobilityData();
  /// <summary>
  ///
  /// </summary>
  std::vector<PduSessionManagementData> &getPduSessionManagementData();
  void setPduSessionManagementData(
      std::vector<PduSessionManagementData> const &value);
  bool pduSessionManagementDataIsSet() const;
  void unsetPduSessionManagementData();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getDelResources();
  void setDelResources(std::vector<std::string> const &value);
  bool delResourcesIsSet() const;
  void unsetDelResources();

  friend void to_json(nlohmann::json &j,
                      const ExposureDataChangeNotification &o);
  friend void from_json(const nlohmann::json &j,
                        ExposureDataChangeNotification &o);

protected:
  std::string m_UeId;
  bool m_UeIdIsSet;
  AccessAndMobilityData m_AccessAndMobilityData;
  bool m_AccessAndMobilityDataIsSet;
  std::vector<PduSessionManagementData> m_PduSessionManagementData;
  bool m_PduSessionManagementDataIsSet;
  std::vector<std::string> m_DelResources;
  bool m_DelResourcesIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ExposureDataChangeNotification_H_ */
