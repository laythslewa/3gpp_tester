/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UeMobilityInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UeMobilityInfo::UeMobilityInfo() {
  m_Supi = "";
  m_AppId = "";
  m_AppIdIsSet = false;
}

UeMobilityInfo::~UeMobilityInfo() {}

void UeMobilityInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UeMobilityInfo &o) {
  j = nlohmann::json();
  j["supi"] = o.m_Supi;
  if (o.appIdIsSet())
    j["appId"] = o.m_AppId;
  j["ueTrajs"] = o.m_UeTrajs;
}

void from_json(const nlohmann::json &j, UeMobilityInfo &o) {
  j.at("supi").get_to(o.m_Supi);
  if (j.find("appId") != j.end()) {
    j.at("appId").get_to(o.m_AppId);
    o.m_AppIdIsSet = true;
  }
  j.at("ueTrajs").get_to(o.m_UeTrajs);
}

std::string UeMobilityInfo::getSupi() const { return m_Supi; }
void UeMobilityInfo::setSupi(std::string const &value) { m_Supi = value; }
std::string UeMobilityInfo::getAppId() const { return m_AppId; }
void UeMobilityInfo::setAppId(std::string const &value) {
  m_AppId = value;
  m_AppIdIsSet = true;
}
bool UeMobilityInfo::appIdIsSet() const { return m_AppIdIsSet; }
void UeMobilityInfo::unsetAppId() { m_AppIdIsSet = false; }
std::vector<UeTrajectoryInfo> &UeMobilityInfo::getUeTrajs() {
  return m_UeTrajs;
}
void UeMobilityInfo::setUeTrajs(std::vector<UeTrajectoryInfo> const &value) {
  m_UeTrajs = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
