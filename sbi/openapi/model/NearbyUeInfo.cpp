/**
 * VAE_HDMapDynamicInfo
 * API for VAE HDMapDynamicInfo Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NearbyUeInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NearbyUeInfo::NearbyUeInfo() {
  m_NearbyUeId = "";
  m_Distance = 0;
}

NearbyUeInfo::~NearbyUeInfo() {}

void NearbyUeInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NearbyUeInfo &o) {
  j = nlohmann::json();
  j["nearbyUeId"] = o.m_NearbyUeId;
  j["location"] = o.m_Location;
  j["distance"] = o.m_Distance;
}

void from_json(const nlohmann::json &j, NearbyUeInfo &o) {
  j.at("nearbyUeId").get_to(o.m_NearbyUeId);
  j.at("location").get_to(o.m_Location);
  j.at("distance").get_to(o.m_Distance);
}

std::string NearbyUeInfo::getNearbyUeId() const { return m_NearbyUeId; }
void NearbyUeInfo::setNearbyUeId(std::string const &value) {
  m_NearbyUeId = value;
}
UserLocation NearbyUeInfo::getLocation() const { return m_Location; }
void NearbyUeInfo::setLocation(UserLocation const &value) {
  m_Location = value;
}
int32_t NearbyUeInfo::getDistance() const { return m_Distance; }
void NearbyUeInfo::setDistance(int32_t const value) { m_Distance = value; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
