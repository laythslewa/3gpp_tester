/**
 * Nudm_UECM
 * Nudm Context Management Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UECMRegistrationInfoRetrievalApi.h
 *
 *
 */

#ifndef UECMRegistrationInfoRetrievalApi_H_
#define UECMRegistrationInfoRetrievalApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "ProblemDetails.h"
#include "RegistrationDataSetName.h"
#include "RegistrationDataSets.h"
#include "Snssai.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class UECMRegistrationInfoRetrievalApi {
public:
  UECMRegistrationInfoRetrievalApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~UECMRegistrationInfoRetrievalApi() {}
  void init();

  const std::string base = "/nudm-uecm/v1";

private:
  void setupRoutes();

  void get_registrations_handler(const Pistache::Rest::Request &request,
                                 Pistache::Http::ResponseWriter response);
  void uecm_registration_info_retrieval_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// retrieve UE registration data sets
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueId">Identifier of the UE</param>
  /// <param name="registrationDatasetNames">List of UECM registration dataset
  /// names</param> <param name="supportedFeatures"> (optional, default to
  /// &quot;&quot;)</param> <param name="singleNssai"> (optional, default to
  /// Snssai())</param> <param name="dnn"> (optional, default to
  /// &quot;&quot;)</param>
  virtual void get_registrations(
      const std::string &ueId,
      const Pistache::Optional<std::vector<RegistrationDataSetName>>
          &registrationDatasetNames,
      const Pistache::Optional<std::string> &supportedFeatures,
      const Pistache::Optional<Snssai> &singleNssai,
      const Pistache::Optional<std::string> &dnn,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UECMRegistrationInfoRetrievalApi_H_ */
