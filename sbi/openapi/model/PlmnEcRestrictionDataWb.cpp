/**
 * 3gpp-ecr-control
 * API for enhanced converage restriction control. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PlmnEcRestrictionDataWb.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PlmnEcRestrictionDataWb::PlmnEcRestrictionDataWb() {
  m_PlmnEcrDataWbIsSet = false;
}

PlmnEcRestrictionDataWb::~PlmnEcRestrictionDataWb() {}

void PlmnEcRestrictionDataWb::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PlmnEcRestrictionDataWb &o) {
  j = nlohmann::json();
  j["plmnId"] = o.m_PlmnId;
  if (o.plmnEcrDataWbIsSet())
    j["plmnEcrDataWb"] = o.m_PlmnEcrDataWb;
}

void from_json(const nlohmann::json &j, PlmnEcRestrictionDataWb &o) {
  j.at("plmnId").get_to(o.m_PlmnId);
  if (j.find("plmnEcrDataWb") != j.end()) {
    j.at("plmnEcrDataWb").get_to(o.m_PlmnEcrDataWb);
    o.m_PlmnEcrDataWbIsSet = true;
  }
}

PlmnId PlmnEcRestrictionDataWb::getPlmnId() const { return m_PlmnId; }
void PlmnEcRestrictionDataWb::setPlmnId(PlmnId const &value) {
  m_PlmnId = value;
}
EcRestrictionDataWb PlmnEcRestrictionDataWb::getPlmnEcrDataWb() const {
  return m_PlmnEcrDataWb;
}
void PlmnEcRestrictionDataWb::setPlmnEcrDataWb(
    EcRestrictionDataWb const &value) {
  m_PlmnEcrDataWb = value;
  m_PlmnEcrDataWbIsSet = true;
}
bool PlmnEcRestrictionDataWb::plmnEcrDataWbIsSet() const {
  return m_PlmnEcrDataWbIsSet;
}
void PlmnEcRestrictionDataWb::unsetPlmnEcrDataWb() {
  m_PlmnEcrDataWbIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
