/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "Throughput.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Throughput::Throughput() {
  m_GuaranteedThpt = 0.0f;
  m_GuaranteedThptIsSet = false;
  m_MaximumThpt = 0.0f;
  m_MaximumThptIsSet = false;
}

Throughput::~Throughput() {}

void Throughput::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const Throughput &o) {
  j = nlohmann::json();
  if (o.guaranteedThptIsSet())
    j["guaranteedThpt"] = o.m_GuaranteedThpt;
  if (o.maximumThptIsSet())
    j["maximumThpt"] = o.m_MaximumThpt;
}

void from_json(const nlohmann::json &j, Throughput &o) {
  if (j.find("guaranteedThpt") != j.end()) {
    j.at("guaranteedThpt").get_to(o.m_GuaranteedThpt);
    o.m_GuaranteedThptIsSet = true;
  }
  if (j.find("maximumThpt") != j.end()) {
    j.at("maximumThpt").get_to(o.m_MaximumThpt);
    o.m_MaximumThptIsSet = true;
  }
}

float Throughput::getGuaranteedThpt() const { return m_GuaranteedThpt; }
void Throughput::setGuaranteedThpt(float const value) {
  m_GuaranteedThpt = value;
  m_GuaranteedThptIsSet = true;
}
bool Throughput::guaranteedThptIsSet() const { return m_GuaranteedThptIsSet; }
void Throughput::unsetGuaranteedThpt() { m_GuaranteedThptIsSet = false; }
float Throughput::getMaximumThpt() const { return m_MaximumThpt; }
void Throughput::setMaximumThpt(float const value) {
  m_MaximumThpt = value;
  m_MaximumThptIsSet = true;
}
bool Throughput::maximumThptIsSet() const { return m_MaximumThptIsSet; }
void Throughput::unsetMaximumThpt() { m_MaximumThptIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
