/**
 * NSSF NS Selection
 * NSSF Network Slice Selection Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NetworkSliceInformationDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

NetworkSliceInformationDocumentApiImpl::NetworkSliceInformationDocumentApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : NetworkSliceInformationDocumentApi(rtr) {}

void NetworkSliceInformationDocumentApiImpl::n_s_selection_get(
    const Pistache::Optional<NFType> &nfType,
    const Pistache::Optional<std::string> &nfId,
    const Pistache::Optional<SliceInfoForRegistration>
        &sliceInfoRequestForRegistration,
    const Pistache::Optional<SliceInfoForPDUSession>
        &sliceInfoRequestForPduSession,
    const Pistache::Optional<SliceInfoForUEConfigurationUpdate>
        &sliceInfoRequestForUeCu,
    const Pistache::Optional<PlmnId> &homePlmnId,
    const Pistache::Optional<Tai> &tai,
    const Pistache::Optional<std::string> &supportedFeatures,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
