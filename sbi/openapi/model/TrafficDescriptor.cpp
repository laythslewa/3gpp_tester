/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TrafficDescriptor.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TrafficDescriptor::TrafficDescriptor() {
  m_Dnn = "";
  m_DnnIsSet = false;
  m_SNssaiIsSet = false;
  m_DddTrafficDescriptorListIsSet = false;
}

TrafficDescriptor::~TrafficDescriptor() {}

void TrafficDescriptor::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TrafficDescriptor &o) {
  j = nlohmann::json();
  if (o.dnnIsSet())
    j["dnn"] = o.m_Dnn;
  if (o.sNssaiIsSet())
    j["sNssai"] = o.m_SNssai;
  if (o.dddTrafficDescriptorListIsSet() ||
      !o.m_DddTrafficDescriptorList.empty())
    j["dddTrafficDescriptorList"] = o.m_DddTrafficDescriptorList;
}

void from_json(const nlohmann::json &j, TrafficDescriptor &o) {
  if (j.find("dnn") != j.end()) {
    j.at("dnn").get_to(o.m_Dnn);
    o.m_DnnIsSet = true;
  }
  if (j.find("sNssai") != j.end()) {
    j.at("sNssai").get_to(o.m_SNssai);
    o.m_SNssaiIsSet = true;
  }
  if (j.find("dddTrafficDescriptorList") != j.end()) {
    j.at("dddTrafficDescriptorList").get_to(o.m_DddTrafficDescriptorList);
    o.m_DddTrafficDescriptorListIsSet = true;
  }
}

std::string TrafficDescriptor::getDnn() const { return m_Dnn; }
void TrafficDescriptor::setDnn(std::string const &value) {
  m_Dnn = value;
  m_DnnIsSet = true;
}
bool TrafficDescriptor::dnnIsSet() const { return m_DnnIsSet; }
void TrafficDescriptor::unsetDnn() { m_DnnIsSet = false; }
Snssai TrafficDescriptor::getSNssai() const { return m_SNssai; }
void TrafficDescriptor::setSNssai(Snssai const &value) {
  m_SNssai = value;
  m_SNssaiIsSet = true;
}
bool TrafficDescriptor::sNssaiIsSet() const { return m_SNssaiIsSet; }
void TrafficDescriptor::unsetSNssai() { m_SNssaiIsSet = false; }
std::vector<DddTrafficDescriptor> &
TrafficDescriptor::getDddTrafficDescriptorList() {
  return m_DddTrafficDescriptorList;
}
void TrafficDescriptor::setDddTrafficDescriptorList(
    std::vector<DddTrafficDescriptor> const &value) {
  m_DddTrafficDescriptorList = value;
  m_DddTrafficDescriptorListIsSet = true;
}
bool TrafficDescriptor::dddTrafficDescriptorListIsSet() const {
  return m_DddTrafficDescriptorListIsSet;
}
void TrafficDescriptor::unsetDddTrafficDescriptorList() {
  m_DddTrafficDescriptorListIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
