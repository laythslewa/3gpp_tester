/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "EnhancedCoverageRestrictionData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

EnhancedCoverageRestrictionData::EnhancedCoverageRestrictionData() {
  m_PlmnEcInfoListIsSet = false;
}

EnhancedCoverageRestrictionData::~EnhancedCoverageRestrictionData() {}

void EnhancedCoverageRestrictionData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const EnhancedCoverageRestrictionData &o) {
  j = nlohmann::json();
  if (o.plmnEcInfoListIsSet() || !o.m_PlmnEcInfoList.empty())
    j["plmnEcInfoList"] = o.m_PlmnEcInfoList;
}

void from_json(const nlohmann::json &j, EnhancedCoverageRestrictionData &o) {
  if (j.find("plmnEcInfoList") != j.end()) {
    j.at("plmnEcInfoList").get_to(o.m_PlmnEcInfoList);
    o.m_PlmnEcInfoListIsSet = true;
  }
}

std::vector<PlmnEcInfo> &EnhancedCoverageRestrictionData::getPlmnEcInfoList() {
  return m_PlmnEcInfoList;
}
void EnhancedCoverageRestrictionData::setPlmnEcInfoList(
    std::vector<PlmnEcInfo> const &value) {
  m_PlmnEcInfoList = value;
  m_PlmnEcInfoListIsSet = true;
}
bool EnhancedCoverageRestrictionData::plmnEcInfoListIsSet() const {
  return m_PlmnEcInfoListIsSet;
}
void EnhancedCoverageRestrictionData::unsetPlmnEcInfoList() {
  m_PlmnEcInfoListIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
