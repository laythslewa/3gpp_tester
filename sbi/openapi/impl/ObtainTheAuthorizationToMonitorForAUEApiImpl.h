/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * ObtainTheAuthorizationToMonitorForAUEApiImpl.h
 *
 *
 */

#ifndef OBTAIN_THE_AUTHORIZATION_TO_MONITOR_FOR_AUE_API_IMPL_H_
#define OBTAIN_THE_AUTHORIZATION_TO_MONITOR_FOR_AUE_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <ObtainTheAuthorizationToMonitorForAUEApi.h>

#include <pistache/optional.h>

#include "MonitorAuthReqData.h"
#include "MonitorAuthRespData.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class ObtainTheAuthorizationToMonitorForAUEApiImpl
    : public org::openapitools::server::api::
          ObtainTheAuthorizationToMonitorForAUEApi {
public:
  ObtainTheAuthorizationToMonitorForAUEApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~ObtainTheAuthorizationToMonitorForAUEApiImpl() {}

  void obtain_monitor_auth(const std::string &ueId,
                           const std::string &discEntryId,
                           const MonitorAuthReqData &monitorAuthReqData,
                           Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif