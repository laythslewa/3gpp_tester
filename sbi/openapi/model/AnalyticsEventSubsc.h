/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AnalyticsEventSubsc.h
 *
 * Represents a subscribed analytics event.
 */

#ifndef AnalyticsEventSubsc_H_
#define AnalyticsEventSubsc_H_

#include "AnalyticsEvent.h"
#include "AnalyticsEventFilterSubsc.h"
#include "TargetUeId.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a subscribed analytics event.
/// </summary>
class AnalyticsEventSubsc {
public:
  AnalyticsEventSubsc();
  virtual ~AnalyticsEventSubsc();

  void validate();

  /////////////////////////////////////////////
  /// AnalyticsEventSubsc members

  /// <summary>
  ///
  /// </summary>
  AnalyticsEvent getAnalyEvent() const;
  void setAnalyEvent(AnalyticsEvent const &value);
  /// <summary>
  ///
  /// </summary>
  AnalyticsEventFilterSubsc getAnalyEventFilter() const;
  void setAnalyEventFilter(AnalyticsEventFilterSubsc const &value);
  bool analyEventFilterIsSet() const;
  void unsetAnalyEventFilter();
  /// <summary>
  ///
  /// </summary>
  TargetUeId getTgtUe() const;
  void setTgtUe(TargetUeId const &value);
  bool tgtUeIsSet() const;
  void unsetTgtUe();

  friend void to_json(nlohmann::json &j, const AnalyticsEventSubsc &o);
  friend void from_json(const nlohmann::json &j, AnalyticsEventSubsc &o);

protected:
  AnalyticsEvent m_AnalyEvent;

  AnalyticsEventFilterSubsc m_AnalyEventFilter;
  bool m_AnalyEventFilterIsSet;
  TargetUeId m_TgtUe;
  bool m_TgtUeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AnalyticsEventSubsc_H_ */
