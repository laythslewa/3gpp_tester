/**
 * M1_ConsumptionReportingProvisioning
 * 5GMS AF M1 Consumption Reporting Provisioning API Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ConsumptionReportingConfiguration.h
 *
 *
 */

#ifndef ConsumptionReportingConfiguration_H_
#define ConsumptionReportingConfiguration_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ConsumptionReportingConfiguration {
public:
  ConsumptionReportingConfiguration();
  virtual ~ConsumptionReportingConfiguration();

  void validate();

  /////////////////////////////////////////////
  /// ConsumptionReportingConfiguration members

  /// <summary>
  /// indicating a time in seconds.
  /// </summary>
  int32_t getReportingInterval() const;
  void setReportingInterval(int32_t const value);
  bool reportingIntervalIsSet() const;
  void unsetReportingInterval();
  /// <summary>
  ///
  /// </summary>
  double getSamplePercentage() const;
  void setSamplePercentage(double const value);
  bool samplePercentageIsSet() const;
  void unsetSamplePercentage();
  /// <summary>
  ///
  /// </summary>
  bool isLocationReporting() const;
  void setLocationReporting(bool const value);
  bool locationReportingIsSet() const;
  void unsetLocationReporting();

  friend void to_json(nlohmann::json &j,
                      const ConsumptionReportingConfiguration &o);
  friend void from_json(const nlohmann::json &j,
                        ConsumptionReportingConfiguration &o);

protected:
  int32_t m_ReportingInterval;
  bool m_ReportingIntervalIsSet;
  double m_SamplePercentage;
  bool m_SamplePercentageIsSet;
  bool m_LocationReporting;
  bool m_LocationReportingIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ConsumptionReportingConfiguration_H_ */
