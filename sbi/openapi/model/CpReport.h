/**
 * 3gpp-cp-parameter-provisioning
 * API for provisioning communication pattern parameters. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * CpReport.h
 *
 * Represents a CP report indicating the CP set identifier(s) which CP
 * parameter(s) are not added or modified successfully and the corresponding
 * failure cause(s).
 */

#ifndef CpReport_H_
#define CpReport_H_

#include "CpFailureCode.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a CP report indicating the CP set identifier(s) which CP
/// parameter(s) are not added or modified successfully and the corresponding
/// failure cause(s).
/// </summary>
class CpReport {
public:
  CpReport();
  virtual ~CpReport();

  void validate();

  /////////////////////////////////////////////
  /// CpReport members

  /// <summary>
  /// Identifies the CP set identifier(s) which CP parameter(s) are not added or
  /// modified successfully
  /// </summary>
  std::vector<std::string> &getSetIds();
  void setSetIds(std::vector<std::string> const &value);
  bool setIdsIsSet() const;
  void unsetSetIds();
  /// <summary>
  ///
  /// </summary>
  CpFailureCode getFailureCode() const;
  void setFailureCode(CpFailureCode const &value);

  friend void to_json(nlohmann::json &j, const CpReport &o);
  friend void from_json(const nlohmann::json &j, CpReport &o);

protected:
  std::vector<std::string> m_SetIds;
  bool m_SetIdsIsSet;
  CpFailureCode m_FailureCode;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* CpReport_H_ */
