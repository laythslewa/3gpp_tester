/**
 * Nnef_PFDmanagement Service API
 * Packet Flow Description Management Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PfdSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PfdSubscription::PfdSubscription() {
  m_ApplicationIdsIsSet = false;
  m_NotifyUri = "";
  m_SupportedFeatures = "";
}

PfdSubscription::~PfdSubscription() {}

void PfdSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PfdSubscription &o) {
  j = nlohmann::json();
  if (o.applicationIdsIsSet() || !o.m_ApplicationIds.empty())
    j["applicationIds"] = o.m_ApplicationIds;
  j["notifyUri"] = o.m_NotifyUri;
  j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, PfdSubscription &o) {
  if (j.find("applicationIds") != j.end()) {
    j.at("applicationIds").get_to(o.m_ApplicationIds);
    o.m_ApplicationIdsIsSet = true;
  }
  j.at("notifyUri").get_to(o.m_NotifyUri);
  j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
}

std::vector<std::string> &PfdSubscription::getApplicationIds() {
  return m_ApplicationIds;
}
void PfdSubscription::setApplicationIds(std::vector<std::string> const &value) {
  m_ApplicationIds = value;
  m_ApplicationIdsIsSet = true;
}
bool PfdSubscription::applicationIdsIsSet() const {
  return m_ApplicationIdsIsSet;
}
void PfdSubscription::unsetApplicationIds() { m_ApplicationIdsIsSet = false; }
std::string PfdSubscription::getNotifyUri() const { return m_NotifyUri; }
void PfdSubscription::setNotifyUri(std::string const &value) {
  m_NotifyUri = value;
}
std::string PfdSubscription::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void PfdSubscription::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
