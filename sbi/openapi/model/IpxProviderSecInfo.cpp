/**
 * N32 Handshake API
 * N32-c Handshake Service.  Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IpxProviderSecInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

IpxProviderSecInfo::IpxProviderSecInfo() {
  m_IpxProviderId = "";
  m_RawPublicKeyListIsSet = false;
  m_CertificateListIsSet = false;
}

IpxProviderSecInfo::~IpxProviderSecInfo() {}

void IpxProviderSecInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const IpxProviderSecInfo &o) {
  j = nlohmann::json();
  j["ipxProviderId"] = o.m_IpxProviderId;
  if (o.rawPublicKeyListIsSet() || !o.m_RawPublicKeyList.empty())
    j["rawPublicKeyList"] = o.m_RawPublicKeyList;
  if (o.certificateListIsSet() || !o.m_CertificateList.empty())
    j["certificateList"] = o.m_CertificateList;
}

void from_json(const nlohmann::json &j, IpxProviderSecInfo &o) {
  j.at("ipxProviderId").get_to(o.m_IpxProviderId);
  if (j.find("rawPublicKeyList") != j.end()) {
    j.at("rawPublicKeyList").get_to(o.m_RawPublicKeyList);
    o.m_RawPublicKeyListIsSet = true;
  }
  if (j.find("certificateList") != j.end()) {
    j.at("certificateList").get_to(o.m_CertificateList);
    o.m_CertificateListIsSet = true;
  }
}

std::string IpxProviderSecInfo::getIpxProviderId() const {
  return m_IpxProviderId;
}
void IpxProviderSecInfo::setIpxProviderId(std::string const &value) {
  m_IpxProviderId = value;
}
std::vector<std::string> &IpxProviderSecInfo::getRawPublicKeyList() {
  return m_RawPublicKeyList;
}
void IpxProviderSecInfo::setRawPublicKeyList(
    std::vector<std::string> const &value) {
  m_RawPublicKeyList = value;
  m_RawPublicKeyListIsSet = true;
}
bool IpxProviderSecInfo::rawPublicKeyListIsSet() const {
  return m_RawPublicKeyListIsSet;
}
void IpxProviderSecInfo::unsetRawPublicKeyList() {
  m_RawPublicKeyListIsSet = false;
}
std::vector<std::string> &IpxProviderSecInfo::getCertificateList() {
  return m_CertificateList;
}
void IpxProviderSecInfo::setCertificateList(
    std::vector<std::string> const &value) {
  m_CertificateList = value;
  m_CertificateListIsSet = true;
}
bool IpxProviderSecInfo::certificateListIsSet() const {
  return m_CertificateListIsSet;
}
void IpxProviderSecInfo::unsetCertificateList() {
  m_CertificateListIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
