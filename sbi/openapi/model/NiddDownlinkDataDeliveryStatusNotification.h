/**
 * 3gpp-nidd
 * API for non IP data delivery. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NiddDownlinkDataDeliveryStatusNotification.h
 *
 * Represents the delivery status of a specific NIDD downlink data delivery.
 */

#ifndef NiddDownlinkDataDeliveryStatusNotification_H_
#define NiddDownlinkDataDeliveryStatusNotification_H_

#include "DeliveryStatus.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the delivery status of a specific NIDD downlink data delivery.
/// </summary>
class NiddDownlinkDataDeliveryStatusNotification {
public:
  NiddDownlinkDataDeliveryStatusNotification();
  virtual ~NiddDownlinkDataDeliveryStatusNotification();

  void validate();

  /////////////////////////////////////////////
  /// NiddDownlinkDataDeliveryStatusNotification members

  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getNiddDownlinkDataTransfer() const;
  void setNiddDownlinkDataTransfer(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  DeliveryStatus getDeliveryStatus() const;
  void setDeliveryStatus(DeliveryStatus const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getRequestedRetransmissionTime() const;
  void setRequestedRetransmissionTime(std::string const &value);
  bool requestedRetransmissionTimeIsSet() const;
  void unsetRequestedRetransmissionTime();

  friend void to_json(nlohmann::json &j,
                      const NiddDownlinkDataDeliveryStatusNotification &o);
  friend void from_json(const nlohmann::json &j,
                        NiddDownlinkDataDeliveryStatusNotification &o);

protected:
  std::string m_NiddDownlinkDataTransfer;

  DeliveryStatus m_DeliveryStatus;

  std::string m_RequestedRetransmissionTime;
  bool m_RequestedRetransmissionTimeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NiddDownlinkDataDeliveryStatusNotification_H_ */
