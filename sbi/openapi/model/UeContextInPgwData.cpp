/**
 * Nhss_SDM
 * HSS Subscriber Data Management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UeContextInPgwData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UeContextInPgwData::UeContextInPgwData() {
  m_PgwInfoIsSet = false;
  m_EmergencyFqdn = "";
  m_EmergencyFqdnIsSet = false;
}

UeContextInPgwData::~UeContextInPgwData() {}

void UeContextInPgwData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UeContextInPgwData &o) {
  j = nlohmann::json();
  if (o.pgwInfoIsSet() || !o.m_PgwInfo.empty())
    j["pgwInfo"] = o.m_PgwInfo;
  if (o.emergencyFqdnIsSet())
    j["emergencyFqdn"] = o.m_EmergencyFqdn;
}

void from_json(const nlohmann::json &j, UeContextInPgwData &o) {
  if (j.find("pgwInfo") != j.end()) {
    j.at("pgwInfo").get_to(o.m_PgwInfo);
    o.m_PgwInfoIsSet = true;
  }
  if (j.find("emergencyFqdn") != j.end()) {
    j.at("emergencyFqdn").get_to(o.m_EmergencyFqdn);
    o.m_EmergencyFqdnIsSet = true;
  }
}

std::vector<PgwInfo> &UeContextInPgwData::getPgwInfo() { return m_PgwInfo; }
void UeContextInPgwData::setPgwInfo(std::vector<PgwInfo> const &value) {
  m_PgwInfo = value;
  m_PgwInfoIsSet = true;
}
bool UeContextInPgwData::pgwInfoIsSet() const { return m_PgwInfoIsSet; }
void UeContextInPgwData::unsetPgwInfo() { m_PgwInfoIsSet = false; }
std::string UeContextInPgwData::getEmergencyFqdn() const {
  return m_EmergencyFqdn;
}
void UeContextInPgwData::setEmergencyFqdn(std::string const &value) {
  m_EmergencyFqdn = value;
  m_EmergencyFqdnIsSet = true;
}
bool UeContextInPgwData::emergencyFqdnIsSet() const {
  return m_EmergencyFqdnIsSet;
}
void UeContextInPgwData::unsetEmergencyFqdn() { m_EmergencyFqdnIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
