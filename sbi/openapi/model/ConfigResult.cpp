/**
 * 3gpp-network-parameter-configuration
 * API for network parameter configuration. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ConfigResult.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ConfigResult::ConfigResult() {
  m_ExternalIdsIsSet = false;
  m_MsisdnsIsSet = false;
}

ConfigResult::~ConfigResult() {}

void ConfigResult::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ConfigResult &o) {
  j = nlohmann::json();
  if (o.externalIdsIsSet() || !o.m_ExternalIds.empty())
    j["externalIds"] = o.m_ExternalIds;
  if (o.msisdnsIsSet() || !o.m_Msisdns.empty())
    j["msisdns"] = o.m_Msisdns;
  j["resultReason"] = o.m_ResultReason;
}

void from_json(const nlohmann::json &j, ConfigResult &o) {
  if (j.find("externalIds") != j.end()) {
    j.at("externalIds").get_to(o.m_ExternalIds);
    o.m_ExternalIdsIsSet = true;
  }
  if (j.find("msisdns") != j.end()) {
    j.at("msisdns").get_to(o.m_Msisdns);
    o.m_MsisdnsIsSet = true;
  }
  j.at("resultReason").get_to(o.m_ResultReason);
}

std::vector<std::string> &ConfigResult::getExternalIds() {
  return m_ExternalIds;
}
void ConfigResult::setExternalIds(std::vector<std::string> const &value) {
  m_ExternalIds = value;
  m_ExternalIdsIsSet = true;
}
bool ConfigResult::externalIdsIsSet() const { return m_ExternalIdsIsSet; }
void ConfigResult::unsetExternalIds() { m_ExternalIdsIsSet = false; }
std::vector<std::string> &ConfigResult::getMsisdns() { return m_Msisdns; }
void ConfigResult::setMsisdns(std::vector<std::string> const &value) {
  m_Msisdns = value;
  m_MsisdnsIsSet = true;
}
bool ConfigResult::msisdnsIsSet() const { return m_MsisdnsIsSet; }
void ConfigResult::unsetMsisdns() { m_MsisdnsIsSet = false; }
ResultReason ConfigResult::getResultReason() const { return m_ResultReason; }
void ConfigResult::setResultReason(ResultReason const &value) {
  m_ResultReason = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
