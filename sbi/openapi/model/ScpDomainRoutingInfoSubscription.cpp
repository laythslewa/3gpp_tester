/**
 * NRF NFDiscovery Service
 * NRF NFDiscovery Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ScpDomainRoutingInfoSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ScpDomainRoutingInfoSubscription::ScpDomainRoutingInfoSubscription() {
  m_CallbackUri = "";
  m_ValidityTime = "";
  m_ValidityTimeIsSet = false;
  m_ReqInstanceId = "";
  m_ReqInstanceIdIsSet = false;
  m_LocalInd = false;
  m_LocalIndIsSet = false;
}

ScpDomainRoutingInfoSubscription::~ScpDomainRoutingInfoSubscription() {}

void ScpDomainRoutingInfoSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ScpDomainRoutingInfoSubscription &o) {
  j = nlohmann::json();
  j["callbackUri"] = o.m_CallbackUri;
  if (o.validityTimeIsSet())
    j["validityTime"] = o.m_ValidityTime;
  if (o.reqInstanceIdIsSet())
    j["reqInstanceId"] = o.m_ReqInstanceId;
  if (o.localIndIsSet())
    j["localInd"] = o.m_LocalInd;
}

void from_json(const nlohmann::json &j, ScpDomainRoutingInfoSubscription &o) {
  j.at("callbackUri").get_to(o.m_CallbackUri);
  if (j.find("validityTime") != j.end()) {
    j.at("validityTime").get_to(o.m_ValidityTime);
    o.m_ValidityTimeIsSet = true;
  }
  if (j.find("reqInstanceId") != j.end()) {
    j.at("reqInstanceId").get_to(o.m_ReqInstanceId);
    o.m_ReqInstanceIdIsSet = true;
  }
  if (j.find("localInd") != j.end()) {
    j.at("localInd").get_to(o.m_LocalInd);
    o.m_LocalIndIsSet = true;
  }
}

std::string ScpDomainRoutingInfoSubscription::getCallbackUri() const {
  return m_CallbackUri;
}
void ScpDomainRoutingInfoSubscription::setCallbackUri(
    std::string const &value) {
  m_CallbackUri = value;
}
std::string ScpDomainRoutingInfoSubscription::getValidityTime() const {
  return m_ValidityTime;
}
void ScpDomainRoutingInfoSubscription::setValidityTime(
    std::string const &value) {
  m_ValidityTime = value;
  m_ValidityTimeIsSet = true;
}
bool ScpDomainRoutingInfoSubscription::validityTimeIsSet() const {
  return m_ValidityTimeIsSet;
}
void ScpDomainRoutingInfoSubscription::unsetValidityTime() {
  m_ValidityTimeIsSet = false;
}
std::string ScpDomainRoutingInfoSubscription::getReqInstanceId() const {
  return m_ReqInstanceId;
}
void ScpDomainRoutingInfoSubscription::setReqInstanceId(
    std::string const &value) {
  m_ReqInstanceId = value;
  m_ReqInstanceIdIsSet = true;
}
bool ScpDomainRoutingInfoSubscription::reqInstanceIdIsSet() const {
  return m_ReqInstanceIdIsSet;
}
void ScpDomainRoutingInfoSubscription::unsetReqInstanceId() {
  m_ReqInstanceIdIsSet = false;
}
bool ScpDomainRoutingInfoSubscription::isLocalInd() const { return m_LocalInd; }
void ScpDomainRoutingInfoSubscription::setLocalInd(bool const value) {
  m_LocalInd = value;
  m_LocalIndIsSet = true;
}
bool ScpDomainRoutingInfoSubscription::localIndIsSet() const {
  return m_LocalIndIsSet;
}
void ScpDomainRoutingInfoSubscription::unsetLocalInd() {
  m_LocalIndIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
