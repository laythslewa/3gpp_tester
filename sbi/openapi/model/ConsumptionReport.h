/**
 * M5_ConsumptionReporting
 * 5GMS AF M5 Consumption Reporting API Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ConsumptionReport.h
 *
 *
 */

#ifndef ConsumptionReport_H_
#define ConsumptionReport_H_

#include "ConsumptionReportingUnit.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ConsumptionReport {
public:
  ConsumptionReport();
  virtual ~ConsumptionReport();

  void validate();

  /////////////////////////////////////////////
  /// ConsumptionReport members

  /// <summary>
  ///
  /// </summary>
  std::string getMediaPlayerEntry() const;
  void setMediaPlayerEntry(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getReportingClientId() const;
  void setReportingClientId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<ConsumptionReportingUnit> &getConsumptionReportingUnits();
  void setConsumptionReportingUnits(
      std::vector<ConsumptionReportingUnit> const &value);

  friend void to_json(nlohmann::json &j, const ConsumptionReport &o);
  friend void from_json(const nlohmann::json &j, ConsumptionReport &o);

protected:
  std::string m_MediaPlayerEntry;

  std::string m_ReportingClientId;

  std::vector<ConsumptionReportingUnit> m_ConsumptionReportingUnits;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ConsumptionReport_H_ */
