/**
 * 3gpp-iptvconfiguration
 * API for IPTV configuration. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IptvConfigDataPatch.h
 *
 * Represents the parameters to request the modification of an IPTV
 * Configuration resource.
 */

#ifndef IptvConfigDataPatch_H_
#define IptvConfigDataPatch_H_

#include "MulticastAccessControl.h"
#include <map>
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the parameters to request the modification of an IPTV
/// Configuration resource.
/// </summary>
class IptvConfigDataPatch {
public:
  IptvConfigDataPatch();
  virtual ~IptvConfigDataPatch();

  void validate();

  /////////////////////////////////////////////
  /// IptvConfigDataPatch members

  /// <summary>
  /// Identifies a list of multicast address access control information. Any
  /// string value can be used as a key of the map.
  /// </summary>
  std::map<std::string, MulticastAccessControl> &getMultiAccCtrls();
  void
  setMultiAccCtrls(std::map<std::string, MulticastAccessControl> const &value);
  bool multiAccCtrlsIsSet() const;
  void unsetMultiAccCtrls();

  friend void to_json(nlohmann::json &j, const IptvConfigDataPatch &o);
  friend void from_json(const nlohmann::json &j, IptvConfigDataPatch &o);

protected:
  std::map<std::string, MulticastAccessControl> m_MultiAccCtrls;
  bool m_MultiAccCtrlsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IptvConfigDataPatch_H_ */
