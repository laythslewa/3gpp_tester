/**
 * N32 Handshake API
 * N32-c Handshake Service.  Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "FailedModificationInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

FailedModificationInfo::FailedModificationInfo() { m_IpxId = ""; }

FailedModificationInfo::~FailedModificationInfo() {}

void FailedModificationInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const FailedModificationInfo &o) {
  j = nlohmann::json();
  j["ipxId"] = o.m_IpxId;
  j["n32fErrorType"] = o.m_N32fErrorType;
}

void from_json(const nlohmann::json &j, FailedModificationInfo &o) {
  j.at("ipxId").get_to(o.m_IpxId);
  j.at("n32fErrorType").get_to(o.m_N32fErrorType);
}

std::string FailedModificationInfo::getIpxId() const { return m_IpxId; }
void FailedModificationInfo::setIpxId(std::string const &value) {
  m_IpxId = value;
}
N32fErrorType FailedModificationInfo::getN32fErrorType() const {
  return m_N32fErrorType;
}
void FailedModificationInfo::setN32fErrorType(N32fErrorType const &value) {
  m_N32fErrorType = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
