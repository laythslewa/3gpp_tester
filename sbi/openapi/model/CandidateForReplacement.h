/**
 * Npcf_AMPolicyControl
 * Access and Mobility Policy Control Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * CandidateForReplacement.h
 *
 * Represents a list of candidate DNNs for replacement for an S-NSSAI.
 */

#ifndef CandidateForReplacement_H_
#define CandidateForReplacement_H_

#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a list of candidate DNNs for replacement for an S-NSSAI.
/// </summary>
class CandidateForReplacement {
public:
  CandidateForReplacement();
  virtual ~CandidateForReplacement();

  void validate();

  /////////////////////////////////////////////
  /// CandidateForReplacement members

  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getDnns();
  void setDnns(std::vector<std::string> const &value);
  bool dnnsIsSet() const;
  void unsetDnns();

  friend void to_json(nlohmann::json &j, const CandidateForReplacement &o);
  friend void from_json(const nlohmann::json &j, CandidateForReplacement &o);

protected:
  Snssai m_Snssai;

  std::vector<std::string> m_Dnns;
  bool m_DnnsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* CandidateForReplacement_H_ */
