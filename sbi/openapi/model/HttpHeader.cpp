/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "HttpHeader.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

HttpHeader::HttpHeader() { m_Header = ""; }

HttpHeader::~HttpHeader() {}

void HttpHeader::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const HttpHeader &o) {
  j = nlohmann::json();
  j["header"] = o.m_Header;
  j["value"] = o.m_Value;
}

void from_json(const nlohmann::json &j, HttpHeader &o) {
  j.at("header").get_to(o.m_Header);
  j.at("value").get_to(o.m_Value);
}

std::string HttpHeader::getHeader() const { return m_Header; }
void HttpHeader::setHeader(std::string const &value) { m_Header = value; }
EncodedHttpHeaderValue HttpHeader::getValue() const { return m_Value; }
void HttpHeader::setValue(EncodedHttpHeaderValue const &value) {
  m_Value = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
