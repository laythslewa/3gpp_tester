/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UePerLocationReport.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UePerLocationReport::UePerLocationReport() {
  m_UeCount = 0;
  m_ExternalIdsIsSet = false;
  m_MsisdnsIsSet = false;
}

UePerLocationReport::~UePerLocationReport() {}

void UePerLocationReport::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UePerLocationReport &o) {
  j = nlohmann::json();
  j["ueCount"] = o.m_UeCount;
  if (o.externalIdsIsSet() || !o.m_ExternalIds.empty())
    j["externalIds"] = o.m_ExternalIds;
  if (o.msisdnsIsSet() || !o.m_Msisdns.empty())
    j["msisdns"] = o.m_Msisdns;
}

void from_json(const nlohmann::json &j, UePerLocationReport &o) {
  j.at("ueCount").get_to(o.m_UeCount);
  if (j.find("externalIds") != j.end()) {
    j.at("externalIds").get_to(o.m_ExternalIds);
    o.m_ExternalIdsIsSet = true;
  }
  if (j.find("msisdns") != j.end()) {
    j.at("msisdns").get_to(o.m_Msisdns);
    o.m_MsisdnsIsSet = true;
  }
}

int32_t UePerLocationReport::getUeCount() const { return m_UeCount; }
void UePerLocationReport::setUeCount(int32_t const value) { m_UeCount = value; }
std::vector<std::string> &UePerLocationReport::getExternalIds() {
  return m_ExternalIds;
}
void UePerLocationReport::setExternalIds(
    std::vector<std::string> const &value) {
  m_ExternalIds = value;
  m_ExternalIdsIsSet = true;
}
bool UePerLocationReport::externalIdsIsSet() const {
  return m_ExternalIdsIsSet;
}
void UePerLocationReport::unsetExternalIds() { m_ExternalIdsIsSet = false; }
std::vector<std::string> &UePerLocationReport::getMsisdns() {
  return m_Msisdns;
}
void UePerLocationReport::setMsisdns(std::vector<std::string> const &value) {
  m_Msisdns = value;
  m_MsisdnsIsSet = true;
}
bool UePerLocationReport::msisdnsIsSet() const { return m_MsisdnsIsSet; }
void UePerLocationReport::unsetMsisdns() { m_MsisdnsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
