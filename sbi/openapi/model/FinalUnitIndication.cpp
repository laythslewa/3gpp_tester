/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "FinalUnitIndication.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

FinalUnitIndication::FinalUnitIndication() {
  m_RestrictionFilterRule = "";
  m_RestrictionFilterRuleIsSet = false;
  m_FilterId = "";
  m_FilterIdIsSet = false;
  m_RedirectServerIsSet = false;
}

FinalUnitIndication::~FinalUnitIndication() {}

void FinalUnitIndication::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const FinalUnitIndication &o) {
  j = nlohmann::json();
  j["finalUnitAction"] = o.m_FinalUnitAction;
  if (o.restrictionFilterRuleIsSet())
    j["restrictionFilterRule"] = o.m_RestrictionFilterRule;
  if (o.filterIdIsSet())
    j["filterId"] = o.m_FilterId;
  if (o.redirectServerIsSet())
    j["redirectServer"] = o.m_RedirectServer;
}

void from_json(const nlohmann::json &j, FinalUnitIndication &o) {
  j.at("finalUnitAction").get_to(o.m_FinalUnitAction);
  if (j.find("restrictionFilterRule") != j.end()) {
    j.at("restrictionFilterRule").get_to(o.m_RestrictionFilterRule);
    o.m_RestrictionFilterRuleIsSet = true;
  }
  if (j.find("filterId") != j.end()) {
    j.at("filterId").get_to(o.m_FilterId);
    o.m_FilterIdIsSet = true;
  }
  if (j.find("redirectServer") != j.end()) {
    j.at("redirectServer").get_to(o.m_RedirectServer);
    o.m_RedirectServerIsSet = true;
  }
}

FinalUnitAction FinalUnitIndication::getFinalUnitAction() const {
  return m_FinalUnitAction;
}
void FinalUnitIndication::setFinalUnitAction(FinalUnitAction const &value) {
  m_FinalUnitAction = value;
}
std::string FinalUnitIndication::getRestrictionFilterRule() const {
  return m_RestrictionFilterRule;
}
void FinalUnitIndication::setRestrictionFilterRule(std::string const &value) {
  m_RestrictionFilterRule = value;
  m_RestrictionFilterRuleIsSet = true;
}
bool FinalUnitIndication::restrictionFilterRuleIsSet() const {
  return m_RestrictionFilterRuleIsSet;
}
void FinalUnitIndication::unsetRestrictionFilterRule() {
  m_RestrictionFilterRuleIsSet = false;
}
std::string FinalUnitIndication::getFilterId() const { return m_FilterId; }
void FinalUnitIndication::setFilterId(std::string const &value) {
  m_FilterId = value;
  m_FilterIdIsSet = true;
}
bool FinalUnitIndication::filterIdIsSet() const { return m_FilterIdIsSet; }
void FinalUnitIndication::unsetFilterId() { m_FilterIdIsSet = false; }
RedirectServer FinalUnitIndication::getRedirectServer() const {
  return m_RedirectServer;
}
void FinalUnitIndication::setRedirectServer(RedirectServer const &value) {
  m_RedirectServer = value;
  m_RedirectServerIsSet = true;
}
bool FinalUnitIndication::redirectServerIsSet() const {
  return m_RedirectServerIsSet;
}
void FinalUnitIndication::unsetRedirectServer() {
  m_RedirectServerIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
