/**
 * Nudsf_DataRepository
 * Nudsf Data Repository Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SubscriptionFilter.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SubscriptionFilter::SubscriptionFilter() {
  m_MonitoredResourceUrisIsSet = false;
  m_OperationsIsSet = false;
}

SubscriptionFilter::~SubscriptionFilter() {}

void SubscriptionFilter::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SubscriptionFilter &o) {
  j = nlohmann::json();
  if (o.monitoredResourceUrisIsSet() || !o.m_MonitoredResourceUris.empty())
    j["monitoredResourceUris"] = o.m_MonitoredResourceUris;
  if (o.operationsIsSet() || !o.m_Operations.empty())
    j["operations"] = o.m_Operations;
}

void from_json(const nlohmann::json &j, SubscriptionFilter &o) {
  if (j.find("monitoredResourceUris") != j.end()) {
    j.at("monitoredResourceUris").get_to(o.m_MonitoredResourceUris);
    o.m_MonitoredResourceUrisIsSet = true;
  }
  if (j.find("operations") != j.end()) {
    j.at("operations").get_to(o.m_Operations);
    o.m_OperationsIsSet = true;
  }
}

std::vector<std::string> &SubscriptionFilter::getMonitoredResourceUris() {
  return m_MonitoredResourceUris;
}
void SubscriptionFilter::setMonitoredResourceUris(
    std::vector<std::string> const &value) {
  m_MonitoredResourceUris = value;
  m_MonitoredResourceUrisIsSet = true;
}
bool SubscriptionFilter::monitoredResourceUrisIsSet() const {
  return m_MonitoredResourceUrisIsSet;
}
void SubscriptionFilter::unsetMonitoredResourceUris() {
  m_MonitoredResourceUrisIsSet = false;
}
std::vector<RecordOperation> &SubscriptionFilter::getOperations() {
  return m_Operations;
}
void SubscriptionFilter::setOperations(
    std::vector<RecordOperation> const &value) {
  m_Operations = value;
  m_OperationsIsSet = true;
}
bool SubscriptionFilter::operationsIsSet() const { return m_OperationsIsSet; }
void SubscriptionFilter::unsetOperations() { m_OperationsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
