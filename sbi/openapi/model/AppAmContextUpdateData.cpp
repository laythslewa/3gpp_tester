/**
 * Npcf_AMPolicyAuthorization Service API
 * PCF Access and Mobility Policy Authorization Service. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppAmContextUpdateData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AppAmContextUpdateData::AppAmContextUpdateData() {
  m_TermNotifUri = "";
  m_TermNotifUriIsSet = false;
  m_EvSubscIsSet = false;
}

AppAmContextUpdateData::~AppAmContextUpdateData() {}

void AppAmContextUpdateData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AppAmContextUpdateData &o) {
  j = nlohmann::json();
  if (o.termNotifUriIsSet())
    j["termNotifUri"] = o.m_TermNotifUri;
  if (o.evSubscIsSet())
    j["evSubsc"] = o.m_EvSubsc;
}

void from_json(const nlohmann::json &j, AppAmContextUpdateData &o) {
  if (j.find("termNotifUri") != j.end()) {
    j.at("termNotifUri").get_to(o.m_TermNotifUri);
    o.m_TermNotifUriIsSet = true;
  }
  if (j.find("evSubsc") != j.end()) {
    j.at("evSubsc").get_to(o.m_EvSubsc);
    o.m_EvSubscIsSet = true;
  }
}

std::string AppAmContextUpdateData::getTermNotifUri() const {
  return m_TermNotifUri;
}
void AppAmContextUpdateData::setTermNotifUri(std::string const &value) {
  m_TermNotifUri = value;
  m_TermNotifUriIsSet = true;
}
bool AppAmContextUpdateData::termNotifUriIsSet() const {
  return m_TermNotifUriIsSet;
}
void AppAmContextUpdateData::unsetTermNotifUri() {
  m_TermNotifUriIsSet = false;
}
AmEventsSubscData AppAmContextUpdateData::getEvSubsc() const {
  return m_EvSubsc;
}
void AppAmContextUpdateData::setEvSubsc(AmEventsSubscData const &value) {
  m_EvSubsc = value;
  m_EvSubscIsSet = true;
}
bool AppAmContextUpdateData::evSubscIsSet() const { return m_EvSubscIsSet; }
void AppAmContextUpdateData::unsetEvSubsc() { m_EvSubscIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
