/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * WirelineArea.h
 *
 * One and only one of the \&quot;globLineIds\&quot;, \&quot;hfcNIds\&quot;,
 * \&quot;areaCodeB\&quot; and \&quot;areaCodeC\&quot; attributes shall be
 * included in a WirelineArea data structure
 */

#ifndef WirelineArea_H_
#define WirelineArea_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// One and only one of the \&quot;globLineIds\&quot;, \&quot;hfcNIds\&quot;,
/// \&quot;areaCodeB\&quot; and \&quot;areaCodeC\&quot; attributes shall be
/// included in a WirelineArea data structure
/// </summary>
class WirelineArea {
public:
  WirelineArea();
  virtual ~WirelineArea();

  void validate();

  /////////////////////////////////////////////
  /// WirelineArea members

  /// <summary>
  /// List of Global Line Identifiers, for a 5G-BRG accessing the 5GC via
  /// wireline access network
  /// </summary>
  std::vector<std::string> &getGlobalLineIds();
  void setGlobalLineIds(std::vector<std::string> const &value);
  bool globalLineIdsIsSet() const;
  void unsetGlobalLineIds();
  /// <summary>
  /// List of HFC Node Ids, for a 5G-CRG/FN-CRG is accessing the 5GC via
  /// wireline access network.
  /// </summary>
  std::vector<std::string> &getHfcNIds();
  void setHfcNIds(std::vector<std::string> const &value);
  bool hfcNIdsIsSet() const;
  void unsetHfcNIds();
  /// <summary>
  /// Values are operator specific.
  /// </summary>
  std::string getAreaCodeB() const;
  void setAreaCodeB(std::string const &value);
  bool areaCodeBIsSet() const;
  void unsetAreaCodeB();
  /// <summary>
  /// Values are operator specific.
  /// </summary>
  std::string getAreaCodeC() const;
  void setAreaCodeC(std::string const &value);
  bool areaCodeCIsSet() const;
  void unsetAreaCodeC();

  friend void to_json(nlohmann::json &j, const WirelineArea &o);
  friend void from_json(const nlohmann::json &j, WirelineArea &o);

protected:
  std::vector<std::string> m_GlobalLineIds;
  bool m_GlobalLineIdsIsSet;
  std::vector<std::string> m_HfcNIds;
  bool m_HfcNIdsIsSet;
  std::string m_AreaCodeB;
  bool m_AreaCodeBIsSet;
  std::string m_AreaCodeC;
  bool m_AreaCodeCIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* WirelineArea_H_ */
