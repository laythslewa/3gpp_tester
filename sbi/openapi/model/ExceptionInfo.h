/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ExceptionInfo.h
 *
 * Represents the exceptions information provided by the AF.
 */

#ifndef ExceptionInfo_H_
#define ExceptionInfo_H_

#include "EthFlowDescription.h"
#include "Exception.h"
#include "FlowInfo.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the exceptions information provided by the AF.
/// </summary>
class ExceptionInfo {
public:
  ExceptionInfo();
  virtual ~ExceptionInfo();

  void validate();

  /////////////////////////////////////////////
  /// ExceptionInfo members

  /// <summary>
  ///
  /// </summary>
  FlowInfo getIpTrafficFilter() const;
  void setIpTrafficFilter(FlowInfo const &value);
  bool ipTrafficFilterIsSet() const;
  void unsetIpTrafficFilter();
  /// <summary>
  ///
  /// </summary>
  EthFlowDescription getEthTrafficFilter() const;
  void setEthTrafficFilter(EthFlowDescription const &value);
  bool ethTrafficFilterIsSet() const;
  void unsetEthTrafficFilter();
  /// <summary>
  ///
  /// </summary>
  std::vector<Exception> &getExceps();
  void setExceps(std::vector<Exception> const &value);
  bool excepsIsSet() const;
  void unsetExceps();

  friend void to_json(nlohmann::json &j, const ExceptionInfo &o);
  friend void from_json(const nlohmann::json &j, ExceptionInfo &o);

protected:
  FlowInfo m_IpTrafficFilter;
  bool m_IpTrafficFilterIsSet;
  EthFlowDescription m_EthTrafficFilter;
  bool m_EthTrafficFilterIsSet;
  std::vector<Exception> m_Exceps;
  bool m_ExcepsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ExceptionInfo_H_ */
