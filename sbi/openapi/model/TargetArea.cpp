/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TargetArea.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TargetArea::TargetArea() {
  m_TaListIsSet = false;
  m_TaiRangeListIsSet = false;
  m_AnyTa = false;
  m_AnyTaIsSet = false;
}

TargetArea::~TargetArea() {}

void TargetArea::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TargetArea &o) {
  j = nlohmann::json();
  if (o.taListIsSet() || !o.m_TaList.empty())
    j["taList"] = o.m_TaList;
  if (o.taiRangeListIsSet() || !o.m_TaiRangeList.empty())
    j["taiRangeList"] = o.m_TaiRangeList;
  if (o.anyTaIsSet())
    j["anyTa"] = o.m_AnyTa;
}

void from_json(const nlohmann::json &j, TargetArea &o) {
  if (j.find("taList") != j.end()) {
    j.at("taList").get_to(o.m_TaList);
    o.m_TaListIsSet = true;
  }
  if (j.find("taiRangeList") != j.end()) {
    j.at("taiRangeList").get_to(o.m_TaiRangeList);
    o.m_TaiRangeListIsSet = true;
  }
  if (j.find("anyTa") != j.end()) {
    j.at("anyTa").get_to(o.m_AnyTa);
    o.m_AnyTaIsSet = true;
  }
}

std::vector<Tai> &TargetArea::getTaList() { return m_TaList; }
void TargetArea::setTaList(std::vector<Tai> const &value) {
  m_TaList = value;
  m_TaListIsSet = true;
}
bool TargetArea::taListIsSet() const { return m_TaListIsSet; }
void TargetArea::unsetTaList() { m_TaListIsSet = false; }
std::vector<TaiRange> &TargetArea::getTaiRangeList() { return m_TaiRangeList; }
void TargetArea::setTaiRangeList(std::vector<TaiRange> const &value) {
  m_TaiRangeList = value;
  m_TaiRangeListIsSet = true;
}
bool TargetArea::taiRangeListIsSet() const { return m_TaiRangeListIsSet; }
void TargetArea::unsetTaiRangeList() { m_TaiRangeListIsSet = false; }
bool TargetArea::isAnyTa() const { return m_AnyTa; }
void TargetArea::setAnyTa(bool const value) {
  m_AnyTa = value;
  m_AnyTaIsSet = true;
}
bool TargetArea::anyTaIsSet() const { return m_AnyTaIsSet; }
void TargetArea::unsetAnyTa() { m_AnyTaIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
