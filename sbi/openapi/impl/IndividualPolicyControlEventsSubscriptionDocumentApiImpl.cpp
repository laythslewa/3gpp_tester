/**
 * Npcf_EventExposure
 * PCF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IndividualPolicyControlEventsSubscriptionDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

IndividualPolicyControlEventsSubscriptionDocumentApiImpl::
    IndividualPolicyControlEventsSubscriptionDocumentApiImpl(
        std::shared_ptr<Pistache::Rest::Router> rtr)
    : IndividualPolicyControlEventsSubscriptionDocumentApi(rtr) {}

void IndividualPolicyControlEventsSubscriptionDocumentApiImpl::
    delete_pc_event_exposure_subsc(const std::string &subscriptionId,
                                   Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualPolicyControlEventsSubscriptionDocumentApiImpl::
    get_pc_event_exposure_subsc(const std::string &subscriptionId,
                                Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualPolicyControlEventsSubscriptionDocumentApiImpl::
    put_pc_event_exposure_subsc(
        const std::string &subscriptionId,
        const PcEventExposureSubsc &pcEventExposureSubsc,
        Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
