/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PublicIdentifier.h
 *
 *
 */

#ifndef PublicIdentifier_H_
#define PublicIdentifier_H_

#include "PriorityLevels.h"
#include "PublicIdentity.h"
#include "ServiceLevelTraceInformation.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class PublicIdentifier {
public:
  PublicIdentifier();
  virtual ~PublicIdentifier();

  void validate();

  /////////////////////////////////////////////
  /// PublicIdentifier members

  /// <summary>
  ///
  /// </summary>
  PublicIdentity getPublicIdentity() const;
  void setPublicIdentity(PublicIdentity const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getDisplayName() const;
  void setDisplayName(std::string const &value);
  bool displayNameIsSet() const;
  void unsetDisplayName();
  /// <summary>
  ///
  /// </summary>
  PriorityLevels getImsServicePriority() const;
  void setImsServicePriority(PriorityLevels const &value);
  bool imsServicePriorityIsSet() const;
  void unsetImsServicePriority();
  /// <summary>
  ///
  /// </summary>
  ServiceLevelTraceInformation getServiceLevelTraceInfo() const;
  void setServiceLevelTraceInfo(ServiceLevelTraceInformation const &value);
  bool serviceLevelTraceInfoIsSet() const;
  void unsetServiceLevelTraceInfo();
  /// <summary>
  ///
  /// </summary>
  bool isBarringIndicator() const;
  void setBarringIndicator(bool const value);
  bool barringIndicatorIsSet() const;
  void unsetBarringIndicator();
  /// <summary>
  ///
  /// </summary>
  std::string getWildcardedImpu() const;
  void setWildcardedImpu(std::string const &value);
  bool wildcardedImpuIsSet() const;
  void unsetWildcardedImpu();

  friend void to_json(nlohmann::json &j, const PublicIdentifier &o);
  friend void from_json(const nlohmann::json &j, PublicIdentifier &o);

protected:
  PublicIdentity m_PublicIdentity;

  std::string m_DisplayName;
  bool m_DisplayNameIsSet;
  PriorityLevels m_ImsServicePriority;
  bool m_ImsServicePriorityIsSet;
  ServiceLevelTraceInformation m_ServiceLevelTraceInfo;
  bool m_ServiceLevelTraceInfoIsSet;
  bool m_BarringIndicator;
  bool m_BarringIndicatorIsSet;
  std::string m_WildcardedImpu;
  bool m_WildcardedImpuIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PublicIdentifier_H_ */
