/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SliceLoadLevelInformation.h
 *
 * Contains load level information applicable for one or several slices.
 */

#ifndef SliceLoadLevelInformation_H_
#define SliceLoadLevelInformation_H_

#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains load level information applicable for one or several slices.
/// </summary>
class SliceLoadLevelInformation {
public:
  SliceLoadLevelInformation();
  virtual ~SliceLoadLevelInformation();

  void validate();

  /////////////////////////////////////////////
  /// SliceLoadLevelInformation members

  /// <summary>
  /// Load level information of the network slice and the optionally associated
  /// network slice instance.
  /// </summary>
  int32_t getLoadLevelInformation() const;
  void setLoadLevelInformation(int32_t const value);
  /// <summary>
  /// Identification(s) of network slice to which the subscription applies.
  /// </summary>
  std::vector<Snssai> &getSnssais();
  void setSnssais(std::vector<Snssai> const &value);

  friend void to_json(nlohmann::json &j, const SliceLoadLevelInformation &o);
  friend void from_json(const nlohmann::json &j, SliceLoadLevelInformation &o);

protected:
  int32_t m_LoadLevelInformation;

  std::vector<Snssai> m_Snssais;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SliceLoadLevelInformation_H_ */
