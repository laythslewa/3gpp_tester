/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ProseContext.h
 *
 *
 */

#ifndef ProseContext_H_
#define ProseContext_H_

#include "Pc5QoSPara.h"
#include "UeAuth.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ProseContext {
public:
  ProseContext();
  virtual ~ProseContext();

  void validate();

  /////////////////////////////////////////////
  /// ProseContext members

  /// <summary>
  ///
  /// </summary>
  UeAuth getDirectDiscovery() const;
  void setDirectDiscovery(UeAuth const &value);
  bool directDiscoveryIsSet() const;
  void unsetDirectDiscovery();
  /// <summary>
  ///
  /// </summary>
  UeAuth getDirectComm() const;
  void setDirectComm(UeAuth const &value);
  bool directCommIsSet() const;
  void unsetDirectComm();
  /// <summary>
  ///
  /// </summary>
  UeAuth getL2Relay() const;
  void setL2Relay(UeAuth const &value);
  bool l2RelayIsSet() const;
  void unsetL2Relay();
  /// <summary>
  ///
  /// </summary>
  UeAuth getL3Relay() const;
  void setL3Relay(UeAuth const &value);
  bool l3RelayIsSet() const;
  void unsetL3Relay();
  /// <summary>
  ///
  /// </summary>
  UeAuth getL2Remote() const;
  void setL2Remote(UeAuth const &value);
  bool l2RemoteIsSet() const;
  void unsetL2Remote();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getNrUePc5Ambr() const;
  void setNrUePc5Ambr(std::string const &value);
  bool nrUePc5AmbrIsSet() const;
  void unsetNrUePc5Ambr();
  /// <summary>
  ///
  /// </summary>
  Pc5QoSPara getPc5QoSPara() const;
  void setPc5QoSPara(Pc5QoSPara const &value);
  bool pc5QoSParaIsSet() const;
  void unsetPc5QoSPara();

  friend void to_json(nlohmann::json &j, const ProseContext &o);
  friend void from_json(const nlohmann::json &j, ProseContext &o);

protected:
  UeAuth m_DirectDiscovery;
  bool m_DirectDiscoveryIsSet;
  UeAuth m_DirectComm;
  bool m_DirectCommIsSet;
  UeAuth m_L2Relay;
  bool m_L2RelayIsSet;
  UeAuth m_L3Relay;
  bool m_L3RelayIsSet;
  UeAuth m_L2Remote;
  bool m_L2RemoteIsSet;
  std::string m_NrUePc5Ambr;
  bool m_NrUePc5AmbrIsSet;
  Pc5QoSPara m_Pc5QoSPara;
  bool m_Pc5QoSParaIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ProseContext_H_ */
