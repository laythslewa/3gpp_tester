/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AlternativeQosProfile.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AlternativeQosProfile::AlternativeQosProfile() {
  m_Index = 0;
  m_GuaFbrDl = "";
  m_GuaFbrDlIsSet = false;
  m_GuaFbrUl = "";
  m_GuaFbrUlIsSet = false;
  m_PacketDelayBudget = 0;
  m_PacketDelayBudgetIsSet = false;
  m_PacketErrRate = "";
  m_PacketErrRateIsSet = false;
}

AlternativeQosProfile::~AlternativeQosProfile() {}

void AlternativeQosProfile::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AlternativeQosProfile &o) {
  j = nlohmann::json();
  j["index"] = o.m_Index;
  if (o.guaFbrDlIsSet())
    j["guaFbrDl"] = o.m_GuaFbrDl;
  if (o.guaFbrUlIsSet())
    j["guaFbrUl"] = o.m_GuaFbrUl;
  if (o.packetDelayBudgetIsSet())
    j["packetDelayBudget"] = o.m_PacketDelayBudget;
  if (o.packetErrRateIsSet())
    j["packetErrRate"] = o.m_PacketErrRate;
}

void from_json(const nlohmann::json &j, AlternativeQosProfile &o) {
  j.at("index").get_to(o.m_Index);
  if (j.find("guaFbrDl") != j.end()) {
    j.at("guaFbrDl").get_to(o.m_GuaFbrDl);
    o.m_GuaFbrDlIsSet = true;
  }
  if (j.find("guaFbrUl") != j.end()) {
    j.at("guaFbrUl").get_to(o.m_GuaFbrUl);
    o.m_GuaFbrUlIsSet = true;
  }
  if (j.find("packetDelayBudget") != j.end()) {
    j.at("packetDelayBudget").get_to(o.m_PacketDelayBudget);
    o.m_PacketDelayBudgetIsSet = true;
  }
  if (j.find("packetErrRate") != j.end()) {
    j.at("packetErrRate").get_to(o.m_PacketErrRate);
    o.m_PacketErrRateIsSet = true;
  }
}

int32_t AlternativeQosProfile::getIndex() const { return m_Index; }
void AlternativeQosProfile::setIndex(int32_t const value) { m_Index = value; }
std::string AlternativeQosProfile::getGuaFbrDl() const { return m_GuaFbrDl; }
void AlternativeQosProfile::setGuaFbrDl(std::string const &value) {
  m_GuaFbrDl = value;
  m_GuaFbrDlIsSet = true;
}
bool AlternativeQosProfile::guaFbrDlIsSet() const { return m_GuaFbrDlIsSet; }
void AlternativeQosProfile::unsetGuaFbrDl() { m_GuaFbrDlIsSet = false; }
std::string AlternativeQosProfile::getGuaFbrUl() const { return m_GuaFbrUl; }
void AlternativeQosProfile::setGuaFbrUl(std::string const &value) {
  m_GuaFbrUl = value;
  m_GuaFbrUlIsSet = true;
}
bool AlternativeQosProfile::guaFbrUlIsSet() const { return m_GuaFbrUlIsSet; }
void AlternativeQosProfile::unsetGuaFbrUl() { m_GuaFbrUlIsSet = false; }
int32_t AlternativeQosProfile::getPacketDelayBudget() const {
  return m_PacketDelayBudget;
}
void AlternativeQosProfile::setPacketDelayBudget(int32_t const value) {
  m_PacketDelayBudget = value;
  m_PacketDelayBudgetIsSet = true;
}
bool AlternativeQosProfile::packetDelayBudgetIsSet() const {
  return m_PacketDelayBudgetIsSet;
}
void AlternativeQosProfile::unsetPacketDelayBudget() {
  m_PacketDelayBudgetIsSet = false;
}
std::string AlternativeQosProfile::getPacketErrRate() const {
  return m_PacketErrRate;
}
void AlternativeQosProfile::setPacketErrRate(std::string const &value) {
  m_PacketErrRate = value;
  m_PacketErrRateIsSet = true;
}
bool AlternativeQosProfile::packetErrRateIsSet() const {
  return m_PacketErrRateIsSet;
}
void AlternativeQosProfile::unsetPacketErrRate() {
  m_PacketErrRateIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
