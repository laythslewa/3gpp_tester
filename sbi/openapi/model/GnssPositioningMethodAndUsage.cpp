/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "GnssPositioningMethodAndUsage.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

GnssPositioningMethodAndUsage::GnssPositioningMethodAndUsage() {}

GnssPositioningMethodAndUsage::~GnssPositioningMethodAndUsage() {}

void GnssPositioningMethodAndUsage::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const GnssPositioningMethodAndUsage &o) {
  j = nlohmann::json();
  j["mode"] = o.m_Mode;
  j["gnss"] = o.m_Gnss;
  j["usage"] = o.m_Usage;
}

void from_json(const nlohmann::json &j, GnssPositioningMethodAndUsage &o) {
  j.at("mode").get_to(o.m_Mode);
  j.at("gnss").get_to(o.m_Gnss);
  j.at("usage").get_to(o.m_Usage);
}

PositioningMode GnssPositioningMethodAndUsage::getMode() const {
  return m_Mode;
}
void GnssPositioningMethodAndUsage::setMode(PositioningMode const &value) {
  m_Mode = value;
}
GnssId GnssPositioningMethodAndUsage::getGnss() const { return m_Gnss; }
void GnssPositioningMethodAndUsage::setGnss(GnssId const &value) {
  m_Gnss = value;
}
Usage GnssPositioningMethodAndUsage::getUsage() const { return m_Usage; }
void GnssPositioningMethodAndUsage::setUsage(Usage const &value) {
  m_Usage = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
