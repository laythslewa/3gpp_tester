/**
 * Npcf_AMPolicyAuthorization Service API
 * PCF Access and Mobility Policy Authorization Service. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualApplicationAMContextDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_APPLICATION_AM_CONTEXT_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_APPLICATION_AM_CONTEXT_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualApplicationAMContextDocumentApi.h>

#include <pistache/optional.h>

#include "AppAmContextData.h"
#include "AppAmContextRespData.h"
#include "AppAmContextUpdateData.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualApplicationAMContextDocumentApiImpl
    : public org::openapitools::server::api::
          IndividualApplicationAMContextDocumentApi {
public:
  IndividualApplicationAMContextDocumentApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualApplicationAMContextDocumentApiImpl() {}

  void delete_app_am_context(const std::string &appAmContextId,
                             Pistache::Http::ResponseWriter &response);
  void get_app_am_context(const std::string &appAmContextId,
                          Pistache::Http::ResponseWriter &response);
  void mod_app_am_context(const std::string &appAmContextId,
                          const AppAmContextUpdateData &appAmContextUpdateData,
                          Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif