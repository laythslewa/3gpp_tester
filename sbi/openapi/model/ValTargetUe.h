/**
 * SS_UserProfileRetrieval
 * API for SEAL User Profile Retrieval. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ValTargetUe.h
 *
 * Represents information identifying a VAL user ID or a VAL UE ID.
 */

#ifndef ValTargetUe_H_
#define ValTargetUe_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents information identifying a VAL user ID or a VAL UE ID.
/// </summary>
class ValTargetUe {
public:
  ValTargetUe();
  virtual ~ValTargetUe();

  void validate();

  /////////////////////////////////////////////
  /// ValTargetUe members

  /// <summary>
  /// Unique identifier of a VAL user.
  /// </summary>
  std::string getValUserId() const;
  void setValUserId(std::string const &value);
  bool valUserIdIsSet() const;
  void unsetValUserId();
  /// <summary>
  /// Unique identifier of a VAL UE.
  /// </summary>
  std::string getValUeId() const;
  void setValUeId(std::string const &value);
  bool valUeIdIsSet() const;
  void unsetValUeId();

  friend void to_json(nlohmann::json &j, const ValTargetUe &o);
  friend void from_json(const nlohmann::json &j, ValTargetUe &o);

protected:
  std::string m_ValUserId;
  bool m_ValUserIdIsSet;
  std::string m_ValUeId;
  bool m_ValUeIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ValTargetUe_H_ */
