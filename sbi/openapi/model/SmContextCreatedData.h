/**
 * Nnef_SMContext
 * Nnef SMContext Service. © 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmContextCreatedData.h
 *
 * Representation of an Individual SM context successfully created.
 */

#ifndef SmContextCreatedData_H_
#define SmContextCreatedData_H_

#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Representation of an Individual SM context successfully created.
/// </summary>
class SmContextCreatedData {
public:
  SmContextCreatedData();
  virtual ~SmContextCreatedData();

  void validate();

  /////////////////////////////////////////////
  /// SmContextCreatedData members

  /// <summary>
  /// String identifying a Supi that shall contain either an IMSI, a network
  /// specific identifier, a Global Cable Identifier (GCI) or a Global Line
  /// Identifier (GLI) as specified in clause 2.2A of 3GPP TS 23.003. It shall
  /// be formatted as follows  - for an IMSI \&quot;imsi-&lt;imsi&gt;\&quot;,
  /// where &lt;imsi&gt; shall be formatted according to clause 2.2 of 3GPP
  /// TS 23.003 that describes an IMSI.  - for a network specific identifier
  /// \&quot;nai-&lt;nai&gt;, where &lt;nai&gt; shall be formatted according to
  /// clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI
  /// \&quot;gci-&lt;gci&gt;\&quot;, where &lt;gci&gt; shall be formatted
  /// according to clause 28.15.2 of 3GPP TS 23.003.  - for a GLI
  /// \&quot;gli-&lt;gli&gt;\&quot;, where &lt;gli&gt; shall be formatted
  /// according to clause 28.16.2 of 3GPP TS 23.003.To enable that the value is
  /// used as part of an URI, the string shall only contain characters allowed
  /// according to the \&quot;lower-with-hyphen\&quot; naming convention defined
  /// in 3GPP TS 29.501.
  /// </summary>
  std::string getSupi() const;
  void setSupi(std::string const &value);
  /// <summary>
  /// Unsigned integer identifying a PDU session, within the range 0 to 255, as
  /// specified in clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU
  /// Session ID is allocated by the Core Network for UEs not supporting N1
  /// mode, reserved range 64 to 95 is used. PDU Session ID within the reserved
  /// range is only visible in the Core Network.
  /// </summary>
  int32_t getPduSessionId() const;
  void setPduSessionId(int32_t const value);
  /// <summary>
  /// String representing a Data Network as defined in clause 9A of 3GPP
  /// TS 23.003; it shall contain either a DNN Network Identifier, or a full DNN
  /// with both the Network Identifier and Operator Identifier, as specified in
  /// 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in
  /// which the labels are separated by dots (e.g.
  /// \&quot;Label1.Label2.Label3\&quot;).
  /// </summary>
  std::string getDnn() const;
  void setDnn(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const &value);
  /// <summary>
  /// This IE shall contain the NEF ID of the target NEF.
  /// </summary>
  std::string getNefId() const;
  void setNefId(std::string const &value);
  /// <summary>
  /// When present, this IE shall indicate the NEF capability to support RDS.
  /// The value of this IE shall be set as following   - true  NEF supports RDS
  /// - false (default)  NEF does not support RDS
  /// </summary>
  bool isRdsSupport() const;
  void setRdsSupport(bool const value);
  bool rdsSupportIsSet() const;
  void unsetRdsSupport();
  /// <summary>
  /// When present, this IE shall indicate whether Extended Buffering applies or
  /// not. The value of this IE shall be set as following   - true  Extended
  /// Buffering applies   - false (default)  Extended Buffering does not apply
  /// </summary>
  bool isExtBufSupport() const;
  void setExtBufSupport(bool const value);
  bool extBufSupportIsSet() const;
  void unsetExtBufSupport();
  /// <summary>
  /// A string used to indicate the features supported by an API that is used as
  /// defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a
  /// bitmask indicating supported features in hexadecimal representation Each
  /// character in the string shall take a value of \&quot;0\&quot; to
  /// \&quot;9\&quot;, \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to
  /// \&quot;F\&quot; and shall represent the support of 4 features as described
  /// in table 5.2.2-3. The most significant character representing the
  /// highest-numbered features shall appear first in the string, and the
  /// character representing features 1 to 4 shall appear last in the string.
  /// The list of features and their numbering (starting with 1) are defined
  /// separately for each API. If the string contains a lower number of
  /// characters than there are defined features for an API, all features that
  /// would be represented by characters that are not present in the string are
  /// not supported
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const &value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();
  /// <summary>
  ///
  /// </summary>
  int32_t getMaxPacketSize() const;
  void setMaxPacketSize(int32_t const value);
  bool maxPacketSizeIsSet() const;
  void unsetMaxPacketSize();

  friend void to_json(nlohmann::json &j, const SmContextCreatedData &o);
  friend void from_json(const nlohmann::json &j, SmContextCreatedData &o);

protected:
  std::string m_Supi;

  int32_t m_PduSessionId;

  std::string m_Dnn;

  Snssai m_Snssai;

  std::string m_NefId;

  bool m_RdsSupport;
  bool m_RdsSupportIsSet;
  bool m_ExtBufSupport;
  bool m_ExtBufSupportIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
  int32_t m_MaxPacketSize;
  bool m_MaxPacketSizeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmContextCreatedData_H_ */
