/**
 * 3gpp-5glan-pp
 * API for 5G LAN Parameter Provision. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Individual5GLANParametersProvisionSubscriptionApi.h
 *
 *
 */

#ifndef Individual5GLANParametersProvisionSubscriptionApi_H_
#define Individual5GLANParametersProvisionSubscriptionApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "5GLanParametersProvision.h"
#include "5GLanParametersProvisionPatch.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class Individual5GLANParametersProvisionSubscriptionApi {
public:
  Individual5GLANParametersProvisionSubscriptionApi(
      std::shared_ptr<Pistache::Rest::Router>);
  virtual ~Individual5GLANParametersProvisionSubscriptionApi() {}
  void init();

  const std::string base = "/3gpp-5glan-pp/v1";

private:
  void setupRoutes();

  void af_id_subscriptions_subscription_id_delete_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void af_id_subscriptions_subscription_id_get_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void af_id_subscriptions_subscription_id_patch_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void af_id_subscriptions_subscription_id_put_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void individual5_glan_parameters_provision_subscription_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Deletes an already existing subscription
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  /// <param name="subscriptionId">Identifier of the subscription
  /// resource</param>
  virtual void af_id_subscriptions_subscription_id_delete(
      const std::string &afId, const std::string &subscriptionId,
      Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// read an active subscription for the AF and the subscription Id
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  /// <param name="subscriptionId">Identifier of the subscription
  /// resource</param>
  virtual void af_id_subscriptions_subscription_id_get(
      const std::string &afId, const std::string &subscriptionId,
      Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Partial updates an existing subscription resource
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  /// <param name="subscriptionId">Identifier of the subscription
  /// resource</param> <param name="r_5GLanParametersProvisionPatch"></param>
  virtual void af_id_subscriptions_subscription_id_patch(
      const std::string &afId, const std::string &subscriptionId,
      const 5GLanParametersProvisionPatch & r_5GLanParametersProvisionPatch,
      Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Updates/replaces an existing subscription resource
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="afId">Identifier of the AF</param>
  /// <param name="subscriptionId">Identifier of the subscription
  /// resource</param> <param name="r_5GLanParametersProvision">Parameters to
  /// update/replace the existing subscription</param>
  virtual void af_id_subscriptions_subscription_id_put(
      const std::string &afId, const std::string &subscriptionId,
      const 5GLanParametersProvision & r_5GLanParametersProvision,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Individual5GLANParametersProvisionSubscriptionApi_H_ */
