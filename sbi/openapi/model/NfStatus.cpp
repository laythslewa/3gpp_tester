/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NfStatus.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NfStatus::NfStatus() {
  m_StatusRegistered = 0;
  m_StatusRegisteredIsSet = false;
  m_StatusUnregistered = 0;
  m_StatusUnregisteredIsSet = false;
  m_StatusUndiscoverable = 0;
  m_StatusUndiscoverableIsSet = false;
}

NfStatus::~NfStatus() {}

void NfStatus::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NfStatus &o) {
  j = nlohmann::json();
  if (o.statusRegisteredIsSet())
    j["statusRegistered"] = o.m_StatusRegistered;
  if (o.statusUnregisteredIsSet())
    j["statusUnregistered"] = o.m_StatusUnregistered;
  if (o.statusUndiscoverableIsSet())
    j["statusUndiscoverable"] = o.m_StatusUndiscoverable;
}

void from_json(const nlohmann::json &j, NfStatus &o) {
  if (j.find("statusRegistered") != j.end()) {
    j.at("statusRegistered").get_to(o.m_StatusRegistered);
    o.m_StatusRegisteredIsSet = true;
  }
  if (j.find("statusUnregistered") != j.end()) {
    j.at("statusUnregistered").get_to(o.m_StatusUnregistered);
    o.m_StatusUnregisteredIsSet = true;
  }
  if (j.find("statusUndiscoverable") != j.end()) {
    j.at("statusUndiscoverable").get_to(o.m_StatusUndiscoverable);
    o.m_StatusUndiscoverableIsSet = true;
  }
}

int32_t NfStatus::getStatusRegistered() const { return m_StatusRegistered; }
void NfStatus::setStatusRegistered(int32_t const value) {
  m_StatusRegistered = value;
  m_StatusRegisteredIsSet = true;
}
bool NfStatus::statusRegisteredIsSet() const { return m_StatusRegisteredIsSet; }
void NfStatus::unsetStatusRegistered() { m_StatusRegisteredIsSet = false; }
int32_t NfStatus::getStatusUnregistered() const { return m_StatusUnregistered; }
void NfStatus::setStatusUnregistered(int32_t const value) {
  m_StatusUnregistered = value;
  m_StatusUnregisteredIsSet = true;
}
bool NfStatus::statusUnregisteredIsSet() const {
  return m_StatusUnregisteredIsSet;
}
void NfStatus::unsetStatusUnregistered() { m_StatusUnregisteredIsSet = false; }
int32_t NfStatus::getStatusUndiscoverable() const {
  return m_StatusUndiscoverable;
}
void NfStatus::setStatusUndiscoverable(int32_t const value) {
  m_StatusUndiscoverable = value;
  m_StatusUndiscoverableIsSet = true;
}
bool NfStatus::statusUndiscoverableIsSet() const {
  return m_StatusUndiscoverableIsSet;
}
void NfStatus::unsetStatusUndiscoverable() {
  m_StatusUndiscoverableIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
