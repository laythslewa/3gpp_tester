/**
 * Npcf_BDTPolicyControl Service API
 * PCF BDT Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IndividualBDTPolicyDocumentApi.h
 *
 *
 */

#ifndef IndividualBDTPolicyDocumentApi_H_
#define IndividualBDTPolicyDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "BdtPolicy.h"
#include "PatchBdtPolicy.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualBDTPolicyDocumentApi {
public:
  IndividualBDTPolicyDocumentApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IndividualBDTPolicyDocumentApi() {}
  void init();

  const std::string base = "/npcf-bdtpolicycontrol/v1";

private:
  void setupRoutes();

  void get_bdt_policy_handler(const Pistache::Rest::Request &request,
                              Pistache::Http::ResponseWriter response);
  void update_bdt_policy_handler(const Pistache::Rest::Request &request,
                                 Pistache::Http::ResponseWriter response);
  void individual_bdt_policy_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Read an Individual BDT policy
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="bdtPolicyId">String identifying the individual BDT policy
  /// resource in the PCF.</param>
  virtual void get_bdt_policy(const std::string &bdtPolicyId,
                              Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Update an Individual BDT policy
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="bdtPolicyId">String identifying the individual BDT policy
  /// resource in the PCF.</param> <param name="patchBdtPolicy">Contains
  /// modification instruction to be performed on the BdtPolicy data structure
  /// to select a transfer policy and in addition, may indicate whether the BDT
  /// warning notification is enabled or disabled.</param>
  virtual void update_bdt_policy(const std::string &bdtPolicyId,
                                 const PatchBdtPolicy &patchBdtPolicy,
                                 Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IndividualBDTPolicyDocumentApi_H_ */
