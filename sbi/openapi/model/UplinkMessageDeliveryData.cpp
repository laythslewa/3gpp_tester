/**
 * VAE_MessageDelivery
 * API for VAE Message Delivery Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UplinkMessageDeliveryData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UplinkMessageDeliveryData::UplinkMessageDeliveryData() {
  m_ResourceUri = "";
  m_UeId = "";
  m_GeoId = "";
  m_GeoIdIsSet = false;
}

UplinkMessageDeliveryData::~UplinkMessageDeliveryData() {}

void UplinkMessageDeliveryData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UplinkMessageDeliveryData &o) {
  j = nlohmann::json();
  j["resourceUri"] = o.m_ResourceUri;
  j["ueId"] = o.m_UeId;
  if (o.geoIdIsSet())
    j["geoId"] = o.m_GeoId;
  j["payload"] = o.m_Payload;
}

void from_json(const nlohmann::json &j, UplinkMessageDeliveryData &o) {
  j.at("resourceUri").get_to(o.m_ResourceUri);
  j.at("ueId").get_to(o.m_UeId);
  if (j.find("geoId") != j.end()) {
    j.at("geoId").get_to(o.m_GeoId);
    o.m_GeoIdIsSet = true;
  }
  j.at("payload").get_to(o.m_Payload);
}

std::string UplinkMessageDeliveryData::getResourceUri() const {
  return m_ResourceUri;
}
void UplinkMessageDeliveryData::setResourceUri(std::string const &value) {
  m_ResourceUri = value;
}
std::string UplinkMessageDeliveryData::getUeId() const { return m_UeId; }
void UplinkMessageDeliveryData::setUeId(std::string const &value) {
  m_UeId = value;
}
std::string UplinkMessageDeliveryData::getGeoId() const { return m_GeoId; }
void UplinkMessageDeliveryData::setGeoId(std::string const &value) {
  m_GeoId = value;
  m_GeoIdIsSet = true;
}
bool UplinkMessageDeliveryData::geoIdIsSet() const { return m_GeoIdIsSet; }
void UplinkMessageDeliveryData::unsetGeoId() { m_GeoIdIsSet = false; }
std::string UplinkMessageDeliveryData::getPayload() const { return m_Payload; }
void UplinkMessageDeliveryData::setPayload(std::string const &value) {
  m_Payload = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
