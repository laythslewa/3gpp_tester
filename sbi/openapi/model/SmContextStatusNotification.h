/**
 * Nnef_SMContext
 * Nnef SMContext Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmContextStatusNotification.h
 *
 * Representation of the SM Context status notification.
 */

#ifndef SmContextStatusNotification_H_
#define SmContextStatusNotification_H_

#include "ApnRateStatus.h"
#include "ReleaseCause.h"
#include "SmContextStatus.h"
#include "SmallDataRateStatus.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Representation of the SM Context status notification.
/// </summary>
class SmContextStatusNotification {
public:
  SmContextStatusNotification();
  virtual ~SmContextStatusNotification();

  void validate();

  /////////////////////////////////////////////
  /// SmContextStatusNotification members

  /// <summary>
  ///
  /// </summary>
  SmContextStatus getStatus() const;
  void setStatus(SmContextStatus const &value);
  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getSmContextId() const;
  void setSmContextId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  ReleaseCause getCause() const;
  void setCause(ReleaseCause const &value);
  bool causeIsSet() const;
  void unsetCause();
  /// <summary>
  ///
  /// </summary>
  SmallDataRateStatus getSmallDataRateStatus() const;
  void setSmallDataRateStatus(SmallDataRateStatus const &value);
  bool smallDataRateStatusIsSet() const;
  void unsetSmallDataRateStatus();
  /// <summary>
  ///
  /// </summary>
  ApnRateStatus getApnRateStatus() const;
  void setApnRateStatus(ApnRateStatus const &value);
  bool apnRateStatusIsSet() const;
  void unsetApnRateStatus();

  friend void to_json(nlohmann::json &j, const SmContextStatusNotification &o);
  friend void from_json(const nlohmann::json &j,
                        SmContextStatusNotification &o);

protected:
  SmContextStatus m_Status;

  std::string m_SmContextId;

  ReleaseCause m_Cause;
  bool m_CauseIsSet;
  SmallDataRateStatus m_SmallDataRateStatus;
  bool m_SmallDataRateStatusIsSet;
  ApnRateStatus m_ApnRateStatus;
  bool m_ApnRateStatusIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmContextStatusNotification_H_ */
