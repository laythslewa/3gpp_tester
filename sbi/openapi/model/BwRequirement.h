/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * BwRequirement.h
 *
 * Represents bandwidth requirements.
 */

#ifndef BwRequirement_H_
#define BwRequirement_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents bandwidth requirements.
/// </summary>
class BwRequirement {
public:
  BwRequirement();
  virtual ~BwRequirement();

  void validate();

  /////////////////////////////////////////////
  /// BwRequirement members

  /// <summary>
  /// String providing an application identifier.
  /// </summary>
  std::string getAppId() const;
  void setAppId(std::string const &value);
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMarBwDl() const;
  void setMarBwDl(std::string const &value);
  bool marBwDlIsSet() const;
  void unsetMarBwDl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMarBwUl() const;
  void setMarBwUl(std::string const &value);
  bool marBwUlIsSet() const;
  void unsetMarBwUl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMirBwDl() const;
  void setMirBwDl(std::string const &value);
  bool mirBwDlIsSet() const;
  void unsetMirBwDl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMirBwUl() const;
  void setMirBwUl(std::string const &value);
  bool mirBwUlIsSet() const;
  void unsetMirBwUl();

  friend void to_json(nlohmann::json &j, const BwRequirement &o);
  friend void from_json(const nlohmann::json &j, BwRequirement &o);

protected:
  std::string m_AppId;

  std::string m_MarBwDl;
  bool m_MarBwDlIsSet;
  std::string m_MarBwUl;
  bool m_MarBwUlIsSet;
  std::string m_MirBwDl;
  bool m_MirBwDlIsSet;
  std::string m_MirBwUl;
  bool m_MirBwUlIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* BwRequirement_H_ */
