/**
 * N32 Handshake API
 * N32-c Handshake Service.  Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SecParamExchRspData.h
 *
 * Response data structure for parameter exchange
 */

#ifndef SecParamExchRspData_H_
#define SecParamExchRspData_H_

#include "IpxProviderSecInfo.h"
#include "ProtectionPolicy.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Response data structure for parameter exchange
/// </summary>
class SecParamExchRspData {
public:
  SecParamExchRspData();
  virtual ~SecParamExchRspData();

  void validate();

  /////////////////////////////////////////////
  /// SecParamExchRspData members

  /// <summary>
  ///
  /// </summary>
  std::string getN32fContextId() const;
  void setN32fContextId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getSelectedJweCipherSuite() const;
  void setSelectedJweCipherSuite(std::string const &value);
  bool selectedJweCipherSuiteIsSet() const;
  void unsetSelectedJweCipherSuite();
  /// <summary>
  ///
  /// </summary>
  std::string getSelectedJwsCipherSuite() const;
  void setSelectedJwsCipherSuite(std::string const &value);
  bool selectedJwsCipherSuiteIsSet() const;
  void unsetSelectedJwsCipherSuite();
  /// <summary>
  ///
  /// </summary>
  ProtectionPolicy getSelProtectionPolicyInfo() const;
  void setSelProtectionPolicyInfo(ProtectionPolicy const &value);
  bool selProtectionPolicyInfoIsSet() const;
  void unsetSelProtectionPolicyInfo();
  /// <summary>
  ///
  /// </summary>
  std::vector<IpxProviderSecInfo> &getIpxProviderSecInfoList();
  void setIpxProviderSecInfoList(std::vector<IpxProviderSecInfo> const &value);
  bool ipxProviderSecInfoListIsSet() const;
  void unsetIpxProviderSecInfoList();
  /// <summary>
  /// Fully Qualified Domain Name
  /// </summary>
  std::string getSender() const;
  void setSender(std::string const &value);
  bool senderIsSet() const;
  void unsetSender();

  friend void to_json(nlohmann::json &j, const SecParamExchRspData &o);
  friend void from_json(const nlohmann::json &j, SecParamExchRspData &o);

protected:
  std::string m_N32fContextId;

  std::string m_SelectedJweCipherSuite;
  bool m_SelectedJweCipherSuiteIsSet;
  std::string m_SelectedJwsCipherSuite;
  bool m_SelectedJwsCipherSuiteIsSet;
  ProtectionPolicy m_SelProtectionPolicyInfo;
  bool m_SelProtectionPolicyInfoIsSet;
  std::vector<IpxProviderSecInfo> m_IpxProviderSecInfoList;
  bool m_IpxProviderSecInfoListIsSet;
  std::string m_Sender;
  bool m_SenderIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SecParamExchRspData_H_ */
