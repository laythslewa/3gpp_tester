/**
 * Namf_Location
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualUEContextDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_UE_CONTEXT_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_UE_CONTEXT_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualUEContextDocumentApi.h>

#include <pistache/optional.h>

#include "CancelPosInfo.h"
#include "ProblemDetails.h"
#include "ProvideLocInfo.h"
#include "ProvidePosInfo.h"
#include "RedirectResponse.h"
#include "RequestLocInfo.h"
#include "RequestPosInfo.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualUEContextDocumentApiImpl
    : public org::openapitools::server::api::IndividualUEContextDocumentApi {
public:
  IndividualUEContextDocumentApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualUEContextDocumentApiImpl() {}

  void cancel_location(const std::string &ueContextId,
                       const CancelPosInfo &cancelPosInfo,
                       Pistache::Http::ResponseWriter &response);
  void provide_location_info(const std::string &ueContextId,
                             const RequestLocInfo &requestLocInfo,
                             Pistache::Http::ResponseWriter &response);
  void provide_positioning_info(const std::string &ueContextId,
                                const RequestPosInfo &requestPosInfo,
                                Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif