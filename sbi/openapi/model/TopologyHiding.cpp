/**
 * CAPIF_Events_API
 * API for event subscription management. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TopologyHiding.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TopologyHiding::TopologyHiding() { m_ApiId = ""; }

TopologyHiding::~TopologyHiding() {}

void TopologyHiding::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TopologyHiding &o) {
  j = nlohmann::json();
  j["apiId"] = o.m_ApiId;
  j["routingRules"] = o.m_RoutingRules;
}

void from_json(const nlohmann::json &j, TopologyHiding &o) {
  j.at("apiId").get_to(o.m_ApiId);
  j.at("routingRules").get_to(o.m_RoutingRules);
}

std::string TopologyHiding::getApiId() const { return m_ApiId; }
void TopologyHiding::setApiId(std::string const &value) { m_ApiId = value; }
std::vector<RoutingRule> &TopologyHiding::getRoutingRules() {
  return m_RoutingRules;
}
void TopologyHiding::setRoutingRules(std::vector<RoutingRule> const &value) {
  m_RoutingRules = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
