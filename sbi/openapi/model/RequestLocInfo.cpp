/**
 * Namf_Location
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "RequestLocInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RequestLocInfo::RequestLocInfo() {
  m_Req5gsLoc = false;
  m_Req5gsLocIsSet = false;
  m_ReqCurrentLoc = false;
  m_ReqCurrentLocIsSet = false;
  m_ReqRatType = false;
  m_ReqRatTypeIsSet = false;
  m_ReqTimeZone = false;
  m_ReqTimeZoneIsSet = false;
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
}

RequestLocInfo::~RequestLocInfo() {}

void RequestLocInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const RequestLocInfo &o) {
  j = nlohmann::json();
  if (o.req5gsLocIsSet())
    j["req5gsLoc"] = o.m_Req5gsLoc;
  if (o.reqCurrentLocIsSet())
    j["reqCurrentLoc"] = o.m_ReqCurrentLoc;
  if (o.reqRatTypeIsSet())
    j["reqRatType"] = o.m_ReqRatType;
  if (o.reqTimeZoneIsSet())
    j["reqTimeZone"] = o.m_ReqTimeZone;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, RequestLocInfo &o) {
  if (j.find("req5gsLoc") != j.end()) {
    j.at("req5gsLoc").get_to(o.m_Req5gsLoc);
    o.m_Req5gsLocIsSet = true;
  }
  if (j.find("reqCurrentLoc") != j.end()) {
    j.at("reqCurrentLoc").get_to(o.m_ReqCurrentLoc);
    o.m_ReqCurrentLocIsSet = true;
  }
  if (j.find("reqRatType") != j.end()) {
    j.at("reqRatType").get_to(o.m_ReqRatType);
    o.m_ReqRatTypeIsSet = true;
  }
  if (j.find("reqTimeZone") != j.end()) {
    j.at("reqTimeZone").get_to(o.m_ReqTimeZone);
    o.m_ReqTimeZoneIsSet = true;
  }
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
}

bool RequestLocInfo::isReq5gsLoc() const { return m_Req5gsLoc; }
void RequestLocInfo::setReq5gsLoc(bool const value) {
  m_Req5gsLoc = value;
  m_Req5gsLocIsSet = true;
}
bool RequestLocInfo::req5gsLocIsSet() const { return m_Req5gsLocIsSet; }
void RequestLocInfo::unsetReq5gsLoc() { m_Req5gsLocIsSet = false; }
bool RequestLocInfo::isReqCurrentLoc() const { return m_ReqCurrentLoc; }
void RequestLocInfo::setReqCurrentLoc(bool const value) {
  m_ReqCurrentLoc = value;
  m_ReqCurrentLocIsSet = true;
}
bool RequestLocInfo::reqCurrentLocIsSet() const { return m_ReqCurrentLocIsSet; }
void RequestLocInfo::unsetReqCurrentLoc() { m_ReqCurrentLocIsSet = false; }
bool RequestLocInfo::isReqRatType() const { return m_ReqRatType; }
void RequestLocInfo::setReqRatType(bool const value) {
  m_ReqRatType = value;
  m_ReqRatTypeIsSet = true;
}
bool RequestLocInfo::reqRatTypeIsSet() const { return m_ReqRatTypeIsSet; }
void RequestLocInfo::unsetReqRatType() { m_ReqRatTypeIsSet = false; }
bool RequestLocInfo::isReqTimeZone() const { return m_ReqTimeZone; }
void RequestLocInfo::setReqTimeZone(bool const value) {
  m_ReqTimeZone = value;
  m_ReqTimeZoneIsSet = true;
}
bool RequestLocInfo::reqTimeZoneIsSet() const { return m_ReqTimeZoneIsSet; }
void RequestLocInfo::unsetReqTimeZone() { m_ReqTimeZoneIsSet = false; }
std::string RequestLocInfo::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void RequestLocInfo::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool RequestLocInfo::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void RequestLocInfo::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
