/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IpEthFlowDescription.h
 *
 * Contains the description of an Uplink and/or Downlink Ethernet flow.
 */

#ifndef IpEthFlowDescription_H_
#define IpEthFlowDescription_H_

#include "EthFlowDescription.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the description of an Uplink and/or Downlink Ethernet flow.
/// </summary>
class IpEthFlowDescription {
public:
  IpEthFlowDescription();
  virtual ~IpEthFlowDescription();

  void validate();

  /////////////////////////////////////////////
  /// IpEthFlowDescription members

  /// <summary>
  /// Defines a packet filter of an IP flow.
  /// </summary>
  std::string getIpTrafficFilter() const;
  void setIpTrafficFilter(std::string const &value);
  bool ipTrafficFilterIsSet() const;
  void unsetIpTrafficFilter();
  /// <summary>
  ///
  /// </summary>
  EthFlowDescription getEthTrafficFilter() const;
  void setEthTrafficFilter(EthFlowDescription const &value);
  bool ethTrafficFilterIsSet() const;
  void unsetEthTrafficFilter();

  friend void to_json(nlohmann::json &j, const IpEthFlowDescription &o);
  friend void from_json(const nlohmann::json &j, IpEthFlowDescription &o);

protected:
  std::string m_IpTrafficFilter;
  bool m_IpTrafficFilterIsSet;
  EthFlowDescription m_EthTrafficFilter;
  bool m_EthTrafficFilterIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IpEthFlowDescription_H_ */
