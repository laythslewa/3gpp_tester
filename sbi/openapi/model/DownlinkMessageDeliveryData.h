/**
 * VAE_MessageDelivery
 * API for VAE Message Delivery Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DownlinkMessageDeliveryData.h
 *
 * Contains the downlink V2X message delivery data.
 */

#ifndef DownlinkMessageDeliveryData_H_
#define DownlinkMessageDeliveryData_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the downlink V2X message delivery data.
/// </summary>
class DownlinkMessageDeliveryData {
public:
  DownlinkMessageDeliveryData();
  virtual ~DownlinkMessageDeliveryData();

  void validate();

  /////////////////////////////////////////////
  /// DownlinkMessageDeliveryData members

  /// <summary>
  /// Represents the identifier of the V2X UE.
  /// </summary>
  std::string getUeId() const;
  void setUeId(std::string const &value);
  bool ueIdIsSet() const;
  void unsetUeId();
  /// <summary>
  /// Represents the group ID for which a V2X message is addressed.
  /// </summary>
  std::string getGroupId() const;
  void setGroupId(std::string const &value);
  bool groupIdIsSet() const;
  void unsetGroupId();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getDuration() const;
  void setDuration(std::string const &value);
  bool durationIsSet() const;
  void unsetDuration();
  /// <summary>
  /// Represents a geographical area identifier.
  /// </summary>
  std::string getGeoId() const;
  void setGeoId(std::string const &value);
  bool geoIdIsSet() const;
  void unsetGeoId();
  /// <summary>
  /// string with format \&quot;bytes\&quot; as defined in OpenAPI
  /// </summary>
  std::string getPayload() const;
  void setPayload(std::string const &value);

  friend void to_json(nlohmann::json &j, const DownlinkMessageDeliveryData &o);
  friend void from_json(const nlohmann::json &j,
                        DownlinkMessageDeliveryData &o);

protected:
  std::string m_UeId;
  bool m_UeIdIsSet;
  std::string m_GroupId;
  bool m_GroupIdIsSet;
  std::string m_Duration;
  bool m_DurationIsSet;
  std::string m_GeoId;
  bool m_GeoIdIsSet;
  std::string m_Payload;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* DownlinkMessageDeliveryData_H_ */
