/**
 * Nhss_EE
 * HSS Event Exposure Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ReachabilityForSmsReport.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ReachabilityForSmsReport::ReachabilityForSmsReport() {
  m_ReachabilitySmsStatus = false;
  m_MaxAvailabilityTime = "";
  m_MaxAvailabilityTimeIsSet = false;
}

ReachabilityForSmsReport::~ReachabilityForSmsReport() {}

void ReachabilityForSmsReport::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ReachabilityForSmsReport &o) {
  j = nlohmann::json();
  j["reachabilitySmsStatus"] = o.m_ReachabilitySmsStatus;
  if (o.maxAvailabilityTimeIsSet())
    j["maxAvailabilityTime"] = o.m_MaxAvailabilityTime;
}

void from_json(const nlohmann::json &j, ReachabilityForSmsReport &o) {
  j.at("reachabilitySmsStatus").get_to(o.m_ReachabilitySmsStatus);
  if (j.find("maxAvailabilityTime") != j.end()) {
    j.at("maxAvailabilityTime").get_to(o.m_MaxAvailabilityTime);
    o.m_MaxAvailabilityTimeIsSet = true;
  }
}

bool ReachabilityForSmsReport::isReachabilitySmsStatus() const {
  return m_ReachabilitySmsStatus;
}
void ReachabilityForSmsReport::setReachabilitySmsStatus(bool const value) {
  m_ReachabilitySmsStatus = value;
}
std::string ReachabilityForSmsReport::getMaxAvailabilityTime() const {
  return m_MaxAvailabilityTime;
}
void ReachabilityForSmsReport::setMaxAvailabilityTime(
    std::string const &value) {
  m_MaxAvailabilityTime = value;
  m_MaxAvailabilityTimeIsSet = true;
}
bool ReachabilityForSmsReport::maxAvailabilityTimeIsSet() const {
  return m_MaxAvailabilityTimeIsSet;
}
void ReachabilityForSmsReport::unsetMaxAvailabilityTime() {
  m_MaxAvailabilityTimeIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
