/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * MetaData.h
 *
 * Contains the meta data information needed for replay protection
 */

#ifndef MetaData_H_
#define MetaData_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the meta data information needed for replay protection
/// </summary>
class MetaData {
public:
  MetaData();
  virtual ~MetaData();

  void validate();

  /////////////////////////////////////////////
  /// MetaData members

  /// <summary>
  ///
  /// </summary>
  std::string getN32fContextId() const;
  void setN32fContextId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getMessageId() const;
  void setMessageId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getAuthorizedIpxId() const;
  void setAuthorizedIpxId(std::string const &value);

  friend void to_json(nlohmann::json &j, const MetaData &o);
  friend void from_json(const nlohmann::json &j, MetaData &o);

protected:
  std::string m_N32fContextId;

  std::string m_MessageId;

  std::string m_AuthorizedIpxId;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* MetaData_H_ */
