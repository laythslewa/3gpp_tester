/**
 * SS_NetworkResourceAdaptation
 * SS Network Resource Adaptation Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UserPlaneNotification.h
 *
 * Represents a notification on User Plane events.
 */

#ifndef UserPlaneNotification_H_
#define UserPlaneNotification_H_

#include "NrmEventNotification.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a notification on User Plane events.
/// </summary>
class UserPlaneNotification {
public:
  UserPlaneNotification();
  virtual ~UserPlaneNotification();

  void validate();

  /////////////////////////////////////////////
  /// UserPlaneNotification members

  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getNotifId() const;
  void setNotifId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<NrmEventNotification> &getEventNotifs();
  void setEventNotifs(std::vector<NrmEventNotification> const &value);

  friend void to_json(nlohmann::json &j, const UserPlaneNotification &o);
  friend void from_json(const nlohmann::json &j, UserPlaneNotification &o);

protected:
  std::string m_NotifId;

  std::vector<NrmEventNotification> m_EventNotifs;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UserPlaneNotification_H_ */
