/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ResourcesAllocationInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ResourcesAllocationInfo::ResourcesAllocationInfo() {
  m_McResourcStatusIsSet = false;
  m_FlowsIsSet = false;
  m_AltSerReq = "";
  m_AltSerReqIsSet = false;
}

ResourcesAllocationInfo::~ResourcesAllocationInfo() {}

void ResourcesAllocationInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ResourcesAllocationInfo &o) {
  j = nlohmann::json();
  if (o.mcResourcStatusIsSet())
    j["mcResourcStatus"] = o.m_McResourcStatus;
  if (o.flowsIsSet() || !o.m_Flows.empty())
    j["flows"] = o.m_Flows;
  if (o.altSerReqIsSet())
    j["altSerReq"] = o.m_AltSerReq;
}

void from_json(const nlohmann::json &j, ResourcesAllocationInfo &o) {
  if (j.find("mcResourcStatus") != j.end()) {
    j.at("mcResourcStatus").get_to(o.m_McResourcStatus);
    o.m_McResourcStatusIsSet = true;
  }
  if (j.find("flows") != j.end()) {
    j.at("flows").get_to(o.m_Flows);
    o.m_FlowsIsSet = true;
  }
  if (j.find("altSerReq") != j.end()) {
    j.at("altSerReq").get_to(o.m_AltSerReq);
    o.m_AltSerReqIsSet = true;
  }
}

MediaComponentResourcesStatus
ResourcesAllocationInfo::getMcResourcStatus() const {
  return m_McResourcStatus;
}
void ResourcesAllocationInfo::setMcResourcStatus(
    MediaComponentResourcesStatus const &value) {
  m_McResourcStatus = value;
  m_McResourcStatusIsSet = true;
}
bool ResourcesAllocationInfo::mcResourcStatusIsSet() const {
  return m_McResourcStatusIsSet;
}
void ResourcesAllocationInfo::unsetMcResourcStatus() {
  m_McResourcStatusIsSet = false;
}
std::vector<Flows> &ResourcesAllocationInfo::getFlows() { return m_Flows; }
void ResourcesAllocationInfo::setFlows(std::vector<Flows> const &value) {
  m_Flows = value;
  m_FlowsIsSet = true;
}
bool ResourcesAllocationInfo::flowsIsSet() const { return m_FlowsIsSet; }
void ResourcesAllocationInfo::unsetFlows() { m_FlowsIsSet = false; }
std::string ResourcesAllocationInfo::getAltSerReq() const {
  return m_AltSerReq;
}
void ResourcesAllocationInfo::setAltSerReq(std::string const &value) {
  m_AltSerReq = value;
  m_AltSerReqIsSet = true;
}
bool ResourcesAllocationInfo::altSerReqIsSet() const {
  return m_AltSerReqIsSet;
}
void ResourcesAllocationInfo::unsetAltSerReq() { m_AltSerReqIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
