/**
 * Nbsf_Management
 * Binding Support Management Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PCFBindingsCollectionApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

PCFBindingsCollectionApiImpl::PCFBindingsCollectionApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : PCFBindingsCollectionApi(rtr) {}

void PCFBindingsCollectionApiImpl::create_pcf_binding(
    const PcfBinding &pcfBinding, Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void PCFBindingsCollectionApiImpl::get_pcf_bindings(
    const Pistache::Optional<std::string> &ipv4Addr,
    const Pistache::Optional<Ipv6Prefix> &ipv6Prefix,
    const Pistache::Optional<std::string> &macAddr48,
    const Pistache::Optional<std::string> &dnn,
    const Pistache::Optional<std::string> &supi,
    const Pistache::Optional<std::string> &gpsi,
    const Pistache::Optional<Snssai> &snssai,
    const Pistache::Optional<std::string> &ipDomain,
    const Pistache::Optional<std::string> &suppFeat,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
