/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PsUserState.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PsUserState::PsUserState() {
  m_SgsnUserStateIsSet = false;
  m_MmeUserStateIsSet = false;
  m_AmfUserStateIsSet = false;
}

PsUserState::~PsUserState() {}

void PsUserState::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PsUserState &o) {
  j = nlohmann::json();
  if (o.sgsnUserStateIsSet())
    j["sgsnUserState"] = o.m_SgsnUserState;
  if (o.mmeUserStateIsSet())
    j["mmeUserState"] = o.m_MmeUserState;
  if (o.amfUserStateIsSet())
    j["amfUserState"] = o.m_AmfUserState;
}

void from_json(const nlohmann::json &j, PsUserState &o) {
  if (j.find("sgsnUserState") != j.end()) {
    j.at("sgsnUserState").get_to(o.m_SgsnUserState);
    o.m_SgsnUserStateIsSet = true;
  }
  if (j.find("mmeUserState") != j.end()) {
    j.at("mmeUserState").get_to(o.m_MmeUserState);
    o.m_MmeUserStateIsSet = true;
  }
  if (j.find("amfUserState") != j.end()) {
    j.at("amfUserState").get_to(o.m_AmfUserState);
    o.m_AmfUserStateIsSet = true;
  }
}

UserStatePs PsUserState::getSgsnUserState() const { return m_SgsnUserState; }
void PsUserState::setSgsnUserState(UserStatePs const &value) {
  m_SgsnUserState = value;
  m_SgsnUserStateIsSet = true;
}
bool PsUserState::sgsnUserStateIsSet() const { return m_SgsnUserStateIsSet; }
void PsUserState::unsetSgsnUserState() { m_SgsnUserStateIsSet = false; }
UserStatePs PsUserState::getMmeUserState() const { return m_MmeUserState; }
void PsUserState::setMmeUserState(UserStatePs const &value) {
  m_MmeUserState = value;
  m_MmeUserStateIsSet = true;
}
bool PsUserState::mmeUserStateIsSet() const { return m_MmeUserStateIsSet; }
void PsUserState::unsetMmeUserState() { m_MmeUserStateIsSet = false; }
UserStatePs PsUserState::getAmfUserState() const { return m_AmfUserState; }
void PsUserState::setAmfUserState(UserStatePs const &value) {
  m_AmfUserState = value;
  m_AmfUserStateIsSet = true;
}
bool PsUserState::amfUserStateIsSet() const { return m_AmfUserStateIsSet; }
void PsUserState::unsetAmfUserState() { m_AmfUserStateIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
