/**
 * Nausf_SoRProtection Service
 * AUSF SoR Protection Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SorSecurityInfo.h
 *
 * Contains the material generated for securing of SoR. It contains at least the
 * SoR-MAC-IAUSF and CounterSoR.
 */

#ifndef SorSecurityInfo_H_
#define SorSecurityInfo_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the material generated for securing of SoR. It contains at least
/// the SoR-MAC-IAUSF and CounterSoR.
/// </summary>
class SorSecurityInfo {
public:
  SorSecurityInfo();
  virtual ~SorSecurityInfo();

  void validate();

  /////////////////////////////////////////////
  /// SorSecurityInfo members

  /// <summary>
  /// MAC value for protecting SOR procedure (SoR-MAC-IAUSF and SoR-XMAC-IUE).
  /// </summary>
  std::string getSorMacIausf() const;
  void setSorMacIausf(std::string const &value);
  /// <summary>
  /// CounterSoR.
  /// </summary>
  std::string getCounterSor() const;
  void setCounterSor(std::string const &value);
  /// <summary>
  /// MAC value for protecting SOR procedure (SoR-MAC-IAUSF and SoR-XMAC-IUE).
  /// </summary>
  std::string getSorXmacIue() const;
  void setSorXmacIue(std::string const &value);
  bool sorXmacIueIsSet() const;
  void unsetSorXmacIue();

  friend void to_json(nlohmann::json &j, const SorSecurityInfo &o);
  friend void from_json(const nlohmann::json &j, SorSecurityInfo &o);

protected:
  std::string m_SorMacIausf;

  std::string m_CounterSor;

  std::string m_SorXmacIue;
  bool m_SorXmacIueIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SorSecurityInfo_H_ */
