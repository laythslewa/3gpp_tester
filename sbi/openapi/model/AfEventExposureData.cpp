/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AfEventExposureData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AfEventExposureData::AfEventExposureData() {
  m_AfIdsIsSet = false;
  m_AppIdsIsSet = false;
}

AfEventExposureData::~AfEventExposureData() {}

void AfEventExposureData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AfEventExposureData &o) {
  j = nlohmann::json();
  j["afEvents"] = o.m_AfEvents;
  if (o.afIdsIsSet() || !o.m_AfIds.empty())
    j["afIds"] = o.m_AfIds;
  if (o.appIdsIsSet() || !o.m_AppIds.empty())
    j["appIds"] = o.m_AppIds;
}

void from_json(const nlohmann::json &j, AfEventExposureData &o) {
  j.at("afEvents").get_to(o.m_AfEvents);
  if (j.find("afIds") != j.end()) {
    j.at("afIds").get_to(o.m_AfIds);
    o.m_AfIdsIsSet = true;
  }
  if (j.find("appIds") != j.end()) {
    j.at("appIds").get_to(o.m_AppIds);
    o.m_AppIdsIsSet = true;
  }
}

std::vector<AfEvent> &AfEventExposureData::getAfEvents() { return m_AfEvents; }
void AfEventExposureData::setAfEvents(std::vector<AfEvent> const &value) {
  m_AfEvents = value;
}
std::vector<std::string> &AfEventExposureData::getAfIds() { return m_AfIds; }
void AfEventExposureData::setAfIds(std::vector<std::string> const &value) {
  m_AfIds = value;
  m_AfIdsIsSet = true;
}
bool AfEventExposureData::afIdsIsSet() const { return m_AfIdsIsSet; }
void AfEventExposureData::unsetAfIds() { m_AfIdsIsSet = false; }
std::vector<std::string> &AfEventExposureData::getAppIds() { return m_AppIds; }
void AfEventExposureData::setAppIds(std::vector<std::string> const &value) {
  m_AppIds = value;
  m_AppIdsIsSet = true;
}
bool AfEventExposureData::appIdsIsSet() const { return m_AppIdsIsSet; }
void AfEventExposureData::unsetAppIds() { m_AppIdsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
