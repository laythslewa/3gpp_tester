/**
 * 3gpp-cp-parameter-provisioning
 * API for provisioning communication pattern parameters. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UmtLocationArea5G.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UmtLocationArea5G::UmtLocationArea5G() {
  m_GeographicAreasIsSet = false;
  m_CivicAddressesIsSet = false;
  m_NwAreaInfoIsSet = false;
  m_UmtTime = "";
  m_UmtTimeIsSet = false;
  m_UmtDuration = 0;
  m_UmtDurationIsSet = false;
}

UmtLocationArea5G::~UmtLocationArea5G() {}

void UmtLocationArea5G::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UmtLocationArea5G &o) {
  j = nlohmann::json();
  if (o.geographicAreasIsSet() || !o.m_GeographicAreas.empty())
    j["geographicAreas"] = o.m_GeographicAreas;
  if (o.civicAddressesIsSet() || !o.m_CivicAddresses.empty())
    j["civicAddresses"] = o.m_CivicAddresses;
  if (o.nwAreaInfoIsSet())
    j["nwAreaInfo"] = o.m_NwAreaInfo;
  if (o.umtTimeIsSet())
    j["umtTime"] = o.m_UmtTime;
  if (o.umtDurationIsSet())
    j["umtDuration"] = o.m_UmtDuration;
}

void from_json(const nlohmann::json &j, UmtLocationArea5G &o) {
  if (j.find("geographicAreas") != j.end()) {
    j.at("geographicAreas").get_to(o.m_GeographicAreas);
    o.m_GeographicAreasIsSet = true;
  }
  if (j.find("civicAddresses") != j.end()) {
    j.at("civicAddresses").get_to(o.m_CivicAddresses);
    o.m_CivicAddressesIsSet = true;
  }
  if (j.find("nwAreaInfo") != j.end()) {
    j.at("nwAreaInfo").get_to(o.m_NwAreaInfo);
    o.m_NwAreaInfoIsSet = true;
  }
  if (j.find("umtTime") != j.end()) {
    j.at("umtTime").get_to(o.m_UmtTime);
    o.m_UmtTimeIsSet = true;
  }
  if (j.find("umtDuration") != j.end()) {
    j.at("umtDuration").get_to(o.m_UmtDuration);
    o.m_UmtDurationIsSet = true;
  }
}

std::vector<GeographicArea> &UmtLocationArea5G::getGeographicAreas() {
  return m_GeographicAreas;
}
void UmtLocationArea5G::setGeographicAreas(
    std::vector<GeographicArea> const &value) {
  m_GeographicAreas = value;
  m_GeographicAreasIsSet = true;
}
bool UmtLocationArea5G::geographicAreasIsSet() const {
  return m_GeographicAreasIsSet;
}
void UmtLocationArea5G::unsetGeographicAreas() {
  m_GeographicAreasIsSet = false;
}
std::vector<CivicAddress> &UmtLocationArea5G::getCivicAddresses() {
  return m_CivicAddresses;
}
void UmtLocationArea5G::setCivicAddresses(
    std::vector<CivicAddress> const &value) {
  m_CivicAddresses = value;
  m_CivicAddressesIsSet = true;
}
bool UmtLocationArea5G::civicAddressesIsSet() const {
  return m_CivicAddressesIsSet;
}
void UmtLocationArea5G::unsetCivicAddresses() { m_CivicAddressesIsSet = false; }
NetworkAreaInfo UmtLocationArea5G::getNwAreaInfo() const {
  return m_NwAreaInfo;
}
void UmtLocationArea5G::setNwAreaInfo(NetworkAreaInfo const &value) {
  m_NwAreaInfo = value;
  m_NwAreaInfoIsSet = true;
}
bool UmtLocationArea5G::nwAreaInfoIsSet() const { return m_NwAreaInfoIsSet; }
void UmtLocationArea5G::unsetNwAreaInfo() { m_NwAreaInfoIsSet = false; }
std::string UmtLocationArea5G::getUmtTime() const { return m_UmtTime; }
void UmtLocationArea5G::setUmtTime(std::string const &value) {
  m_UmtTime = value;
  m_UmtTimeIsSet = true;
}
bool UmtLocationArea5G::umtTimeIsSet() const { return m_UmtTimeIsSet; }
void UmtLocationArea5G::unsetUmtTime() { m_UmtTimeIsSet = false; }
int32_t UmtLocationArea5G::getUmtDuration() const { return m_UmtDuration; }
void UmtLocationArea5G::setUmtDuration(int32_t const value) {
  m_UmtDuration = value;
  m_UmtDurationIsSet = true;
}
bool UmtLocationArea5G::umtDurationIsSet() const { return m_UmtDurationIsSet; }
void UmtLocationArea5G::unsetUmtDuration() { m_UmtDurationIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
