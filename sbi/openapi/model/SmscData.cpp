/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SmscData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SmscData::SmscData() {
  m_SmscMapAddress = "";
  m_SmscMapAddressIsSet = false;
  m_SmscDiameterAddressIsSet = false;
}

SmscData::~SmscData() {}

void SmscData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SmscData &o) {
  j = nlohmann::json();
  if (o.smscMapAddressIsSet())
    j["smscMapAddress"] = o.m_SmscMapAddress;
  if (o.smscDiameterAddressIsSet())
    j["smscDiameterAddress"] = o.m_SmscDiameterAddress;
}

void from_json(const nlohmann::json &j, SmscData &o) {
  if (j.find("smscMapAddress") != j.end()) {
    j.at("smscMapAddress").get_to(o.m_SmscMapAddress);
    o.m_SmscMapAddressIsSet = true;
  }
  if (j.find("smscDiameterAddress") != j.end()) {
    j.at("smscDiameterAddress").get_to(o.m_SmscDiameterAddress);
    o.m_SmscDiameterAddressIsSet = true;
  }
}

std::string SmscData::getSmscMapAddress() const { return m_SmscMapAddress; }
void SmscData::setSmscMapAddress(std::string const &value) {
  m_SmscMapAddress = value;
  m_SmscMapAddressIsSet = true;
}
bool SmscData::smscMapAddressIsSet() const { return m_SmscMapAddressIsSet; }
void SmscData::unsetSmscMapAddress() { m_SmscMapAddressIsSet = false; }
NetworkNodeDiameterAddress SmscData::getSmscDiameterAddress() const {
  return m_SmscDiameterAddress;
}
void SmscData::setSmscDiameterAddress(NetworkNodeDiameterAddress const &value) {
  m_SmscDiameterAddress = value;
  m_SmscDiameterAddressIsSet = true;
}
bool SmscData::smscDiameterAddressIsSet() const {
  return m_SmscDiameterAddressIsSet;
}
void SmscData::unsetSmscDiameterAddress() {
  m_SmscDiameterAddressIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
