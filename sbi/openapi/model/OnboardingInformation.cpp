/**
 * CAPIF_API_Invoker_Management_API
 * API for API invoker management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "OnboardingInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OnboardingInformation::OnboardingInformation() {
  m_ApiInvokerPublicKey = "";
  m_ApiInvokerCertificate = "";
  m_ApiInvokerCertificateIsSet = false;
  m_OnboardingSecret = "";
  m_OnboardingSecretIsSet = false;
}

OnboardingInformation::~OnboardingInformation() {}

void OnboardingInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const OnboardingInformation &o) {
  j = nlohmann::json();
  j["apiInvokerPublicKey"] = o.m_ApiInvokerPublicKey;
  if (o.apiInvokerCertificateIsSet())
    j["apiInvokerCertificate"] = o.m_ApiInvokerCertificate;
  if (o.onboardingSecretIsSet())
    j["onboardingSecret"] = o.m_OnboardingSecret;
}

void from_json(const nlohmann::json &j, OnboardingInformation &o) {
  j.at("apiInvokerPublicKey").get_to(o.m_ApiInvokerPublicKey);
  if (j.find("apiInvokerCertificate") != j.end()) {
    j.at("apiInvokerCertificate").get_to(o.m_ApiInvokerCertificate);
    o.m_ApiInvokerCertificateIsSet = true;
  }
  if (j.find("onboardingSecret") != j.end()) {
    j.at("onboardingSecret").get_to(o.m_OnboardingSecret);
    o.m_OnboardingSecretIsSet = true;
  }
}

std::string OnboardingInformation::getApiInvokerPublicKey() const {
  return m_ApiInvokerPublicKey;
}
void OnboardingInformation::setApiInvokerPublicKey(std::string const &value) {
  m_ApiInvokerPublicKey = value;
}
std::string OnboardingInformation::getApiInvokerCertificate() const {
  return m_ApiInvokerCertificate;
}
void OnboardingInformation::setApiInvokerCertificate(std::string const &value) {
  m_ApiInvokerCertificate = value;
  m_ApiInvokerCertificateIsSet = true;
}
bool OnboardingInformation::apiInvokerCertificateIsSet() const {
  return m_ApiInvokerCertificateIsSet;
}
void OnboardingInformation::unsetApiInvokerCertificate() {
  m_ApiInvokerCertificateIsSet = false;
}
std::string OnboardingInformation::getOnboardingSecret() const {
  return m_OnboardingSecret;
}
void OnboardingInformation::setOnboardingSecret(std::string const &value) {
  m_OnboardingSecret = value;
  m_OnboardingSecretIsSet = true;
}
bool OnboardingInformation::onboardingSecretIsSet() const {
  return m_OnboardingSecretIsSet;
}
void OnboardingInformation::unsetOnboardingSecret() {
  m_OnboardingSecretIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
