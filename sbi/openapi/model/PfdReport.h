/**
 * 3gpp-pfd-management
 * API for PFD management. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PfdReport.h
 *
 * Represents a PFD report indicating the external application identifier(s)
 * which PFD(s) are not added or modified successfully and the corresponding
 * failure cause(s).
 */

#ifndef PfdReport_H_
#define PfdReport_H_

#include "FailureCode.h"
#include "UserPlaneLocationArea.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a PFD report indicating the external application identifier(s)
/// which PFD(s) are not added or modified successfully and the corresponding
/// failure cause(s).
/// </summary>
class PfdReport {
public:
  PfdReport();
  virtual ~PfdReport();

  void validate();

  /////////////////////////////////////////////
  /// PfdReport members

  /// <summary>
  /// Identifies the external application identifier(s) which PFD(s) are not
  /// added or modified successfully
  /// </summary>
  std::vector<std::string> &getExternalAppIds();
  void setExternalAppIds(std::vector<std::string> const &value);
  /// <summary>
  ///
  /// </summary>
  FailureCode getFailureCode() const;
  void setFailureCode(FailureCode const &value);
  /// <summary>
  /// Unsigned integer identifying a period of time in units of seconds.
  /// </summary>
  int32_t getCachingTime() const;
  void setCachingTime(int32_t const value);
  bool cachingTimeIsSet() const;
  void unsetCachingTime();
  /// <summary>
  ///
  /// </summary>
  UserPlaneLocationArea getLocationArea() const;
  void setLocationArea(UserPlaneLocationArea const &value);
  bool locationAreaIsSet() const;
  void unsetLocationArea();

  friend void to_json(nlohmann::json &j, const PfdReport &o);
  friend void from_json(const nlohmann::json &j, PfdReport &o);

protected:
  std::vector<std::string> m_ExternalAppIds;

  FailureCode m_FailureCode;

  int32_t m_CachingTime;
  bool m_CachingTimeIsSet;
  UserPlaneLocationArea m_LocationArea;
  bool m_LocationAreaIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PfdReport_H_ */
