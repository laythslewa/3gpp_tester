/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AllowedMtcProviderInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AllowedMtcProviderInfo::AllowedMtcProviderInfo() {
  m_MtcProviderInformation = "";
  m_MtcProviderInformationIsSet = false;
  m_AfId = "";
  m_AfIdIsSet = false;
}

AllowedMtcProviderInfo::~AllowedMtcProviderInfo() {}

void AllowedMtcProviderInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AllowedMtcProviderInfo &o) {
  j = nlohmann::json();
  if (o.mtcProviderInformationIsSet())
    j["mtcProviderInformation"] = o.m_MtcProviderInformation;
  if (o.afIdIsSet())
    j["afId"] = o.m_AfId;
}

void from_json(const nlohmann::json &j, AllowedMtcProviderInfo &o) {
  if (j.find("mtcProviderInformation") != j.end()) {
    j.at("mtcProviderInformation").get_to(o.m_MtcProviderInformation);
    o.m_MtcProviderInformationIsSet = true;
  }
  if (j.find("afId") != j.end()) {
    j.at("afId").get_to(o.m_AfId);
    o.m_AfIdIsSet = true;
  }
}

std::string AllowedMtcProviderInfo::getMtcProviderInformation() const {
  return m_MtcProviderInformation;
}
void AllowedMtcProviderInfo::setMtcProviderInformation(
    std::string const &value) {
  m_MtcProviderInformation = value;
  m_MtcProviderInformationIsSet = true;
}
bool AllowedMtcProviderInfo::mtcProviderInformationIsSet() const {
  return m_MtcProviderInformationIsSet;
}
void AllowedMtcProviderInfo::unsetMtcProviderInformation() {
  m_MtcProviderInformationIsSet = false;
}
std::string AllowedMtcProviderInfo::getAfId() const { return m_AfId; }
void AllowedMtcProviderInfo::setAfId(std::string const &value) {
  m_AfId = value;
  m_AfIdIsSet = true;
}
bool AllowedMtcProviderInfo::afIdIsSet() const { return m_AfIdIsSet; }
void AllowedMtcProviderInfo::unsetAfId() { m_AfIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
