/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LocationQoS.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LocationQoS::LocationQoS() {
  m_HAccuracy = 0.0f;
  m_HAccuracyIsSet = false;
  m_VAccuracy = 0.0f;
  m_VAccuracyIsSet = false;
  m_VerticalRequested = false;
  m_VerticalRequestedIsSet = false;
  m_ResponseTimeIsSet = false;
  m_LcsQosClassIsSet = false;
}

LocationQoS::~LocationQoS() {}

void LocationQoS::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LocationQoS &o) {
  j = nlohmann::json();
  if (o.hAccuracyIsSet())
    j["hAccuracy"] = o.m_HAccuracy;
  if (o.vAccuracyIsSet())
    j["vAccuracy"] = o.m_VAccuracy;
  if (o.verticalRequestedIsSet())
    j["verticalRequested"] = o.m_VerticalRequested;
  if (o.responseTimeIsSet())
    j["responseTime"] = o.m_ResponseTime;
  if (o.lcsQosClassIsSet())
    j["lcsQosClass"] = o.m_LcsQosClass;
}

void from_json(const nlohmann::json &j, LocationQoS &o) {
  if (j.find("hAccuracy") != j.end()) {
    j.at("hAccuracy").get_to(o.m_HAccuracy);
    o.m_HAccuracyIsSet = true;
  }
  if (j.find("vAccuracy") != j.end()) {
    j.at("vAccuracy").get_to(o.m_VAccuracy);
    o.m_VAccuracyIsSet = true;
  }
  if (j.find("verticalRequested") != j.end()) {
    j.at("verticalRequested").get_to(o.m_VerticalRequested);
    o.m_VerticalRequestedIsSet = true;
  }
  if (j.find("responseTime") != j.end()) {
    j.at("responseTime").get_to(o.m_ResponseTime);
    o.m_ResponseTimeIsSet = true;
  }
  if (j.find("lcsQosClass") != j.end()) {
    j.at("lcsQosClass").get_to(o.m_LcsQosClass);
    o.m_LcsQosClassIsSet = true;
  }
}

float LocationQoS::getHAccuracy() const { return m_HAccuracy; }
void LocationQoS::setHAccuracy(float const value) {
  m_HAccuracy = value;
  m_HAccuracyIsSet = true;
}
bool LocationQoS::hAccuracyIsSet() const { return m_HAccuracyIsSet; }
void LocationQoS::unsetHAccuracy() { m_HAccuracyIsSet = false; }
float LocationQoS::getVAccuracy() const { return m_VAccuracy; }
void LocationQoS::setVAccuracy(float const value) {
  m_VAccuracy = value;
  m_VAccuracyIsSet = true;
}
bool LocationQoS::vAccuracyIsSet() const { return m_VAccuracyIsSet; }
void LocationQoS::unsetVAccuracy() { m_VAccuracyIsSet = false; }
bool LocationQoS::isVerticalRequested() const { return m_VerticalRequested; }
void LocationQoS::setVerticalRequested(bool const value) {
  m_VerticalRequested = value;
  m_VerticalRequestedIsSet = true;
}
bool LocationQoS::verticalRequestedIsSet() const {
  return m_VerticalRequestedIsSet;
}
void LocationQoS::unsetVerticalRequested() { m_VerticalRequestedIsSet = false; }
ResponseTime LocationQoS::getResponseTime() const { return m_ResponseTime; }
void LocationQoS::setResponseTime(ResponseTime const &value) {
  m_ResponseTime = value;
  m_ResponseTimeIsSet = true;
}
bool LocationQoS::responseTimeIsSet() const { return m_ResponseTimeIsSet; }
void LocationQoS::unsetResponseTime() { m_ResponseTimeIsSet = false; }
LcsQosClass LocationQoS::getLcsQosClass() const { return m_LcsQosClass; }
void LocationQoS::setLcsQosClass(LcsQosClass const &value) {
  m_LcsQosClass = value;
  m_LcsQosClassIsSet = true;
}
bool LocationQoS::lcsQosClassIsSet() const { return m_LcsQosClassIsSet; }
void LocationQoS::unsetLcsQosClass() { m_LcsQosClassIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
