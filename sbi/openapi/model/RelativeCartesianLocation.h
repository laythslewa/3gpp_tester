/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RelativeCartesianLocation.h
 *
 * Relative Cartesian Location
 */

#ifndef RelativeCartesianLocation_H_
#define RelativeCartesianLocation_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Relative Cartesian Location
/// </summary>
class RelativeCartesianLocation {
public:
  RelativeCartesianLocation();
  virtual ~RelativeCartesianLocation();

  void validate();

  /////////////////////////////////////////////
  /// RelativeCartesianLocation members

  /// <summary>
  /// string with format \&quot;float\&quot; as defined in OpenAPI.
  /// </summary>
  float getX() const;
  void setX(float const value);
  /// <summary>
  /// string with format \&quot;float\&quot; as defined in OpenAPI.
  /// </summary>
  float getY() const;
  void setY(float const value);
  /// <summary>
  /// string with format \&quot;float\&quot; as defined in OpenAPI.
  /// </summary>
  float getZ() const;
  void setZ(float const value);
  bool ZIsSet() const;
  void unsetz();

  friend void to_json(nlohmann::json &j, const RelativeCartesianLocation &o);
  friend void from_json(const nlohmann::json &j, RelativeCartesianLocation &o);

protected:
  float m_x;

  float m_y;

  float m_z;
  bool m_zIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RelativeCartesianLocation_H_ */
