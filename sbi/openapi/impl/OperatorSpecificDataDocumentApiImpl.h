/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * OperatorSpecificDataDocumentApiImpl.h
 *
 *
 */

#ifndef OPERATOR_SPECIFIC_DATA_DOCUMENT_API_IMPL_H_
#define OPERATOR_SPECIFIC_DATA_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <OperatorSpecificDataDocumentApi.h>

#include <pistache/optional.h>

#include "OperatorSpecificDataContainer.h"
#include "PatchItem.h"
#include "PatchResult.h"
#include "ProblemDetails.h"
#include <map>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class OperatorSpecificDataDocumentApiImpl
    : public org::openapitools::server::api::OperatorSpecificDataDocumentApi {
public:
  OperatorSpecificDataDocumentApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~OperatorSpecificDataDocumentApiImpl() {}

  void delete_operator_specific_data(const std::string &ueId,
                                     Pistache::Http::ResponseWriter &response);
  void read_operator_specific_data(
      const std::string &ueId,
      const Pistache::Optional<std::vector<std::string>> &fields,
      const Pistache::Optional<std::string> &suppFeat,
      Pistache::Http::ResponseWriter &response);
  void replace_operator_specific_data(
      const std::string &ueId,
      const std::map<std::string, OperatorSpecificDataContainer> &requestBody,
      Pistache::Http::ResponseWriter &response);
  void update_operator_specific_data(const std::string &ueId,
                                     const std::vector<PatchItem> &patchItem,
                                     Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif