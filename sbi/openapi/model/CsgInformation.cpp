/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CsgInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CsgInformation::CsgInformation() {
  m_AccessModeIsSet = false;
  m_CMi = false;
  m_CMiIsSet = false;
}

CsgInformation::~CsgInformation() {}

void CsgInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CsgInformation &o) {
  j = nlohmann::json();
  j["csgId"] = o.m_CsgId;
  if (o.accessModeIsSet())
    j["accessMode"] = o.m_AccessMode;
  if (o.cMiIsSet())
    j["cMi"] = o.m_CMi;
}

void from_json(const nlohmann::json &j, CsgInformation &o) {
  j.at("csgId").get_to(o.m_CsgId);
  if (j.find("accessMode") != j.end()) {
    j.at("accessMode").get_to(o.m_AccessMode);
    o.m_AccessModeIsSet = true;
  }
  if (j.find("cMi") != j.end()) {
    j.at("cMi").get_to(o.m_CMi);
    o.m_CMiIsSet = true;
  }
}

std::string CsgInformation::getCsgId() const { return m_CsgId; }
void CsgInformation::setCsgId(std::string const &value) { m_CsgId = value; }
std::string CsgInformation::getAccessMode() const { return m_AccessMode; }
void CsgInformation::setAccessMode(std::string const &value) {
  m_AccessMode = value;
  m_AccessModeIsSet = true;
}
bool CsgInformation::accessModeIsSet() const { return m_AccessModeIsSet; }
void CsgInformation::unsetAccessMode() { m_AccessModeIsSet = false; }
bool CsgInformation::isCMi() const { return m_CMi; }
void CsgInformation::setCMi(bool const value) {
  m_CMi = value;
  m_CMiIsSet = true;
}
bool CsgInformation::cMiIsSet() const { return m_CMiIsSet; }
void CsgInformation::unsetCMi() { m_CMiIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
