/**
 * Nhss_EE
 * HSS Event Exposure Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * MonitoringReport.h
 *
 * Contains data for each Monitoring Event Report sent by the HSS
 */

#ifndef MonitoringReport_H_
#define MonitoringReport_H_

#include "EventType.h"
#include "Report.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains data for each Monitoring Event Report sent by the HSS
/// </summary>
class MonitoringReport {
public:
  MonitoringReport();
  virtual ~MonitoringReport();

  void validate();

  /////////////////////////////////////////////
  /// MonitoringReport members

  /// <summary>
  /// The ID to refer to a given Monitoring Event (and its corresponding
  /// Monitoring Configuration and Monitoring Event Report)
  /// </summary>
  int32_t getReferenceId() const;
  void setReferenceId(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  EventType getEventType() const;
  void setEventType(EventType const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getTimeStamp() const;
  void setTimeStamp(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  Report getReport() const;
  void setReport(Report const &value);
  bool reportIsSet() const;
  void unsetReport();

  friend void to_json(nlohmann::json &j, const MonitoringReport &o);
  friend void from_json(const nlohmann::json &j, MonitoringReport &o);

protected:
  int32_t m_ReferenceId;

  EventType m_EventType;

  std::string m_TimeStamp;

  Report m_Report;
  bool m_ReportIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* MonitoringReport_H_ */
