/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * DictionaryEntryStoreApiImpl.h
 *
 *
 */

#ifndef DICTIONARY_ENTRY_STORE_API_IMPL_H_
#define DICTIONARY_ENTRY_STORE_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <DictionaryEntryStoreApi.h>

#include <pistache/optional.h>

#include "Inline_response_200.h"
#include "ProblemDetails.h"
#include "RacFormat.h"
#include "RedirectResponse.h"
#include "UeRadioCapaId.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class DictionaryEntryStoreApiImpl
    : public org::openapitools::server::api::DictionaryEntryStoreApi {
public:
  DictionaryEntryStoreApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~DictionaryEntryStoreApiImpl() {}

  void retrieve_dictionary_entry(
      const Pistache::Optional<UeRadioCapaId> &ueRadioCapaId,
      const Pistache::Optional<RacFormat> &racFormat,
      const Pistache::Optional<std::string> &supportedFeatures,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif