/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SvcExperience.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SvcExperience::SvcExperience() {
  m_Mos = 0.0f;
  m_MosIsSet = false;
  m_UpperRange = 0.0f;
  m_UpperRangeIsSet = false;
  m_LowerRange = 0.0f;
  m_LowerRangeIsSet = false;
}

SvcExperience::~SvcExperience() {}

void SvcExperience::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SvcExperience &o) {
  j = nlohmann::json();
  if (o.mosIsSet())
    j["mos"] = o.m_Mos;
  if (o.upperRangeIsSet())
    j["upperRange"] = o.m_UpperRange;
  if (o.lowerRangeIsSet())
    j["lowerRange"] = o.m_LowerRange;
}

void from_json(const nlohmann::json &j, SvcExperience &o) {
  if (j.find("mos") != j.end()) {
    j.at("mos").get_to(o.m_Mos);
    o.m_MosIsSet = true;
  }
  if (j.find("upperRange") != j.end()) {
    j.at("upperRange").get_to(o.m_UpperRange);
    o.m_UpperRangeIsSet = true;
  }
  if (j.find("lowerRange") != j.end()) {
    j.at("lowerRange").get_to(o.m_LowerRange);
    o.m_LowerRangeIsSet = true;
  }
}

float SvcExperience::getMos() const { return m_Mos; }
void SvcExperience::setMos(float const value) {
  m_Mos = value;
  m_MosIsSet = true;
}
bool SvcExperience::mosIsSet() const { return m_MosIsSet; }
void SvcExperience::unsetMos() { m_MosIsSet = false; }
float SvcExperience::getUpperRange() const { return m_UpperRange; }
void SvcExperience::setUpperRange(float const value) {
  m_UpperRange = value;
  m_UpperRangeIsSet = true;
}
bool SvcExperience::upperRangeIsSet() const { return m_UpperRangeIsSet; }
void SvcExperience::unsetUpperRange() { m_UpperRangeIsSet = false; }
float SvcExperience::getLowerRange() const { return m_LowerRange; }
void SvcExperience::setLowerRange(float const value) {
  m_LowerRange = value;
  m_LowerRangeIsSet = true;
}
bool SvcExperience::lowerRangeIsSet() const { return m_LowerRangeIsSet; }
void SvcExperience::unsetLowerRange() { m_LowerRangeIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
