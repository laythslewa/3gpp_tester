/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ServingNetworkFunctionID.h
 *
 *
 */

#ifndef ServingNetworkFunctionID_H_
#define ServingNetworkFunctionID_H_

#include "NFIdentification.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ServingNetworkFunctionID {
public:
  ServingNetworkFunctionID();
  virtual ~ServingNetworkFunctionID();

  void validate();

  /////////////////////////////////////////////
  /// ServingNetworkFunctionID members

  /// <summary>
  ///
  /// </summary>
  NFIdentification getServingNetworkFunctionInformation() const;
  void setServingNetworkFunctionInformation(NFIdentification const &value);
  /// <summary>
  /// String identifying the AMF ID composed of AMF Region ID (8 bits), AMF Set
  /// ID (10 bits) and AMF Pointer (6 bits) as specified in clause 2.10.1 of
  /// 3GPP TS 23.003. It is encoded as a string of 6 hexadecimal characters
  /// (i.e., 24 bits)
  /// </summary>
  std::string getAMFId() const;
  void setAMFId(std::string const &value);
  bool aMFIdIsSet() const;
  void unsetAMFId();

  friend void to_json(nlohmann::json &j, const ServingNetworkFunctionID &o);
  friend void from_json(const nlohmann::json &j, ServingNetworkFunctionID &o);

protected:
  NFIdentification m_ServingNetworkFunctionInformation;

  std::string m_AMFId;
  bool m_AMFIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ServingNetworkFunctionID_H_ */
