/**
 * 3gpp-traffic-influence
 * API for AF traffic influence Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UserPlaneLatencyRequirements.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UserPlaneLatencyRequirements::UserPlaneLatencyRequirements() {
  m_MaxAllowedUpLat = 0;
  m_MaxAllowedUpLatIsSet = false;
  m_UpLatPrefer = 0;
  m_UpLatPreferIsSet = false;
}

UserPlaneLatencyRequirements::~UserPlaneLatencyRequirements() {}

void UserPlaneLatencyRequirements::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UserPlaneLatencyRequirements &o) {
  j = nlohmann::json();
  if (o.maxAllowedUpLatIsSet())
    j["maxAllowedUpLat"] = o.m_MaxAllowedUpLat;
  if (o.upLatPreferIsSet())
    j["upLatPrefer"] = o.m_UpLatPrefer;
}

void from_json(const nlohmann::json &j, UserPlaneLatencyRequirements &o) {
  if (j.find("maxAllowedUpLat") != j.end()) {
    j.at("maxAllowedUpLat").get_to(o.m_MaxAllowedUpLat);
    o.m_MaxAllowedUpLatIsSet = true;
  }
  if (j.find("upLatPrefer") != j.end()) {
    j.at("upLatPrefer").get_to(o.m_UpLatPrefer);
    o.m_UpLatPreferIsSet = true;
  }
}

int32_t UserPlaneLatencyRequirements::getMaxAllowedUpLat() const {
  return m_MaxAllowedUpLat;
}
void UserPlaneLatencyRequirements::setMaxAllowedUpLat(int32_t const value) {
  m_MaxAllowedUpLat = value;
  m_MaxAllowedUpLatIsSet = true;
}
bool UserPlaneLatencyRequirements::maxAllowedUpLatIsSet() const {
  return m_MaxAllowedUpLatIsSet;
}
void UserPlaneLatencyRequirements::unsetMaxAllowedUpLat() {
  m_MaxAllowedUpLatIsSet = false;
}
int32_t UserPlaneLatencyRequirements::getUpLatPrefer() const {
  return m_UpLatPrefer;
}
void UserPlaneLatencyRequirements::setUpLatPrefer(int32_t const value) {
  m_UpLatPrefer = value;
  m_UpLatPreferIsSet = true;
}
bool UserPlaneLatencyRequirements::upLatPreferIsSet() const {
  return m_UpLatPreferIsSet;
}
void UserPlaneLatencyRequirements::unsetUpLatPrefer() {
  m_UpLatPreferIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
