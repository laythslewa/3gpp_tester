/**
 * Nudm_MT
 * UDM MT Service. © 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI,
 * TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * LocationInfoRequest.h
 *
 * Represents information to be sent in a location information request. It
 * contains the requested information, i.e. current location, local time zone,
 * RAT type, or serving node identity only.
 */

#ifndef LocationInfoRequest_H_
#define LocationInfoRequest_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents information to be sent in a location information request. It
/// contains the requested information, i.e. current location, local time zone,
/// RAT type, or serving node identity only.
/// </summary>
class LocationInfoRequest {
public:
  LocationInfoRequest();
  virtual ~LocationInfoRequest();

  void validate();

  /////////////////////////////////////////////
  /// LocationInfoRequest members

  /// <summary>
  ///
  /// </summary>
  bool isReq5gsLoc() const;
  void setReq5gsLoc(bool const value);
  bool req5gsLocIsSet() const;
  void unsetReq5gsLoc();
  /// <summary>
  ///
  /// </summary>
  bool isReqCurrentLoc() const;
  void setReqCurrentLoc(bool const value);
  bool reqCurrentLocIsSet() const;
  void unsetReqCurrentLoc();
  /// <summary>
  ///
  /// </summary>
  bool isReqRatType() const;
  void setReqRatType(bool const value);
  bool reqRatTypeIsSet() const;
  void unsetReqRatType();
  /// <summary>
  ///
  /// </summary>
  bool isReqTimeZone() const;
  void setReqTimeZone(bool const value);
  bool reqTimeZoneIsSet() const;
  void unsetReqTimeZone();
  /// <summary>
  ///
  /// </summary>
  bool isReqServingNode() const;
  void setReqServingNode(bool const value);
  bool reqServingNodeIsSet() const;
  void unsetReqServingNode();
  /// <summary>
  /// A string used to indicate the features supported by an API that is used as
  /// defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a
  /// bitmask indicating supported features in hexadecimal representation Each
  /// character in the string shall take a value of \&quot;0\&quot; to
  /// \&quot;9\&quot;, \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to
  /// \&quot;F\&quot; and shall represent the support of 4 features as described
  /// in table 5.2.2-3. The most significant character representing the
  /// highest-numbered features shall appear first in the string, and the
  /// character representing features 1 to 4 shall appear last in the string.
  /// The list of features and their numbering (starting with 1) are defined
  /// separately for each API. If the string contains a lower number of
  /// characters than there are defined features for an API, all features that
  /// would be represented by characters that are not present in the string are
  /// not supported
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const &value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();

  friend void to_json(nlohmann::json &j, const LocationInfoRequest &o);
  friend void from_json(const nlohmann::json &j, LocationInfoRequest &o);

protected:
  bool m_Req5gsLoc;
  bool m_Req5gsLocIsSet;
  bool m_ReqCurrentLoc;
  bool m_ReqCurrentLocIsSet;
  bool m_ReqRatType;
  bool m_ReqRatTypeIsSet;
  bool m_ReqTimeZone;
  bool m_ReqTimeZoneIsSet;
  bool m_ReqServingNode;
  bool m_ReqServingNodeIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* LocationInfoRequest_H_ */
