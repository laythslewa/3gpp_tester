/**
 * Namf_Location
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IndividualUEContextDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

IndividualUEContextDocumentApiImpl::IndividualUEContextDocumentApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : IndividualUEContextDocumentApi(rtr) {}

void IndividualUEContextDocumentApiImpl::cancel_location(
    const std::string &ueContextId, const CancelPosInfo &cancelPosInfo,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualUEContextDocumentApiImpl::provide_location_info(
    const std::string &ueContextId, const RequestLocInfo &requestLocInfo,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualUEContextDocumentApiImpl::provide_positioning_info(
    const std::string &ueContextId, const RequestPosInfo &requestPosInfo,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
