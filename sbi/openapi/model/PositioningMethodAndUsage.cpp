/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PositioningMethodAndUsage.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PositioningMethodAndUsage::PositioningMethodAndUsage() {
  m_MethodCode = 0;
  m_MethodCodeIsSet = false;
}

PositioningMethodAndUsage::~PositioningMethodAndUsage() {}

void PositioningMethodAndUsage::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PositioningMethodAndUsage &o) {
  j = nlohmann::json();
  j["method"] = o.m_Method;
  j["mode"] = o.m_Mode;
  j["usage"] = o.m_Usage;
  if (o.methodCodeIsSet())
    j["methodCode"] = o.m_MethodCode;
}

void from_json(const nlohmann::json &j, PositioningMethodAndUsage &o) {
  j.at("method").get_to(o.m_Method);
  j.at("mode").get_to(o.m_Mode);
  j.at("usage").get_to(o.m_Usage);
  if (j.find("methodCode") != j.end()) {
    j.at("methodCode").get_to(o.m_MethodCode);
    o.m_MethodCodeIsSet = true;
  }
}

PositioningMethod PositioningMethodAndUsage::getMethod() const {
  return m_Method;
}
void PositioningMethodAndUsage::setMethod(PositioningMethod const &value) {
  m_Method = value;
}
PositioningMode PositioningMethodAndUsage::getMode() const { return m_Mode; }
void PositioningMethodAndUsage::setMode(PositioningMode const &value) {
  m_Mode = value;
}
Usage PositioningMethodAndUsage::getUsage() const { return m_Usage; }
void PositioningMethodAndUsage::setUsage(Usage const &value) {
  m_Usage = value;
}
int32_t PositioningMethodAndUsage::getMethodCode() const {
  return m_MethodCode;
}
void PositioningMethodAndUsage::setMethodCode(int32_t const value) {
  m_MethodCode = value;
  m_MethodCodeIsSet = true;
}
bool PositioningMethodAndUsage::methodCodeIsSet() const {
  return m_MethodCodeIsSet;
}
void PositioningMethodAndUsage::unsetMethodCode() { m_MethodCodeIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
