/**
 * 3gpp-lpi-pp
 * API for Location Privacy Indication Parameters Provisioning. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * LPIParametersProvisioningsApiImpl.h
 *
 *
 */

#ifndef LPI_PARAMETERS_PROVISIONINGS_API_IMPL_H_
#define LPI_PARAMETERS_PROVISIONINGS_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <LPIParametersProvisioningsApi.h>

#include <pistache/optional.h>

#include "LpiParametersProvision.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class LPIParametersProvisioningsApiImpl
    : public org::openapitools::server::api::LPIParametersProvisioningsApi {
public:
  LPIParametersProvisioningsApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~LPIParametersProvisioningsApiImpl() {}

  void af_id_provisioned_lpis_get(const std::string &afId,
                                  Pistache::Http::ResponseWriter &response);
  void af_id_provisioned_lpis_post(
      const std::string &afId,
      const LpiParametersProvision &lpiParametersProvision,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif