/**
 * Namf_Location
 * AMF Location Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IndividualUEContextDocumentApi.h
 *
 *
 */

#ifndef IndividualUEContextDocumentApi_H_
#define IndividualUEContextDocumentApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "CancelPosInfo.h"
#include "ProblemDetails.h"
#include "ProvideLocInfo.h"
#include "ProvidePosInfo.h"
#include "RedirectResponse.h"
#include "RequestLocInfo.h"
#include "RequestPosInfo.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualUEContextDocumentApi {
public:
  IndividualUEContextDocumentApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IndividualUEContextDocumentApi() {}
  void init();

  const std::string base = "/namf-loc/v1";

private:
  void setupRoutes();

  void cancel_location_handler(const Pistache::Rest::Request &request,
                               Pistache::Http::ResponseWriter response);
  void provide_location_info_handler(const Pistache::Rest::Request &request,
                                     Pistache::Http::ResponseWriter response);
  void
  provide_positioning_info_handler(const Pistache::Rest::Request &request,
                                   Pistache::Http::ResponseWriter response);
  void individual_ue_context_document_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Namf_Location CancelLocation service operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueContextId">UE Context Identifier</param>
  /// <param name="cancelPosInfo"></param>
  virtual void cancel_location(const std::string &ueContextId,
                               const CancelPosInfo &cancelPosInfo,
                               Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Namf_Location ProvideLocationInfo service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueContextId">UE Context Identifier</param>
  /// <param name="requestLocInfo"></param>
  virtual void
  provide_location_info(const std::string &ueContextId,
                        const RequestLocInfo &requestLocInfo,
                        Pistache::Http::ResponseWriter &response) = 0;

  /// <summary>
  /// Namf_Location ProvidePositioningInfo service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueContextId">UE Context Identifier</param>
  /// <param name="requestPosInfo"></param>
  virtual void
  provide_positioning_info(const std::string &ueContextId,
                           const RequestPosInfo &requestPosInfo,
                           Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IndividualUEContextDocumentApi_H_ */
