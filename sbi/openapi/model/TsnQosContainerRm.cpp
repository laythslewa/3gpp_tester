/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TsnQosContainerRm.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TsnQosContainerRm::TsnQosContainerRm() {
  m_MaxTscBurstSize = 0;
  m_MaxTscBurstSizeIsSet = false;
  m_TscPackDelay = 0;
  m_TscPackDelayIsSet = false;
  m_TscPrioLevel = 0;
  m_TscPrioLevelIsSet = false;
}

TsnQosContainerRm::~TsnQosContainerRm() {}

void TsnQosContainerRm::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TsnQosContainerRm &o) {
  j = nlohmann::json();
  if (o.maxTscBurstSizeIsSet())
    j["maxTscBurstSize"] = o.m_MaxTscBurstSize;
  if (o.tscPackDelayIsSet())
    j["tscPackDelay"] = o.m_TscPackDelay;
  if (o.tscPrioLevelIsSet())
    j["tscPrioLevel"] = o.m_TscPrioLevel;
}

void from_json(const nlohmann::json &j, TsnQosContainerRm &o) {
  if (j.find("maxTscBurstSize") != j.end()) {
    j.at("maxTscBurstSize").get_to(o.m_MaxTscBurstSize);
    o.m_MaxTscBurstSizeIsSet = true;
  }
  if (j.find("tscPackDelay") != j.end()) {
    j.at("tscPackDelay").get_to(o.m_TscPackDelay);
    o.m_TscPackDelayIsSet = true;
  }
  if (j.find("tscPrioLevel") != j.end()) {
    j.at("tscPrioLevel").get_to(o.m_TscPrioLevel);
    o.m_TscPrioLevelIsSet = true;
  }
}

int32_t TsnQosContainerRm::getMaxTscBurstSize() const {
  return m_MaxTscBurstSize;
}
void TsnQosContainerRm::setMaxTscBurstSize(int32_t const value) {
  m_MaxTscBurstSize = value;
  m_MaxTscBurstSizeIsSet = true;
}
bool TsnQosContainerRm::maxTscBurstSizeIsSet() const {
  return m_MaxTscBurstSizeIsSet;
}
void TsnQosContainerRm::unsetMaxTscBurstSize() {
  m_MaxTscBurstSizeIsSet = false;
}
int32_t TsnQosContainerRm::getTscPackDelay() const { return m_TscPackDelay; }
void TsnQosContainerRm::setTscPackDelay(int32_t const value) {
  m_TscPackDelay = value;
  m_TscPackDelayIsSet = true;
}
bool TsnQosContainerRm::tscPackDelayIsSet() const {
  return m_TscPackDelayIsSet;
}
void TsnQosContainerRm::unsetTscPackDelay() { m_TscPackDelayIsSet = false; }
int32_t TsnQosContainerRm::getTscPrioLevel() const { return m_TscPrioLevel; }
void TsnQosContainerRm::setTscPrioLevel(int32_t const value) {
  m_TscPrioLevel = value;
  m_TscPrioLevelIsSet = true;
}
bool TsnQosContainerRm::tscPrioLevelIsSet() const {
  return m_TscPrioLevelIsSet;
}
void TsnQosContainerRm::unsetTscPrioLevel() { m_TscPrioLevelIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
