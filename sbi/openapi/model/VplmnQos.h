/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * VplmnQos.h
 *
 * VPLMN QoS
 */

#ifndef VplmnQos_H_
#define VplmnQos_H_

#include "Ambr.h"
#include "Arp.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// VPLMN QoS
/// </summary>
class VplmnQos {
public:
  VplmnQos();
  virtual ~VplmnQos();

  void validate();

  /////////////////////////////////////////////
  /// VplmnQos members

  /// <summary>
  /// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of
  /// 3GPP TS 23.501, within the range 0 to 255
  /// </summary>
  int32_t getR5qi() const;
  void setR5qi(int32_t const value);
  bool r5qiIsSet() const;
  void unsetr_5qi();
  /// <summary>
  ///
  /// </summary>
  Arp getArp() const;
  void setArp(Arp const &value);
  bool arpIsSet() const;
  void unsetArp();
  /// <summary>
  ///
  /// </summary>
  Ambr getSessionAmbr() const;
  void setSessionAmbr(Ambr const &value);
  bool sessionAmbrIsSet() const;
  void unsetSessionAmbr();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxFbrDl() const;
  void setMaxFbrDl(std::string const &value);
  bool maxFbrDlIsSet() const;
  void unsetMaxFbrDl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getMaxFbrUl() const;
  void setMaxFbrUl(std::string const &value);
  bool maxFbrUlIsSet() const;
  void unsetMaxFbrUl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getGuaFbrDl() const;
  void setGuaFbrDl(std::string const &value);
  bool guaFbrDlIsSet() const;
  void unsetGuaFbrDl();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getGuaFbrUl() const;
  void setGuaFbrUl(std::string const &value);
  bool guaFbrUlIsSet() const;
  void unsetGuaFbrUl();

  friend void to_json(nlohmann::json &j, const VplmnQos &o);
  friend void from_json(const nlohmann::json &j, VplmnQos &o);

protected:
  int32_t m_r_5qi;
  bool m_r_5qiIsSet;
  Arp m_Arp;
  bool m_ArpIsSet;
  Ambr m_SessionAmbr;
  bool m_SessionAmbrIsSet;
  std::string m_MaxFbrDl;
  bool m_MaxFbrDlIsSet;
  std::string m_MaxFbrUl;
  bool m_MaxFbrUlIsSet;
  std::string m_GuaFbrDl;
  bool m_GuaFbrDlIsSet;
  std::string m_GuaFbrUl;
  bool m_GuaFbrUlIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* VplmnQos_H_ */
