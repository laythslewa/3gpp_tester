/**
 * Nhss_imsUEAU
 * Nhss UE Authentication Service for IMS. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "3GAkaAv.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

3GAkaAv ::3GAkaAv() {
  m_Rand = "";
  m_Xres = "";
  m_Autn = "";
  m_Ck = "";
  m_Ik = "";
}

3GAkaAv ::~3GAkaAv() {}

void 3GAkaAv ::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const 3GAkaAv & o) {
  j = nlohmann::json();
  j["rand"] = o.m_Rand;
  j["xres"] = o.m_Xres;
  j["autn"] = o.m_Autn;
  j["ck"] = o.m_Ck;
  j["ik"] = o.m_Ik;
}

void from_json(const nlohmann::json &j, 3GAkaAv & o) {
  j.at("rand").get_to(o.m_Rand);
  j.at("xres").get_to(o.m_Xres);
  j.at("autn").get_to(o.m_Autn);
  j.at("ck").get_to(o.m_Ck);
  j.at("ik").get_to(o.m_Ik);
}

std::string 3GAkaAv ::getRand() const { return m_Rand; }
void 3GAkaAv ::setRand(std::string const &value) { m_Rand = value; }
std::string 3GAkaAv ::getXres() const { return m_Xres; }
void 3GAkaAv ::setXres(std::string const &value) { m_Xres = value; }
std::string 3GAkaAv ::getAutn() const { return m_Autn; }
void 3GAkaAv ::setAutn(std::string const &value) { m_Autn = value; }
std::string 3GAkaAv ::getCk() const { return m_Ck; }
void 3GAkaAv ::setCk(std::string const &value) { m_Ck = value; }
std::string 3GAkaAv ::getIk() const { return m_Ik; }
void 3GAkaAv ::setIk(std::string const &value) { m_Ik = value; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
