/**
 * Naf_EventExposure
 * AF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AfEventExposureNotif.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AfEventExposureNotif::AfEventExposureNotif() { m_NotifId = ""; }

AfEventExposureNotif::~AfEventExposureNotif() {}

void AfEventExposureNotif::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AfEventExposureNotif &o) {
  j = nlohmann::json();
  j["notifId"] = o.m_NotifId;
  j["eventNotifs"] = o.m_EventNotifs;
}

void from_json(const nlohmann::json &j, AfEventExposureNotif &o) {
  j.at("notifId").get_to(o.m_NotifId);
  j.at("eventNotifs").get_to(o.m_EventNotifs);
}

std::string AfEventExposureNotif::getNotifId() const { return m_NotifId; }
void AfEventExposureNotif::setNotifId(std::string const &value) {
  m_NotifId = value;
}
std::vector<AfEventNotification> &AfEventExposureNotif::getEventNotifs() {
  return m_EventNotifs;
}
void AfEventExposureNotif::setEventNotifs(
    std::vector<AfEventNotification> const &value) {
  m_EventNotifs = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
