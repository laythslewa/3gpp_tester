/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AmfSubscriptionInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AmfSubscriptionInfo::AmfSubscriptionInfo() {
  m_AmfInstanceId = "";
  m_SubscriptionId = "";
  m_SubsChangeNotifyCorrelationId = "";
  m_SubsChangeNotifyCorrelationIdIsSet = false;
  m_ContextInfoIsSet = false;
}

AmfSubscriptionInfo::~AmfSubscriptionInfo() {}

void AmfSubscriptionInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AmfSubscriptionInfo &o) {
  j = nlohmann::json();
  j["amfInstanceId"] = o.m_AmfInstanceId;
  j["subscriptionId"] = o.m_SubscriptionId;
  if (o.subsChangeNotifyCorrelationIdIsSet())
    j["subsChangeNotifyCorrelationId"] = o.m_SubsChangeNotifyCorrelationId;
  if (o.contextInfoIsSet())
    j["contextInfo"] = o.m_ContextInfo;
}

void from_json(const nlohmann::json &j, AmfSubscriptionInfo &o) {
  j.at("amfInstanceId").get_to(o.m_AmfInstanceId);
  j.at("subscriptionId").get_to(o.m_SubscriptionId);
  if (j.find("subsChangeNotifyCorrelationId") != j.end()) {
    j.at("subsChangeNotifyCorrelationId")
        .get_to(o.m_SubsChangeNotifyCorrelationId);
    o.m_SubsChangeNotifyCorrelationIdIsSet = true;
  }
  if (j.find("contextInfo") != j.end()) {
    j.at("contextInfo").get_to(o.m_ContextInfo);
    o.m_ContextInfoIsSet = true;
  }
}

std::string AmfSubscriptionInfo::getAmfInstanceId() const {
  return m_AmfInstanceId;
}
void AmfSubscriptionInfo::setAmfInstanceId(std::string const &value) {
  m_AmfInstanceId = value;
}
std::string AmfSubscriptionInfo::getSubscriptionId() const {
  return m_SubscriptionId;
}
void AmfSubscriptionInfo::setSubscriptionId(std::string const &value) {
  m_SubscriptionId = value;
}
std::string AmfSubscriptionInfo::getSubsChangeNotifyCorrelationId() const {
  return m_SubsChangeNotifyCorrelationId;
}
void AmfSubscriptionInfo::setSubsChangeNotifyCorrelationId(
    std::string const &value) {
  m_SubsChangeNotifyCorrelationId = value;
  m_SubsChangeNotifyCorrelationIdIsSet = true;
}
bool AmfSubscriptionInfo::subsChangeNotifyCorrelationIdIsSet() const {
  return m_SubsChangeNotifyCorrelationIdIsSet;
}
void AmfSubscriptionInfo::unsetSubsChangeNotifyCorrelationId() {
  m_SubsChangeNotifyCorrelationIdIsSet = false;
}
ContextInfo AmfSubscriptionInfo::getContextInfo() const {
  return m_ContextInfo;
}
void AmfSubscriptionInfo::setContextInfo(ContextInfo const &value) {
  m_ContextInfo = value;
  m_ContextInfoIsSet = true;
}
bool AmfSubscriptionInfo::contextInfoIsSet() const {
  return m_ContextInfoIsSet;
}
void AmfSubscriptionInfo::unsetContextInfo() { m_ContextInfoIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
