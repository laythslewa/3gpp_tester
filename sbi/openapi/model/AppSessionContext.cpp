/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppSessionContext.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AppSessionContext::AppSessionContext() {
  m_AscReqDataIsSet = false;
  m_AscRespDataIsSet = false;
  m_EvsNotifIsSet = false;
}

AppSessionContext::~AppSessionContext() {}

void AppSessionContext::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AppSessionContext &o) {
  j = nlohmann::json();
  if (o.ascReqDataIsSet())
    j["ascReqData"] = o.m_AscReqData;
  if (o.ascRespDataIsSet())
    j["ascRespData"] = o.m_AscRespData;
  if (o.evsNotifIsSet())
    j["evsNotif"] = o.m_EvsNotif;
}

void from_json(const nlohmann::json &j, AppSessionContext &o) {
  if (j.find("ascReqData") != j.end()) {
    j.at("ascReqData").get_to(o.m_AscReqData);
    o.m_AscReqDataIsSet = true;
  }
  if (j.find("ascRespData") != j.end()) {
    j.at("ascRespData").get_to(o.m_AscRespData);
    o.m_AscRespDataIsSet = true;
  }
  if (j.find("evsNotif") != j.end()) {
    j.at("evsNotif").get_to(o.m_EvsNotif);
    o.m_EvsNotifIsSet = true;
  }
}

AppSessionContextReqData AppSessionContext::getAscReqData() const {
  return m_AscReqData;
}
void AppSessionContext::setAscReqData(AppSessionContextReqData const &value) {
  m_AscReqData = value;
  m_AscReqDataIsSet = true;
}
bool AppSessionContext::ascReqDataIsSet() const { return m_AscReqDataIsSet; }
void AppSessionContext::unsetAscReqData() { m_AscReqDataIsSet = false; }
AppSessionContextRespData AppSessionContext::getAscRespData() const {
  return m_AscRespData;
}
void AppSessionContext::setAscRespData(AppSessionContextRespData const &value) {
  m_AscRespData = value;
  m_AscRespDataIsSet = true;
}
bool AppSessionContext::ascRespDataIsSet() const { return m_AscRespDataIsSet; }
void AppSessionContext::unsetAscRespData() { m_AscRespDataIsSet = false; }
EventsNotification AppSessionContext::getEvsNotif() const { return m_EvsNotif; }
void AppSessionContext::setEvsNotif(EventsNotification const &value) {
  m_EvsNotif = value;
  m_EvsNotifIsSet = true;
}
bool AppSessionContext::evsNotifIsSet() const { return m_EvsNotifIsSet; }
void AppSessionContext::unsetEvsNotif() { m_EvsNotifIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
