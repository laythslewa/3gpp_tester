/**
 * 3gpp-time-sync-exposure
 * API for time synchronization exposure. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TimeSyncCapability.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TimeSyncCapability::TimeSyncCapability() {
  m_DisMethodsIsSet = false;
  m_GmCapableIsSet = false;
  m_ClockQua = "";
  m_ClockQuaIsSet = false;
  m_Gpsi = "";
  m_GpsiIsSet = false;
  m_SuppFeat = "";
}

TimeSyncCapability::~TimeSyncCapability() {}

void TimeSyncCapability::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TimeSyncCapability &o) {
  j = nlohmann::json();
  if (o.disMethodsIsSet())
    j["disMethods"] = o.m_DisMethods;
  if (o.gmCapableIsSet())
    j["gmCapable"] = o.m_GmCapable;
  if (o.clockQuaIsSet())
    j["clockQua"] = o.m_ClockQua;
  if (o.gpsiIsSet())
    j["Gpsi"] = o.m_Gpsi;
  j["suppFeat"] = o.m_SuppFeat;
}

void from_json(const nlohmann::json &j, TimeSyncCapability &o) {
  if (j.find("disMethods") != j.end()) {
    j.at("disMethods").get_to(o.m_DisMethods);
    o.m_DisMethodsIsSet = true;
  }
  if (j.find("gmCapable") != j.end()) {
    j.at("gmCapable").get_to(o.m_GmCapable);
    o.m_GmCapableIsSet = true;
  }
  if (j.find("clockQua") != j.end()) {
    j.at("clockQua").get_to(o.m_ClockQua);
    o.m_ClockQuaIsSet = true;
  }
  if (j.find("Gpsi") != j.end()) {
    j.at("Gpsi").get_to(o.m_Gpsi);
    o.m_GpsiIsSet = true;
  }
  j.at("suppFeat").get_to(o.m_SuppFeat);
}

DistributionMethod TimeSyncCapability::getDisMethods() const {
  return m_DisMethods;
}
void TimeSyncCapability::setDisMethods(DistributionMethod const &value) {
  m_DisMethods = value;
  m_DisMethodsIsSet = true;
}
bool TimeSyncCapability::disMethodsIsSet() const { return m_DisMethodsIsSet; }
void TimeSyncCapability::unsetDisMethods() { m_DisMethodsIsSet = false; }
GmCapable TimeSyncCapability::getGmCapable() const { return m_GmCapable; }
void TimeSyncCapability::setGmCapable(GmCapable const &value) {
  m_GmCapable = value;
  m_GmCapableIsSet = true;
}
bool TimeSyncCapability::gmCapableIsSet() const { return m_GmCapableIsSet; }
void TimeSyncCapability::unsetGmCapable() { m_GmCapableIsSet = false; }
std::string TimeSyncCapability::getClockQua() const { return m_ClockQua; }
void TimeSyncCapability::setClockQua(std::string const &value) {
  m_ClockQua = value;
  m_ClockQuaIsSet = true;
}
bool TimeSyncCapability::clockQuaIsSet() const { return m_ClockQuaIsSet; }
void TimeSyncCapability::unsetClockQua() { m_ClockQuaIsSet = false; }
std::string TimeSyncCapability::getGpsi() const { return m_Gpsi; }
void TimeSyncCapability::setGpsi(std::string const &value) {
  m_Gpsi = value;
  m_GpsiIsSet = true;
}
bool TimeSyncCapability::gpsiIsSet() const { return m_GpsiIsSet; }
void TimeSyncCapability::unsetGpsi() { m_GpsiIsSet = false; }
std::string TimeSyncCapability::getSuppFeat() const { return m_SuppFeat; }
void TimeSyncCapability::setSuppFeat(std::string const &value) {
  m_SuppFeat = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
