/**
 * 3gpp-as-session-with-qos
 * API for setting us an AS session with required QoS. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UserPlaneNotificationData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UserPlaneNotificationData::UserPlaneNotificationData() { m_Transaction = ""; }

UserPlaneNotificationData::~UserPlaneNotificationData() {}

void UserPlaneNotificationData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UserPlaneNotificationData &o) {
  j = nlohmann::json();
  j["transaction"] = o.m_Transaction;
  j["eventReports"] = o.m_EventReports;
}

void from_json(const nlohmann::json &j, UserPlaneNotificationData &o) {
  j.at("transaction").get_to(o.m_Transaction);
  j.at("eventReports").get_to(o.m_EventReports);
}

std::string UserPlaneNotificationData::getTransaction() const {
  return m_Transaction;
}
void UserPlaneNotificationData::setTransaction(std::string const &value) {
  m_Transaction = value;
}
std::vector<UserPlaneEventReport> &
UserPlaneNotificationData::getEventReports() {
  return m_EventReports;
}
void UserPlaneNotificationData::setEventReports(
    std::vector<UserPlaneEventReport> const &value) {
  m_EventReports = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
