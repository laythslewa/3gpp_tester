/**
 * TS 29.122 Common Data Types
 * Data types applicable to several APIs. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Event.h
 *
 * Possible values are - SESSION_TERMINATION: Indicates that Rx session is
 * terminated. - LOSS_OF_BEARER : Indicates a loss of a bearer. -
 * RECOVERY_OF_BEARER: Indicates a recovery of a bearer. - RELEASE_OF_BEARER:
 * Indicates a release of a bearer. - USAGE_REPORT: Indicates the usage report
 * event.  - FAILED_RESOURCES_ALLOCATION: Indicates the resource allocation is
 * failed.
 */

#ifndef Event_H_
#define Event_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Possible values are - SESSION_TERMINATION: Indicates that Rx session is
/// terminated. - LOSS_OF_BEARER : Indicates a loss of a bearer. -
/// RECOVERY_OF_BEARER: Indicates a recovery of a bearer. - RELEASE_OF_BEARER:
/// Indicates a release of a bearer. - USAGE_REPORT: Indicates the usage report
/// event.  - FAILED_RESOURCES_ALLOCATION: Indicates the resource allocation is
/// failed.
/// </summary>
class Event {
public:
  Event();
  virtual ~Event();

  void validate();

  /////////////////////////////////////////////
  /// Event members

  friend void to_json(nlohmann::json &j, const Event &o);
  friend void from_json(const nlohmann::json &j, Event &o);

protected:
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Event_H_ */
