/**
 * SS_LocationReporting
 * API for SEAL Location Reporting Configuration. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LocationReportConfiguration.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LocationReportConfiguration::LocationReportConfiguration() {
  m_ValServerId = "";
  m_ImmRep = false;
  m_ImmRepIsSet = false;
  m_MonDur = "";
  m_MonDurIsSet = false;
  m_RepPeriod = 0;
  m_RepPeriodIsSet = false;
  m_AccuracyIsSet = false;
  m_SuppFeat = "";
  m_SuppFeatIsSet = false;
}

LocationReportConfiguration::~LocationReportConfiguration() {}

void LocationReportConfiguration::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LocationReportConfiguration &o) {
  j = nlohmann::json();
  j["valServerId"] = o.m_ValServerId;
  j["valTgtUe"] = o.m_ValTgtUe;
  if (o.immRepIsSet())
    j["immRep"] = o.m_ImmRep;
  if (o.monDurIsSet())
    j["monDur"] = o.m_MonDur;
  if (o.repPeriodIsSet())
    j["repPeriod"] = o.m_RepPeriod;
  if (o.accuracyIsSet())
    j["accuracy"] = o.m_Accuracy;
  if (o.suppFeatIsSet())
    j["suppFeat"] = o.m_SuppFeat;
}

void from_json(const nlohmann::json &j, LocationReportConfiguration &o) {
  j.at("valServerId").get_to(o.m_ValServerId);
  j.at("valTgtUe").get_to(o.m_ValTgtUe);
  if (j.find("immRep") != j.end()) {
    j.at("immRep").get_to(o.m_ImmRep);
    o.m_ImmRepIsSet = true;
  }
  if (j.find("monDur") != j.end()) {
    j.at("monDur").get_to(o.m_MonDur);
    o.m_MonDurIsSet = true;
  }
  if (j.find("repPeriod") != j.end()) {
    j.at("repPeriod").get_to(o.m_RepPeriod);
    o.m_RepPeriodIsSet = true;
  }
  if (j.find("accuracy") != j.end()) {
    j.at("accuracy").get_to(o.m_Accuracy);
    o.m_AccuracyIsSet = true;
  }
  if (j.find("suppFeat") != j.end()) {
    j.at("suppFeat").get_to(o.m_SuppFeat);
    o.m_SuppFeatIsSet = true;
  }
}

std::string LocationReportConfiguration::getValServerId() const {
  return m_ValServerId;
}
void LocationReportConfiguration::setValServerId(std::string const &value) {
  m_ValServerId = value;
}
ValTargetUe LocationReportConfiguration::getValTgtUe() const {
  return m_ValTgtUe;
}
void LocationReportConfiguration::setValTgtUe(ValTargetUe const &value) {
  m_ValTgtUe = value;
}
bool LocationReportConfiguration::isImmRep() const { return m_ImmRep; }
void LocationReportConfiguration::setImmRep(bool const value) {
  m_ImmRep = value;
  m_ImmRepIsSet = true;
}
bool LocationReportConfiguration::immRepIsSet() const { return m_ImmRepIsSet; }
void LocationReportConfiguration::unsetImmRep() { m_ImmRepIsSet = false; }
std::string LocationReportConfiguration::getMonDur() const { return m_MonDur; }
void LocationReportConfiguration::setMonDur(std::string const &value) {
  m_MonDur = value;
  m_MonDurIsSet = true;
}
bool LocationReportConfiguration::monDurIsSet() const { return m_MonDurIsSet; }
void LocationReportConfiguration::unsetMonDur() { m_MonDurIsSet = false; }
int32_t LocationReportConfiguration::getRepPeriod() const {
  return m_RepPeriod;
}
void LocationReportConfiguration::setRepPeriod(int32_t const value) {
  m_RepPeriod = value;
  m_RepPeriodIsSet = true;
}
bool LocationReportConfiguration::repPeriodIsSet() const {
  return m_RepPeriodIsSet;
}
void LocationReportConfiguration::unsetRepPeriod() { m_RepPeriodIsSet = false; }
Accuracy LocationReportConfiguration::getAccuracy() const { return m_Accuracy; }
void LocationReportConfiguration::setAccuracy(Accuracy const &value) {
  m_Accuracy = value;
  m_AccuracyIsSet = true;
}
bool LocationReportConfiguration::accuracyIsSet() const {
  return m_AccuracyIsSet;
}
void LocationReportConfiguration::unsetAccuracy() { m_AccuracyIsSet = false; }
std::string LocationReportConfiguration::getSuppFeat() const {
  return m_SuppFeat;
}
void LocationReportConfiguration::setSuppFeat(std::string const &value) {
  m_SuppFeat = value;
  m_SuppFeatIsSet = true;
}
bool LocationReportConfiguration::suppFeatIsSet() const {
  return m_SuppFeatIsSet;
}
void LocationReportConfiguration::unsetSuppFeat() { m_SuppFeatIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
