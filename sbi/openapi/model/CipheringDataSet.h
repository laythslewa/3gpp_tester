/**
 * LMF Broadcast
 * LMF Broadcast Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * CipheringDataSet.h
 *
 * Represents a Ciphering Data Set.
 */

#ifndef CipheringDataSet_H_
#define CipheringDataSet_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a Ciphering Data Set.
/// </summary>
class CipheringDataSet {
public:
  CipheringDataSet();
  virtual ~CipheringDataSet();

  void validate();

  /////////////////////////////////////////////
  /// CipheringDataSet members

  /// <summary>
  /// Ciphering Data Set Identifier.
  /// </summary>
  int32_t getCipheringSetID() const;
  void setCipheringSetID(int32_t const value);
  /// <summary>
  /// Ciphering Key.
  /// </summary>
  std::string getCipheringKey() const;
  void setCipheringKey(std::string const &value);
  /// <summary>
  /// First component of the initial ciphering counter.
  /// </summary>
  std::string getC0() const;
  void setC0(std::string const &value);
  /// <summary>
  /// string with format \&quot;binary\&quot; as defined in OpenAPI
  /// </summary>
  std::string getLtePosSibTypes() const;
  void setLtePosSibTypes(std::string const &value);
  bool ltePosSibTypesIsSet() const;
  void unsetLtePosSibTypes();
  /// <summary>
  /// string with format \&quot;binary\&quot; as defined in OpenAPI
  /// </summary>
  std::string getNrPosSibTypes() const;
  void setNrPosSibTypes(std::string const &value);
  bool nrPosSibTypesIsSet() const;
  void unsetNrPosSibTypes();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getValidityStartTime() const;
  void setValidityStartTime(std::string const &value);
  /// <summary>
  /// Validity Duration of the Ciphering Data Set.
  /// </summary>
  int32_t getValidityDuration() const;
  void setValidityDuration(int32_t const value);
  /// <summary>
  /// string with format \&quot;binary\&quot; as defined in OpenAPI
  /// </summary>
  std::string getTaiList() const;
  void setTaiList(std::string const &value);
  bool taiListIsSet() const;
  void unsetTaiList();

  friend void to_json(nlohmann::json &j, const CipheringDataSet &o);
  friend void from_json(const nlohmann::json &j, CipheringDataSet &o);

protected:
  int32_t m_CipheringSetID;

  std::string m_CipheringKey;

  std::string m_C0;

  std::string m_LtePosSibTypes;
  bool m_LtePosSibTypesIsSet;
  std::string m_NrPosSibTypes;
  bool m_NrPosSibTypesIsSet;
  std::string m_ValidityStartTime;

  int32_t m_ValidityDuration;

  std::string m_TaiList;
  bool m_TaiListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* CipheringDataSet_H_ */
