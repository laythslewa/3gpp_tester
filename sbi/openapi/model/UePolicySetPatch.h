/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UePolicySetPatch.h
 *
 * Contains the UE policy set for a given subscriber.
 */

#ifndef UePolicySetPatch_H_
#define UePolicySetPatch_H_

#include "UePolicySection.h"
#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the UE policy set for a given subscriber.
/// </summary>
class UePolicySetPatch {
public:
  UePolicySetPatch();
  virtual ~UePolicySetPatch();

  void validate();

  /////////////////////////////////////////////
  /// UePolicySetPatch members

  /// <summary>
  /// Contains the UE Policy Sections. The UE Policy Section Identifier is used
  /// as the key of the map.
  /// </summary>
  std::map<std::string, UePolicySection> &getUePolicySections();
  void setUePolicySections(std::map<std::string, UePolicySection> const &value);
  bool uePolicySectionsIsSet() const;
  void unsetUePolicySections();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getUpsis();
  void setUpsis(std::vector<std::string> const &value);
  bool upsisIsSet() const;
  void unsetUpsis();
  /// <summary>
  ///
  /// </summary>
  bool isAndspInd() const;
  void setAndspInd(bool const value);
  bool andspIndIsSet() const;
  void unsetAndspInd();
  /// <summary>
  /// String representing a Permanent Equipment Identifier that may contain - an
  /// IMEI or IMEISV, as specified in clause 6.2 of 3GPP TS 23.003; a MAC
  /// address for a 5G-RG or FN-RG via wireline access, with an indication that
  /// this address cannot be trusted for regulatory purpose if this address
  /// cannot be used as an Equipment Identifier of the FN-RG, as specified in
  /// clause 4.7.7 of 3GPP TS23.316. Examples are imei-012345678901234 or
  /// imeisv-0123456789012345.
  /// </summary>
  std::string getPei() const;
  void setPei(std::string const &value);
  bool peiIsSet() const;
  void unsetPei();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getOsIds();
  void setOsIds(std::vector<std::string> const &value);
  bool osIdsIsSet() const;
  void unsetOsIds();

  friend void to_json(nlohmann::json &j, const UePolicySetPatch &o);
  friend void from_json(const nlohmann::json &j, UePolicySetPatch &o);

protected:
  std::map<std::string, UePolicySection> m_UePolicySections;
  bool m_UePolicySectionsIsSet;
  std::vector<std::string> m_Upsis;
  bool m_UpsisIsSet;
  bool m_AndspInd;
  bool m_AndspIndIsSet;
  std::string m_Pei;
  bool m_PeiIsSet;
  std::vector<std::string> m_OsIds;
  bool m_OsIdsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UePolicySetPatch_H_ */
