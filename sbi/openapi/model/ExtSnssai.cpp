/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ExtSnssai.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ExtSnssai::ExtSnssai() {
  m_Sst = 0;
  m_Sd = "";
  m_SdIsSet = false;
  m_SdRangesIsSet = false;
  m_WildcardSd = false;
  m_WildcardSdIsSet = false;
}

ExtSnssai::~ExtSnssai() {}

void ExtSnssai::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ExtSnssai &o) {
  j = nlohmann::json();
  j["sst"] = o.m_Sst;
  if (o.sdIsSet())
    j["sd"] = o.m_Sd;
  if (o.sdRangesIsSet() || !o.m_SdRanges.empty())
    j["sdRanges"] = o.m_SdRanges;
  if (o.wildcardSdIsSet())
    j["wildcardSd"] = o.m_WildcardSd;
}

void from_json(const nlohmann::json &j, ExtSnssai &o) {
  j.at("sst").get_to(o.m_Sst);
  if (j.find("sd") != j.end()) {
    j.at("sd").get_to(o.m_Sd);
    o.m_SdIsSet = true;
  }
  if (j.find("sdRanges") != j.end()) {
    j.at("sdRanges").get_to(o.m_SdRanges);
    o.m_SdRangesIsSet = true;
  }
  if (j.find("wildcardSd") != j.end()) {
    j.at("wildcardSd").get_to(o.m_WildcardSd);
    o.m_WildcardSdIsSet = true;
  }
}

int32_t ExtSnssai::getSst() const { return m_Sst; }
void ExtSnssai::setSst(int32_t const value) { m_Sst = value; }
std::string ExtSnssai::getSd() const { return m_Sd; }
void ExtSnssai::setSd(std::string const &value) {
  m_Sd = value;
  m_SdIsSet = true;
}
bool ExtSnssai::sdIsSet() const { return m_SdIsSet; }
void ExtSnssai::unsetSd() { m_SdIsSet = false; }
std::vector<SdRange> &ExtSnssai::getSdRanges() { return m_SdRanges; }
void ExtSnssai::setSdRanges(std::vector<SdRange> const &value) {
  m_SdRanges = value;
  m_SdRangesIsSet = true;
}
bool ExtSnssai::sdRangesIsSet() const { return m_SdRangesIsSet; }
void ExtSnssai::unsetSdRanges() { m_SdRangesIsSet = false; }
bool ExtSnssai::isWildcardSd() const { return m_WildcardSd; }
void ExtSnssai::setWildcardSd(bool const value) {
  m_WildcardSd = value;
  m_WildcardSdIsSet = true;
}
bool ExtSnssai::wildcardSdIsSet() const { return m_WildcardSdIsSet; }
void ExtSnssai::unsetWildcardSd() { m_WildcardSdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
