/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "N4Information.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

N4Information::N4Information() {
  m_N4DnaiInfoIsSet = false;
  m_PsaUpfId = "";
  m_PsaUpfIdIsSet = false;
}

N4Information::~N4Information() {}

void N4Information::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const N4Information &o) {
  j = nlohmann::json();
  j["n4MessageType"] = o.m_N4MessageType;
  j["n4MessagePayload"] = o.m_N4MessagePayload;
  if (o.n4DnaiInfoIsSet())
    j["n4DnaiInfo"] = o.m_N4DnaiInfo;
  if (o.psaUpfIdIsSet())
    j["psaUpfId"] = o.m_PsaUpfId;
}

void from_json(const nlohmann::json &j, N4Information &o) {
  j.at("n4MessageType").get_to(o.m_N4MessageType);
  j.at("n4MessagePayload").get_to(o.m_N4MessagePayload);
  if (j.find("n4DnaiInfo") != j.end()) {
    j.at("n4DnaiInfo").get_to(o.m_N4DnaiInfo);
    o.m_N4DnaiInfoIsSet = true;
  }
  if (j.find("psaUpfId") != j.end()) {
    j.at("psaUpfId").get_to(o.m_PsaUpfId);
    o.m_PsaUpfIdIsSet = true;
  }
}

N4MessageType N4Information::getN4MessageType() const {
  return m_N4MessageType;
}
void N4Information::setN4MessageType(N4MessageType const &value) {
  m_N4MessageType = value;
}
RefToBinaryData N4Information::getN4MessagePayload() const {
  return m_N4MessagePayload;
}
void N4Information::setN4MessagePayload(RefToBinaryData const &value) {
  m_N4MessagePayload = value;
}
DnaiInformation N4Information::getN4DnaiInfo() const { return m_N4DnaiInfo; }
void N4Information::setN4DnaiInfo(DnaiInformation const &value) {
  m_N4DnaiInfo = value;
  m_N4DnaiInfoIsSet = true;
}
bool N4Information::n4DnaiInfoIsSet() const { return m_N4DnaiInfoIsSet; }
void N4Information::unsetN4DnaiInfo() { m_N4DnaiInfoIsSet = false; }
std::string N4Information::getPsaUpfId() const { return m_PsaUpfId; }
void N4Information::setPsaUpfId(std::string const &value) {
  m_PsaUpfId = value;
  m_PsaUpfIdIsSet = true;
}
bool N4Information::psaUpfIdIsSet() const { return m_PsaUpfIdIsSet; }
void N4Information::unsetPsaUpfId() { m_PsaUpfIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
