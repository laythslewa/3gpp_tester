/**
 * Npcf_UEPolicyControl
 * UE Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualUEPolicyAssociationDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_UE_POLICY_ASSOCIATION_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_UE_POLICY_ASSOCIATION_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualUEPolicyAssociationDocumentApi.h>

#include <pistache/optional.h>

#include "PolicyAssociation.h"
#include "PolicyAssociationUpdateRequest.h"
#include "PolicyUpdate.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualUEPolicyAssociationDocumentApiImpl
    : public org::openapitools::server::api::
          IndividualUEPolicyAssociationDocumentApi {
public:
  IndividualUEPolicyAssociationDocumentApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualUEPolicyAssociationDocumentApiImpl() {}

  void delete_individual_ue_policy_association(
      const std::string &polAssoId, Pistache::Http::ResponseWriter &response);
  void read_individual_ue_policy_association(
      const std::string &polAssoId, Pistache::Http::ResponseWriter &response);
  void report_observed_event_triggers_for_individual_ue_policy_association(
      const std::string &polAssoId,
      const PolicyAssociationUpdateRequest &policyAssociationUpdateRequest,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif