/**
 * Nnef_SMContext
 * Nnef SMContext Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SmContextUpdateData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SmContextUpdateData::SmContextUpdateData() {
  m_DlNiddEndPoint = "";
  m_DlNiddEndPointIsSet = false;
  m_NotificationUri = "";
  m_NotificationUriIsSet = false;
  m_SmContextConfigIsSet = false;
}

SmContextUpdateData::~SmContextUpdateData() {}

void SmContextUpdateData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SmContextUpdateData &o) {
  j = nlohmann::json();
  if (o.dlNiddEndPointIsSet())
    j["dlNiddEndPoint"] = o.m_DlNiddEndPoint;
  if (o.notificationUriIsSet())
    j["notificationUri"] = o.m_NotificationUri;
  if (o.smContextConfigIsSet())
    j["smContextConfig"] = o.m_SmContextConfig;
}

void from_json(const nlohmann::json &j, SmContextUpdateData &o) {
  if (j.find("dlNiddEndPoint") != j.end()) {
    j.at("dlNiddEndPoint").get_to(o.m_DlNiddEndPoint);
    o.m_DlNiddEndPointIsSet = true;
  }
  if (j.find("notificationUri") != j.end()) {
    j.at("notificationUri").get_to(o.m_NotificationUri);
    o.m_NotificationUriIsSet = true;
  }
  if (j.find("smContextConfig") != j.end()) {
    j.at("smContextConfig").get_to(o.m_SmContextConfig);
    o.m_SmContextConfigIsSet = true;
  }
}

std::string SmContextUpdateData::getDlNiddEndPoint() const {
  return m_DlNiddEndPoint;
}
void SmContextUpdateData::setDlNiddEndPoint(std::string const &value) {
  m_DlNiddEndPoint = value;
  m_DlNiddEndPointIsSet = true;
}
bool SmContextUpdateData::dlNiddEndPointIsSet() const {
  return m_DlNiddEndPointIsSet;
}
void SmContextUpdateData::unsetDlNiddEndPoint() {
  m_DlNiddEndPointIsSet = false;
}
std::string SmContextUpdateData::getNotificationUri() const {
  return m_NotificationUri;
}
void SmContextUpdateData::setNotificationUri(std::string const &value) {
  m_NotificationUri = value;
  m_NotificationUriIsSet = true;
}
bool SmContextUpdateData::notificationUriIsSet() const {
  return m_NotificationUriIsSet;
}
void SmContextUpdateData::unsetNotificationUri() {
  m_NotificationUriIsSet = false;
}
SmContextConfiguration SmContextUpdateData::getSmContextConfig() const {
  return m_SmContextConfig;
}
void SmContextUpdateData::setSmContextConfig(
    SmContextConfiguration const &value) {
  m_SmContextConfig = value;
  m_SmContextConfigIsSet = true;
}
bool SmContextUpdateData::smContextConfigIsSet() const {
  return m_SmContextConfigIsSet;
}
void SmContextUpdateData::unsetSmContextConfig() {
  m_SmContextConfigIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
