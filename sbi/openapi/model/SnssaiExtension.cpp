/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SnssaiExtension.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SnssaiExtension::SnssaiExtension() {
  m_SdRangesIsSet = false;
  m_WildcardSd = false;
  m_WildcardSdIsSet = false;
}

SnssaiExtension::~SnssaiExtension() {}

void SnssaiExtension::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SnssaiExtension &o) {
  j = nlohmann::json();
  if (o.sdRangesIsSet() || !o.m_SdRanges.empty())
    j["sdRanges"] = o.m_SdRanges;
  if (o.wildcardSdIsSet())
    j["wildcardSd"] = o.m_WildcardSd;
}

void from_json(const nlohmann::json &j, SnssaiExtension &o) {
  if (j.find("sdRanges") != j.end()) {
    j.at("sdRanges").get_to(o.m_SdRanges);
    o.m_SdRangesIsSet = true;
  }
  if (j.find("wildcardSd") != j.end()) {
    j.at("wildcardSd").get_to(o.m_WildcardSd);
    o.m_WildcardSdIsSet = true;
  }
}

std::vector<SdRange> &SnssaiExtension::getSdRanges() { return m_SdRanges; }
void SnssaiExtension::setSdRanges(std::vector<SdRange> const &value) {
  m_SdRanges = value;
  m_SdRangesIsSet = true;
}
bool SnssaiExtension::sdRangesIsSet() const { return m_SdRangesIsSet; }
void SnssaiExtension::unsetSdRanges() { m_SdRangesIsSet = false; }
bool SnssaiExtension::isWildcardSd() const { return m_WildcardSd; }
void SnssaiExtension::setWildcardSd(bool const value) {
  m_WildcardSd = value;
  m_WildcardSdIsSet = true;
}
bool SnssaiExtension::wildcardSdIsSet() const { return m_WildcardSdIsSet; }
void SnssaiExtension::unsetWildcardSd() { m_WildcardSdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
