/**
 * VAE_HDMapDynamicInfo
 * API for VAE HDMapDynamicInfo Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NearbyUeInfo.h
 *
 * Represents the informaiotn of nearby UEs.
 */

#ifndef NearbyUeInfo_H_
#define NearbyUeInfo_H_

#include "UserLocation.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the informaiotn of nearby UEs.
/// </summary>
class NearbyUeInfo {
public:
  NearbyUeInfo();
  virtual ~NearbyUeInfo();

  void validate();

  /////////////////////////////////////////////
  /// NearbyUeInfo members

  /// <summary>
  /// Represents the identifier of the V2X UE.
  /// </summary>
  std::string getNearbyUeId() const;
  void setNearbyUeId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  UserLocation getLocation() const;
  void setLocation(UserLocation const &value);
  /// <summary>
  /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
  /// </summary>
  int32_t getDistance() const;
  void setDistance(int32_t const value);

  friend void to_json(nlohmann::json &j, const NearbyUeInfo &o);
  friend void from_json(const nlohmann::json &j, NearbyUeInfo &o);

protected:
  std::string m_NearbyUeId;

  UserLocation m_Location;

  int32_t m_Distance;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NearbyUeInfo_H_ */
