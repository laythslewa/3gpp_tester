/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * QosSustainabilityInfo.h
 *
 * Represents the QoS Sustainability information.
 */

#ifndef QosSustainabilityInfo_H_
#define QosSustainabilityInfo_H_

#include "NetworkAreaInfo.h"
#include "RetainabilityThreshold.h"
#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the QoS Sustainability information.
/// </summary>
class QosSustainabilityInfo {
public:
  QosSustainabilityInfo();
  virtual ~QosSustainabilityInfo();

  void validate();

  /////////////////////////////////////////////
  /// QosSustainabilityInfo members

  /// <summary>
  ///
  /// </summary>
  NetworkAreaInfo getAreaInfo() const;
  void setAreaInfo(NetworkAreaInfo const &value);
  bool areaInfoIsSet() const;
  void unsetAreaInfo();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getStartTs() const;
  void setStartTs(std::string const &value);
  bool startTsIsSet() const;
  void unsetStartTs();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getEndTs() const;
  void setEndTs(std::string const &value);
  bool endTsIsSet() const;
  void unsetEndTs();
  /// <summary>
  ///
  /// </summary>
  RetainabilityThreshold getQosFlowRetThd() const;
  void setQosFlowRetThd(RetainabilityThreshold const &value);
  bool qosFlowRetThdIsSet() const;
  void unsetQosFlowRetThd();
  /// <summary>
  /// String representing a bit rate that shall be formatted as follows.
  /// </summary>
  std::string getRanUeThrouThd() const;
  void setRanUeThrouThd(std::string const &value);
  bool ranUeThrouThdIsSet() const;
  void unsetRanUeThrouThd();
  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const &value);
  bool snssaiIsSet() const;
  void unsetSnssai();
  /// <summary>
  /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
  /// </summary>
  int32_t getConfidence() const;
  void setConfidence(int32_t const value);
  bool confidenceIsSet() const;
  void unsetConfidence();

  friend void to_json(nlohmann::json &j, const QosSustainabilityInfo &o);
  friend void from_json(const nlohmann::json &j, QosSustainabilityInfo &o);

protected:
  NetworkAreaInfo m_AreaInfo;
  bool m_AreaInfoIsSet;
  std::string m_StartTs;
  bool m_StartTsIsSet;
  std::string m_EndTs;
  bool m_EndTsIsSet;
  RetainabilityThreshold m_QosFlowRetThd;
  bool m_QosFlowRetThdIsSet;
  std::string m_RanUeThrouThd;
  bool m_RanUeThrouThdIsSet;
  Snssai m_Snssai;
  bool m_SnssaiIsSet;
  int32_t m_Confidence;
  bool m_ConfidenceIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* QosSustainabilityInfo_H_ */
