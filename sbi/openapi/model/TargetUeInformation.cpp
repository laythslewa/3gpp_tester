/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TargetUeInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TargetUeInformation::TargetUeInformation() {
  m_AnyUe = false;
  m_AnyUeIsSet = false;
  m_SupisIsSet = false;
  m_GpsisIsSet = false;
  m_IntGroupIdsIsSet = false;
}

TargetUeInformation::~TargetUeInformation() {}

void TargetUeInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TargetUeInformation &o) {
  j = nlohmann::json();
  if (o.anyUeIsSet())
    j["anyUe"] = o.m_AnyUe;
  if (o.supisIsSet() || !o.m_Supis.empty())
    j["supis"] = o.m_Supis;
  if (o.gpsisIsSet() || !o.m_Gpsis.empty())
    j["gpsis"] = o.m_Gpsis;
  if (o.intGroupIdsIsSet() || !o.m_IntGroupIds.empty())
    j["intGroupIds"] = o.m_IntGroupIds;
}

void from_json(const nlohmann::json &j, TargetUeInformation &o) {
  if (j.find("anyUe") != j.end()) {
    j.at("anyUe").get_to(o.m_AnyUe);
    o.m_AnyUeIsSet = true;
  }
  if (j.find("supis") != j.end()) {
    j.at("supis").get_to(o.m_Supis);
    o.m_SupisIsSet = true;
  }
  if (j.find("gpsis") != j.end()) {
    j.at("gpsis").get_to(o.m_Gpsis);
    o.m_GpsisIsSet = true;
  }
  if (j.find("intGroupIds") != j.end()) {
    j.at("intGroupIds").get_to(o.m_IntGroupIds);
    o.m_IntGroupIdsIsSet = true;
  }
}

bool TargetUeInformation::isAnyUe() const { return m_AnyUe; }
void TargetUeInformation::setAnyUe(bool const value) {
  m_AnyUe = value;
  m_AnyUeIsSet = true;
}
bool TargetUeInformation::anyUeIsSet() const { return m_AnyUeIsSet; }
void TargetUeInformation::unsetAnyUe() { m_AnyUeIsSet = false; }
std::vector<std::string> &TargetUeInformation::getSupis() { return m_Supis; }
void TargetUeInformation::setSupis(std::vector<std::string> const &value) {
  m_Supis = value;
  m_SupisIsSet = true;
}
bool TargetUeInformation::supisIsSet() const { return m_SupisIsSet; }
void TargetUeInformation::unsetSupis() { m_SupisIsSet = false; }
std::vector<std::string> &TargetUeInformation::getGpsis() { return m_Gpsis; }
void TargetUeInformation::setGpsis(std::vector<std::string> const &value) {
  m_Gpsis = value;
  m_GpsisIsSet = true;
}
bool TargetUeInformation::gpsisIsSet() const { return m_GpsisIsSet; }
void TargetUeInformation::unsetGpsis() { m_GpsisIsSet = false; }
std::vector<std::string> &TargetUeInformation::getIntGroupIds() {
  return m_IntGroupIds;
}
void TargetUeInformation::setIntGroupIds(
    std::vector<std::string> const &value) {
  m_IntGroupIds = value;
  m_IntGroupIdsIsSet = true;
}
bool TargetUeInformation::intGroupIdsIsSet() const {
  return m_IntGroupIdsIsSet;
}
void TargetUeInformation::unsetIntGroupIds() { m_IntGroupIdsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
