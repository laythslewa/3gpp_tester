/**
 * Nhss_EE
 * HSS Event Exposure Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * CreatedEeSubscription.h
 *
 * It represents the response body of the subscription request, containing data
 * of the created subscription in the HSS
 */

#ifndef CreatedEeSubscription_H_
#define CreatedEeSubscription_H_

#include "EeSubscription.h"
#include "MonitoringReport.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// It represents the response body of the subscription request, containing data
/// of the created subscription in the HSS
/// </summary>
class CreatedEeSubscription {
public:
  CreatedEeSubscription();
  virtual ~CreatedEeSubscription();

  void validate();

  /////////////////////////////////////////////
  /// CreatedEeSubscription members

  /// <summary>
  ///
  /// </summary>
  EeSubscription getEeSubscription() const;
  void setEeSubscription(EeSubscription const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<MonitoringReport> &getEventReports();
  void setEventReports(std::vector<MonitoringReport> const &value);
  bool eventReportsIsSet() const;
  void unsetEventReports();

  friend void to_json(nlohmann::json &j, const CreatedEeSubscription &o);
  friend void from_json(const nlohmann::json &j, CreatedEeSubscription &o);

protected:
  EeSubscription m_EeSubscription;

  std::vector<MonitoringReport> m_EventReports;
  bool m_EventReportsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* CreatedEeSubscription_H_ */
