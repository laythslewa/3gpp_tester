/**
 * Nnssaaf_NSSAA
 * Network Slice-Specific Authentication and Authorization Service. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ConfirmSliceAuthenticationApi.h
 *
 *
 */

#ifndef ConfirmSliceAuthenticationApi_H_
#define ConfirmSliceAuthenticationApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include "SliceAuthConfirmationData.h"
#include "SliceAuthConfirmationResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class ConfirmSliceAuthenticationApi {
public:
  ConfirmSliceAuthenticationApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~ConfirmSliceAuthenticationApi() {}
  void init();

  const std::string base = "/nnssaaf-nssaa/v1";

private:
  void setupRoutes();

  void
  confirm_slice_authentication_handler(const Pistache::Rest::Request &request,
                                       Pistache::Http::ResponseWriter response);
  void confirm_slice_authentication_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Confirm the slice authentication result
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="authCtxId"></param>
  /// <param name="sliceAuthConfirmationData"> (optional)</param>
  virtual void confirm_slice_authentication(
      const std::string &authCtxId,
      const SliceAuthConfirmationData &sliceAuthConfirmationData,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ConfirmSliceAuthenticationApi_H_ */
