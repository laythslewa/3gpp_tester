/**
 * CAPIF_API_Invoker_Management_API
 * API for API invoker management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "OnboardingNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OnboardingNotification::OnboardingNotification() {
  m_Result = false;
  m_ResourceLocation = "";
  m_ResourceLocationIsSet = false;
  m_ApiInvokerEnrolmentDetailsIsSet = false;
  m_ApiListIsSet = false;
}

OnboardingNotification::~OnboardingNotification() {}

void OnboardingNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const OnboardingNotification &o) {
  j = nlohmann::json();
  j["result"] = o.m_Result;
  if (o.resourceLocationIsSet())
    j["resourceLocation"] = o.m_ResourceLocation;
  if (o.apiInvokerEnrolmentDetailsIsSet())
    j["apiInvokerEnrolmentDetails"] = o.m_ApiInvokerEnrolmentDetails;
  if (o.apiListIsSet() || !o.m_ApiList.empty())
    j["apiList"] = o.m_ApiList;
}

void from_json(const nlohmann::json &j, OnboardingNotification &o) {
  j.at("result").get_to(o.m_Result);
  if (j.find("resourceLocation") != j.end()) {
    j.at("resourceLocation").get_to(o.m_ResourceLocation);
    o.m_ResourceLocationIsSet = true;
  }
  if (j.find("apiInvokerEnrolmentDetails") != j.end()) {
    j.at("apiInvokerEnrolmentDetails").get_to(o.m_ApiInvokerEnrolmentDetails);
    o.m_ApiInvokerEnrolmentDetailsIsSet = true;
  }
  if (j.find("apiList") != j.end()) {
    j.at("apiList").get_to(o.m_ApiList);
    o.m_ApiListIsSet = true;
  }
}

bool OnboardingNotification::isResult() const { return m_Result; }
void OnboardingNotification::setResult(bool const value) { m_Result = value; }
std::string OnboardingNotification::getResourceLocation() const {
  return m_ResourceLocation;
}
void OnboardingNotification::setResourceLocation(std::string const &value) {
  m_ResourceLocation = value;
  m_ResourceLocationIsSet = true;
}
bool OnboardingNotification::resourceLocationIsSet() const {
  return m_ResourceLocationIsSet;
}
void OnboardingNotification::unsetResourceLocation() {
  m_ResourceLocationIsSet = false;
}
APIInvokerEnrolmentDetails
OnboardingNotification::getApiInvokerEnrolmentDetails() const {
  return m_ApiInvokerEnrolmentDetails;
}
void OnboardingNotification::setApiInvokerEnrolmentDetails(
    APIInvokerEnrolmentDetails const &value) {
  m_ApiInvokerEnrolmentDetails = value;
  m_ApiInvokerEnrolmentDetailsIsSet = true;
}
bool OnboardingNotification::apiInvokerEnrolmentDetailsIsSet() const {
  return m_ApiInvokerEnrolmentDetailsIsSet;
}
void OnboardingNotification::unsetApiInvokerEnrolmentDetails() {
  m_ApiInvokerEnrolmentDetailsIsSet = false;
}
std::vector<ServiceAPIDescription> &OnboardingNotification::getApiList() {
  return m_ApiList;
}
void OnboardingNotification::setApiList(
    std::vector<ServiceAPIDescription> const &value) {
  m_ApiList = value;
  m_ApiListIsSet = true;
}
bool OnboardingNotification::apiListIsSet() const { return m_ApiListIsSet; }
void OnboardingNotification::unsetApiList() { m_ApiListIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
