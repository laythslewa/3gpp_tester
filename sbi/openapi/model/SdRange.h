/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SdRange.h
 *
 * A range of SDs (Slice Differentiators)
 */

#ifndef SdRange_H_
#define SdRange_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A range of SDs (Slice Differentiators)
/// </summary>
class SdRange {
public:
  SdRange();
  virtual ~SdRange();

  void validate();

  /////////////////////////////////////////////
  /// SdRange members

  /// <summary>
  /// First value identifying the start of an SD range. This string shall be
  /// formatted as specified for the sd attribute of the Snssai data type in
  /// clause 5.4.4.2.
  /// </summary>
  std::string getStart() const;
  void setStart(std::string const &value);
  bool startIsSet() const;
  void unsetStart();
  /// <summary>
  /// Last value identifying the end of an SD range. This string shall be
  /// formatted as specified for the sd attribute of the Snssai data type in
  /// clause 5.4.4.2.
  /// </summary>
  std::string getEnd() const;
  void setEnd(std::string const &value);
  bool endIsSet() const;
  void unsetEnd();

  friend void to_json(nlohmann::json &j, const SdRange &o);
  friend void from_json(const nlohmann::json &j, SdRange &o);

protected:
  std::string m_Start;
  bool m_StartIsSet;
  std::string m_End;
  bool m_EndIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SdRange_H_ */
