/**
 * Nhss_SDM
 * HSS Subscriber Data Management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PgwInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PgwInfo::PgwInfo() {
  m_Dnn = "";
  m_PgwFqdn = "";
  m_PlmnIdIsSet = false;
  m_EpdgInd = false;
  m_EpdgIndIsSet = false;
  m_PcfId = "";
  m_PcfIdIsSet = false;
}

PgwInfo::~PgwInfo() {}

void PgwInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PgwInfo &o) {
  j = nlohmann::json();
  j["dnn"] = o.m_Dnn;
  j["pgwFqdn"] = o.m_PgwFqdn;
  if (o.plmnIdIsSet())
    j["plmnId"] = o.m_PlmnId;
  if (o.epdgIndIsSet())
    j["epdgInd"] = o.m_EpdgInd;
  if (o.pcfIdIsSet())
    j["pcfId"] = o.m_PcfId;
}

void from_json(const nlohmann::json &j, PgwInfo &o) {
  j.at("dnn").get_to(o.m_Dnn);
  j.at("pgwFqdn").get_to(o.m_PgwFqdn);
  if (j.find("plmnId") != j.end()) {
    j.at("plmnId").get_to(o.m_PlmnId);
    o.m_PlmnIdIsSet = true;
  }
  if (j.find("epdgInd") != j.end()) {
    j.at("epdgInd").get_to(o.m_EpdgInd);
    o.m_EpdgIndIsSet = true;
  }
  if (j.find("pcfId") != j.end()) {
    j.at("pcfId").get_to(o.m_PcfId);
    o.m_PcfIdIsSet = true;
  }
}

std::string PgwInfo::getDnn() const { return m_Dnn; }
void PgwInfo::setDnn(std::string const &value) { m_Dnn = value; }
std::string PgwInfo::getPgwFqdn() const { return m_PgwFqdn; }
void PgwInfo::setPgwFqdn(std::string const &value) { m_PgwFqdn = value; }
PlmnId PgwInfo::getPlmnId() const { return m_PlmnId; }
void PgwInfo::setPlmnId(PlmnId const &value) {
  m_PlmnId = value;
  m_PlmnIdIsSet = true;
}
bool PgwInfo::plmnIdIsSet() const { return m_PlmnIdIsSet; }
void PgwInfo::unsetPlmnId() { m_PlmnIdIsSet = false; }
bool PgwInfo::isEpdgInd() const { return m_EpdgInd; }
void PgwInfo::setEpdgInd(bool const value) {
  m_EpdgInd = value;
  m_EpdgIndIsSet = true;
}
bool PgwInfo::epdgIndIsSet() const { return m_EpdgIndIsSet; }
void PgwInfo::unsetEpdgInd() { m_EpdgIndIsSet = false; }
std::string PgwInfo::getPcfId() const { return m_PcfId; }
void PgwInfo::setPcfId(std::string const &value) {
  m_PcfId = value;
  m_PcfIdIsSet = true;
}
bool PgwInfo::pcfIdIsSet() const { return m_PcfIdIsSet; }
void PgwInfo::unsetPcfId() { m_PcfIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
