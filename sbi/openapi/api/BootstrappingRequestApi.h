/**
 * NRF Bootstrapping
 * NRF Bootstrapping. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * BootstrappingRequestApi.h
 *
 *
 */

#ifndef BootstrappingRequestApi_H_
#define BootstrappingRequestApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "BootstrappingInfo.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class BootstrappingRequestApi {
public:
  BootstrappingRequestApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~BootstrappingRequestApi() {}
  void init();

  const std::string base = "";

private:
  void setupRoutes();

  void
  bootstrapping_info_request_handler(const Pistache::Rest::Request &request,
                                     Pistache::Http::ResponseWriter response);
  void bootstrapping_request_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Bootstrapping Info Request
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  virtual void
  bootstrapping_info_request(Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* BootstrappingRequestApi_H_ */
