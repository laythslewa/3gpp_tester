/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmallDataRateStatus.h
 *
 *
 */

#ifndef SmallDataRateStatus_H_
#define SmallDataRateStatus_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class SmallDataRateStatus {
public:
  SmallDataRateStatus();
  virtual ~SmallDataRateStatus();

  void validate();

  /////////////////////////////////////////////
  /// SmallDataRateStatus members

  /// <summary>
  /// When present, it shall contain the number of packets the UE is allowed to
  /// send uplink in the given time unit for the given PDU session (see
  /// clause 5.31.14.3 of 3GPP TS 23.501
  /// </summary>
  int32_t getRemainPacketsUl() const;
  void setRemainPacketsUl(int32_t const value);
  bool remainPacketsUlIsSet() const;
  void unsetRemainPacketsUl();
  /// <summary>
  /// When present it shall contain the number of packets the AF is allowed to
  /// send downlink in the given time unit for the given PDU session (see
  /// clause 5.31.14.3 of 3GPP TS 23.501
  /// </summary>
  int32_t getRemainPacketsDl() const;
  void setRemainPacketsDl(int32_t const value);
  bool remainPacketsDlIsSet() const;
  void unsetRemainPacketsDl();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getValidityTime() const;
  void setValidityTime(std::string const &value);
  bool validityTimeIsSet() const;
  void unsetValidityTime();
  /// <summary>
  /// When present, it shall indicate number of additional exception reports the
  /// UE is allowed to send uplink in the given time unit for  the given PDU
  /// session (see clause 5.31.14.3 of 3GPP TS 23.501.
  /// </summary>
  int32_t getRemainExReportsUl() const;
  void setRemainExReportsUl(int32_t const value);
  bool remainExReportsUlIsSet() const;
  void unsetRemainExReportsUl();
  /// <summary>
  /// When present, it shall indicate number of additional exception reports the
  /// AF is allowed to send downlink in the given time unit for the given PDU
  /// session (see clause 5.31.14.3 in 3GPP TS 23.501
  /// </summary>
  int32_t getRemainExReportsDl() const;
  void setRemainExReportsDl(int32_t const value);
  bool remainExReportsDlIsSet() const;
  void unsetRemainExReportsDl();

  friend void to_json(nlohmann::json &j, const SmallDataRateStatus &o);
  friend void from_json(const nlohmann::json &j, SmallDataRateStatus &o);

protected:
  int32_t m_RemainPacketsUl;
  bool m_RemainPacketsUlIsSet;
  int32_t m_RemainPacketsDl;
  bool m_RemainPacketsDlIsSet;
  std::string m_ValidityTime;
  bool m_ValidityTimeIsSet;
  int32_t m_RemainExReportsUl;
  bool m_RemainExReportsUlIsSet;
  int32_t m_RemainExReportsDl;
  bool m_RemainExReportsDlIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SmallDataRateStatus_H_ */
