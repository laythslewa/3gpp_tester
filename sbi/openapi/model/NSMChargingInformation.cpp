/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NSMChargingInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NSMChargingInformation::NSMChargingInformation() {
  m_IdNetworkSliceInstance = "";
  m_IdNetworkSliceInstanceIsSet = false;
  m_ListOfserviceProfileChargingInformationIsSet = false;
  m_ManagementOperationStatusIsSet = false;
}

NSMChargingInformation::~NSMChargingInformation() {}

void NSMChargingInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NSMChargingInformation &o) {
  j = nlohmann::json();
  j["managementOperation"] = o.m_ManagementOperation;
  if (o.idNetworkSliceInstanceIsSet())
    j["idNetworkSliceInstance"] = o.m_IdNetworkSliceInstance;
  if (o.listOfserviceProfileChargingInformationIsSet() ||
      !o.m_ListOfserviceProfileChargingInformation.empty())
    j["listOfserviceProfileChargingInformation"] =
        o.m_ListOfserviceProfileChargingInformation;
  if (o.managementOperationStatusIsSet())
    j["managementOperationStatus"] = o.m_ManagementOperationStatus;
}

void from_json(const nlohmann::json &j, NSMChargingInformation &o) {
  j.at("managementOperation").get_to(o.m_ManagementOperation);
  if (j.find("idNetworkSliceInstance") != j.end()) {
    j.at("idNetworkSliceInstance").get_to(o.m_IdNetworkSliceInstance);
    o.m_IdNetworkSliceInstanceIsSet = true;
  }
  if (j.find("listOfserviceProfileChargingInformation") != j.end()) {
    j.at("listOfserviceProfileChargingInformation")
        .get_to(o.m_ListOfserviceProfileChargingInformation);
    o.m_ListOfserviceProfileChargingInformationIsSet = true;
  }
  if (j.find("managementOperationStatus") != j.end()) {
    j.at("managementOperationStatus").get_to(o.m_ManagementOperationStatus);
    o.m_ManagementOperationStatusIsSet = true;
  }
}

ManagementOperation NSMChargingInformation::getManagementOperation() const {
  return m_ManagementOperation;
}
void NSMChargingInformation::setManagementOperation(
    ManagementOperation const &value) {
  m_ManagementOperation = value;
}
std::string NSMChargingInformation::getIdNetworkSliceInstance() const {
  return m_IdNetworkSliceInstance;
}
void NSMChargingInformation::setIdNetworkSliceInstance(
    std::string const &value) {
  m_IdNetworkSliceInstance = value;
  m_IdNetworkSliceInstanceIsSet = true;
}
bool NSMChargingInformation::idNetworkSliceInstanceIsSet() const {
  return m_IdNetworkSliceInstanceIsSet;
}
void NSMChargingInformation::unsetIdNetworkSliceInstance() {
  m_IdNetworkSliceInstanceIsSet = false;
}
std::vector<ServiceProfileChargingInformation> &
NSMChargingInformation::getListOfserviceProfileChargingInformation() {
  return m_ListOfserviceProfileChargingInformation;
}
void NSMChargingInformation::setListOfserviceProfileChargingInformation(
    std::vector<ServiceProfileChargingInformation> const &value) {
  m_ListOfserviceProfileChargingInformation = value;
  m_ListOfserviceProfileChargingInformationIsSet = true;
}
bool NSMChargingInformation::listOfserviceProfileChargingInformationIsSet()
    const {
  return m_ListOfserviceProfileChargingInformationIsSet;
}
void NSMChargingInformation::unsetListOfserviceProfileChargingInformation() {
  m_ListOfserviceProfileChargingInformationIsSet = false;
}
ManagementOperationStatus
NSMChargingInformation::getManagementOperationStatus() const {
  return m_ManagementOperationStatus;
}
void NSMChargingInformation::setManagementOperationStatus(
    ManagementOperationStatus const &value) {
  m_ManagementOperationStatus = value;
  m_ManagementOperationStatusIsSet = true;
}
bool NSMChargingInformation::managementOperationStatusIsSet() const {
  return m_ManagementOperationStatusIsSet;
}
void NSMChargingInformation::unsetManagementOperationStatus() {
  m_ManagementOperationStatusIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
