/**
 * 3gpp-nidd
 * API for non IP data delivery. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * GmdResult.h
 *
 * Represents the group message delivery result.
 */

#ifndef GmdResult_H_
#define GmdResult_H_

#include "DeliveryStatus.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the group message delivery result.
/// </summary>
class GmdResult {
public:
  GmdResult();
  virtual ~GmdResult();

  void validate();

  /////////////////////////////////////////////
  /// GmdResult members

  /// <summary>
  /// string containing a local identifier followed by \&quot;@\&quot; and a
  /// domain identifier. Both the local identifier and the domain identifier
  /// shall be encoded as strings that do not contain any \&quot;@\&quot;
  /// characters. See Clause 4.6.2 of 3GPP TS 23.682 for more information.
  /// </summary>
  std::string getExternalId() const;
  void setExternalId(std::string const &value);
  bool externalIdIsSet() const;
  void unsetExternalId();
  /// <summary>
  /// string formatted according to subclause 3.3 of 3GPP TS 23.003 that
  /// describes an MSISDN.
  /// </summary>
  std::string getMsisdn() const;
  void setMsisdn(std::string const &value);
  bool msisdnIsSet() const;
  void unsetMsisdn();
  /// <summary>
  ///
  /// </summary>
  DeliveryStatus getDeliveryStatus() const;
  void setDeliveryStatus(DeliveryStatus const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getRequestedRetransmissionTime() const;
  void setRequestedRetransmissionTime(std::string const &value);
  bool requestedRetransmissionTimeIsSet() const;
  void unsetRequestedRetransmissionTime();

  friend void to_json(nlohmann::json &j, const GmdResult &o);
  friend void from_json(const nlohmann::json &j, GmdResult &o);

protected:
  std::string m_ExternalId;
  bool m_ExternalIdIsSet;
  std::string m_Msisdn;
  bool m_MsisdnIsSet;
  DeliveryStatus m_DeliveryStatus;

  std::string m_RequestedRetransmissionTime;
  bool m_RequestedRetransmissionTimeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* GmdResult_H_ */
