/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * FlatJwsJson.h
 *
 * Contains the modification from IPXes on path
 */

#ifndef FlatJwsJson_H_
#define FlatJwsJson_H_

#include "Object.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the modification from IPXes on path
/// </summary>
class FlatJwsJson {
public:
  FlatJwsJson();
  virtual ~FlatJwsJson();

  void validate();

  /////////////////////////////////////////////
  /// FlatJwsJson members

  /// <summary>
  ///
  /// </summary>
  std::string getPayload() const;
  void setPayload(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getRProtected() const;
  void setRProtected(std::string const &value);
  bool rProtectedIsSet() const;
  void unsetr_protected();
  /// <summary>
  ///
  /// </summary>
  Object getHeader() const;
  void setHeader(Object const &value);
  bool headerIsSet() const;
  void unsetHeader();
  /// <summary>
  ///
  /// </summary>
  std::string getSignature() const;
  void setSignature(std::string const &value);

  friend void to_json(nlohmann::json &j, const FlatJwsJson &o);
  friend void from_json(const nlohmann::json &j, FlatJwsJson &o);

protected:
  std::string m_Payload;

  std::string m_r_protected;
  bool m_r_protectedIsSet;
  Object m_Header;
  bool m_HeaderIsSet;
  std::string m_Signature;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* FlatJwsJson_H_ */
