/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * EcsServerAddr.h
 *
 *
 */

#ifndef EcsServerAddr_H_
#define EcsServerAddr_H_

#include "IpAddr.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class EcsServerAddr {
public:
  EcsServerAddr();
  virtual ~EcsServerAddr();

  void validate();

  /////////////////////////////////////////////
  /// EcsServerAddr members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getEcsFqdnList();
  void setEcsFqdnList(std::vector<std::string> const &value);
  bool ecsFqdnListIsSet() const;
  void unsetEcsFqdnList();
  /// <summary>
  ///
  /// </summary>
  std::vector<IpAddr> &getEcsIpAddressList();
  void setEcsIpAddressList(std::vector<IpAddr> const &value);
  bool ecsIpAddressListIsSet() const;
  void unsetEcsIpAddressList();

  friend void to_json(nlohmann::json &j, const EcsServerAddr &o);
  friend void from_json(const nlohmann::json &j, EcsServerAddr &o);

protected:
  std::vector<std::string> m_EcsFqdnList;
  bool m_EcsFqdnListIsSet;
  std::vector<IpAddr> m_EcsIpAddressList;
  bool m_EcsIpAddressListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* EcsServerAddr_H_ */
