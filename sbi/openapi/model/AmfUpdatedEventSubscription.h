/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmfUpdatedEventSubscription.h
 *
 * Represents a successful update on an AMF Event Subscription
 */

#ifndef AmfUpdatedEventSubscription_H_
#define AmfUpdatedEventSubscription_H_

#include "AmfEventReport.h"
#include "AmfEventSubscription.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a successful update on an AMF Event Subscription
/// </summary>
class AmfUpdatedEventSubscription {
public:
  AmfUpdatedEventSubscription();
  virtual ~AmfUpdatedEventSubscription();

  void validate();

  /////////////////////////////////////////////
  /// AmfUpdatedEventSubscription members

  /// <summary>
  ///
  /// </summary>
  AmfEventSubscription getSubscription() const;
  void setSubscription(AmfEventSubscription const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<AmfEventReport> &getReportList();
  void setReportList(std::vector<AmfEventReport> const &value);
  bool reportListIsSet() const;
  void unsetReportList();

  friend void to_json(nlohmann::json &j, const AmfUpdatedEventSubscription &o);
  friend void from_json(const nlohmann::json &j,
                        AmfUpdatedEventSubscription &o);

protected:
  AmfEventSubscription m_Subscription;

  std::vector<AmfEventReport> m_ReportList;
  bool m_ReportListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AmfUpdatedEventSubscription_H_ */
