/**
 * Nsoraf_SOR
 * Nsoraf Steering Of Roaming Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SoRInformationRetrievalApi.h
 *
 *
 */

#ifndef SoRInformationRetrievalApi_H_
#define SoRInformationRetrievalApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "AccessType.h"
#include "PlmnId.h"
#include "ProblemDetails.h"
#include "SorInformation.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class SoRInformationRetrievalApi {
public:
  SoRInformationRetrievalApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~SoRInformationRetrievalApi() {}
  void init();

  const std::string base = "/nsoraf-sor/v1";

private:
  void setupRoutes();

  void get_sor_information_handler(const Pistache::Rest::Request &request,
                                   Pistache::Http::ResponseWriter response);
  void so_r_information_retrieval_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// retrieve the steering of roaming information for a UE
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="supi">Identifier of the UE</param>
  /// <param name="plmnId">serving PLMN ID</param>
  /// <param name="supportedFeatures">Supported Features (optional, default to
  /// &quot;&quot;)</param> <param name="accessType">Access type used by the UE
  /// (optional, default to AccessType())</param>
  virtual void
  get_sor_information(const std::string &supi,
                      const Pistache::Optional<PlmnId> &plmnId,
                      const Pistache::Optional<std::string> &supportedFeatures,
                      const Pistache::Optional<AccessType> &accessType,
                      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SoRInformationRetrievalApi_H_ */
