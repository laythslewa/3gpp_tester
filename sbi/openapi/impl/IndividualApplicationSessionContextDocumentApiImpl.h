/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualApplicationSessionContextDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_APPLICATION_SESSION_CONTEXT_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_APPLICATION_SESSION_CONTEXT_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualApplicationSessionContextDocumentApi.h>

#include <pistache/optional.h>

#include "AppSessionContext.h"
#include "AppSessionContextUpdateDataPatch.h"
#include "EventsSubscReqData.h"
#include "ExtendedProblemDetails.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualApplicationSessionContextDocumentApiImpl
    : public org::openapitools::server::api::
          IndividualApplicationSessionContextDocumentApi {
public:
  IndividualApplicationSessionContextDocumentApiImpl(
      std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualApplicationSessionContextDocumentApiImpl() {}

  void delete_app_session(const std::string &appSessionId,
                          const EventsSubscReqData &eventsSubscReqData,
                          Pistache::Http::ResponseWriter &response);
  void get_app_session(const std::string &appSessionId,
                       Pistache::Http::ResponseWriter &response);
  void mod_app_session(
      const std::string &appSessionId,
      const AppSessionContextUpdateDataPatch &appSessionContextUpdateDataPatch,
      Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif