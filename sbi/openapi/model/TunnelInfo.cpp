/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TunnelInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

TunnelInfo::TunnelInfo() {
  m_Ipv4Addr = "";
  m_Ipv4AddrIsSet = false;
  m_Ipv6AddrIsSet = false;
  m_GtpTeid = "";
  m_AnTypeIsSet = false;
}

TunnelInfo::~TunnelInfo() {}

void TunnelInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const TunnelInfo &o) {
  j = nlohmann::json();
  if (o.ipv4AddrIsSet())
    j["ipv4Addr"] = o.m_Ipv4Addr;
  if (o.ipv6AddrIsSet())
    j["ipv6Addr"] = o.m_Ipv6Addr;
  j["gtpTeid"] = o.m_GtpTeid;
  if (o.anTypeIsSet())
    j["anType"] = o.m_AnType;
}

void from_json(const nlohmann::json &j, TunnelInfo &o) {
  if (j.find("ipv4Addr") != j.end()) {
    j.at("ipv4Addr").get_to(o.m_Ipv4Addr);
    o.m_Ipv4AddrIsSet = true;
  }
  if (j.find("ipv6Addr") != j.end()) {
    j.at("ipv6Addr").get_to(o.m_Ipv6Addr);
    o.m_Ipv6AddrIsSet = true;
  }
  j.at("gtpTeid").get_to(o.m_GtpTeid);
  if (j.find("anType") != j.end()) {
    j.at("anType").get_to(o.m_AnType);
    o.m_AnTypeIsSet = true;
  }
}

std::string TunnelInfo::getIpv4Addr() const { return m_Ipv4Addr; }
void TunnelInfo::setIpv4Addr(std::string const &value) {
  m_Ipv4Addr = value;
  m_Ipv4AddrIsSet = true;
}
bool TunnelInfo::ipv4AddrIsSet() const { return m_Ipv4AddrIsSet; }
void TunnelInfo::unsetIpv4Addr() { m_Ipv4AddrIsSet = false; }
Ipv6Addr TunnelInfo::getIpv6Addr() const { return m_Ipv6Addr; }
void TunnelInfo::setIpv6Addr(Ipv6Addr const &value) {
  m_Ipv6Addr = value;
  m_Ipv6AddrIsSet = true;
}
bool TunnelInfo::ipv6AddrIsSet() const { return m_Ipv6AddrIsSet; }
void TunnelInfo::unsetIpv6Addr() { m_Ipv6AddrIsSet = false; }
std::string TunnelInfo::getGtpTeid() const { return m_GtpTeid; }
void TunnelInfo::setGtpTeid(std::string const &value) { m_GtpTeid = value; }
AccessType TunnelInfo::getAnType() const { return m_AnType; }
void TunnelInfo::setAnType(AccessType const &value) {
  m_AnType = value;
  m_AnTypeIsSet = true;
}
bool TunnelInfo::anTypeIsSet() const { return m_AnTypeIsSet; }
void TunnelInfo::unsetAnType() { m_AnTypeIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
