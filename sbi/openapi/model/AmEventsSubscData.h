/**
 * Npcf_AMPolicyAuthorization Service API
 * PCF Access and Mobility Policy Authorization Service. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmEventsSubscData.h
 *
 * It represents the AM Policy Events Subscription subresource and identifies
 * the events the application subscribes to.
 */

#ifndef AmEventsSubscData_H_
#define AmEventsSubscData_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// It represents the AM Policy Events Subscription subresource and identifies
/// the events the application subscribes to.
/// </summary>
class AmEventsSubscData {
public:
  AmEventsSubscData();
  virtual ~AmEventsSubscData();

  void validate();

  /////////////////////////////////////////////
  /// AmEventsSubscData members

  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getEventNotifUri() const;
  void setEventNotifUri(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getEvents();
  void setEvents(std::vector<std::string> const &value);
  bool eventsIsSet() const;
  void unsetEvents();

  friend void to_json(nlohmann::json &j, const AmEventsSubscData &o);
  friend void from_json(const nlohmann::json &j, AmEventsSubscData &o);

protected:
  std::string m_EventNotifUri;

  std::vector<std::string> m_Events;
  bool m_EventsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AmEventsSubscData_H_ */
