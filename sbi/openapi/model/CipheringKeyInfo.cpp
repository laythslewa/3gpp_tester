/**
 * LMF Broadcast
 * LMF Broadcast Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CipheringKeyInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CipheringKeyInfo::CipheringKeyInfo() {
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
}

CipheringKeyInfo::~CipheringKeyInfo() {}

void CipheringKeyInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CipheringKeyInfo &o) {
  j = nlohmann::json();
  j["cipheringData"] = o.m_CipheringData;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
}

void from_json(const nlohmann::json &j, CipheringKeyInfo &o) {
  j.at("cipheringData").get_to(o.m_CipheringData);
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
}

std::vector<CipheringDataSet> &CipheringKeyInfo::getCipheringData() {
  return m_CipheringData;
}
void CipheringKeyInfo::setCipheringData(
    std::vector<CipheringDataSet> const &value) {
  m_CipheringData = value;
}
std::string CipheringKeyInfo::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void CipheringKeyInfo::setSupportedFeatures(std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool CipheringKeyInfo::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void CipheringKeyInfo::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
