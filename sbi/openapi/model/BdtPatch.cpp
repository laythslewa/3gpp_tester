/**
 * 3gpp-bdt
 * API for BDT resouce management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "BdtPatch.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

BdtPatch::BdtPatch() {
  m_SelectedPolicy = 0;
  m_WarnNotifEnabled = false;
  m_WarnNotifEnabledIsSet = false;
  m_NotificationDestination = "";
  m_NotificationDestinationIsSet = false;
}

BdtPatch::~BdtPatch() {}

void BdtPatch::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const BdtPatch &o) {
  j = nlohmann::json();
  j["selectedPolicy"] = o.m_SelectedPolicy;
  if (o.warnNotifEnabledIsSet())
    j["warnNotifEnabled"] = o.m_WarnNotifEnabled;
  if (o.notificationDestinationIsSet())
    j["notificationDestination"] = o.m_NotificationDestination;
}

void from_json(const nlohmann::json &j, BdtPatch &o) {
  j.at("selectedPolicy").get_to(o.m_SelectedPolicy);
  if (j.find("warnNotifEnabled") != j.end()) {
    j.at("warnNotifEnabled").get_to(o.m_WarnNotifEnabled);
    o.m_WarnNotifEnabledIsSet = true;
  }
  if (j.find("notificationDestination") != j.end()) {
    j.at("notificationDestination").get_to(o.m_NotificationDestination);
    o.m_NotificationDestinationIsSet = true;
  }
}

int32_t BdtPatch::getSelectedPolicy() const { return m_SelectedPolicy; }
void BdtPatch::setSelectedPolicy(int32_t const value) {
  m_SelectedPolicy = value;
}
bool BdtPatch::isWarnNotifEnabled() const { return m_WarnNotifEnabled; }
void BdtPatch::setWarnNotifEnabled(bool const value) {
  m_WarnNotifEnabled = value;
  m_WarnNotifEnabledIsSet = true;
}
bool BdtPatch::warnNotifEnabledIsSet() const { return m_WarnNotifEnabledIsSet; }
void BdtPatch::unsetWarnNotifEnabled() { m_WarnNotifEnabledIsSet = false; }
std::string BdtPatch::getNotificationDestination() const {
  return m_NotificationDestination;
}
void BdtPatch::setNotificationDestination(std::string const &value) {
  m_NotificationDestination = value;
  m_NotificationDestinationIsSet = true;
}
bool BdtPatch::notificationDestinationIsSet() const {
  return m_NotificationDestinationIsSet;
}
void BdtPatch::unsetNotificationDestination() {
  m_NotificationDestinationIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
