/**
 * Nudm_NIDDAU
 * Nudm NIDD Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AuthorizationInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AuthorizationInfo::AuthorizationInfo() {
  m_Dnn = "";
  m_MtcProviderInformation = "";
  m_AuthUpdateCallbackUri = "";
  m_AfId = "";
  m_AfIdIsSet = false;
  m_NefId = "";
  m_NefIdIsSet = false;
}

AuthorizationInfo::~AuthorizationInfo() {}

void AuthorizationInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AuthorizationInfo &o) {
  j = nlohmann::json();
  j["snssai"] = o.m_Snssai;
  j["dnn"] = o.m_Dnn;
  j["mtcProviderInformation"] = o.m_MtcProviderInformation;
  j["authUpdateCallbackUri"] = o.m_AuthUpdateCallbackUri;
  if (o.afIdIsSet())
    j["afId"] = o.m_AfId;
  if (o.nefIdIsSet())
    j["nefId"] = o.m_NefId;
}

void from_json(const nlohmann::json &j, AuthorizationInfo &o) {
  j.at("snssai").get_to(o.m_Snssai);
  j.at("dnn").get_to(o.m_Dnn);
  j.at("mtcProviderInformation").get_to(o.m_MtcProviderInformation);
  j.at("authUpdateCallbackUri").get_to(o.m_AuthUpdateCallbackUri);
  if (j.find("afId") != j.end()) {
    j.at("afId").get_to(o.m_AfId);
    o.m_AfIdIsSet = true;
  }
  if (j.find("nefId") != j.end()) {
    j.at("nefId").get_to(o.m_NefId);
    o.m_NefIdIsSet = true;
  }
}

Snssai AuthorizationInfo::getSnssai() const { return m_Snssai; }
void AuthorizationInfo::setSnssai(Snssai const &value) { m_Snssai = value; }
std::string AuthorizationInfo::getDnn() const { return m_Dnn; }
void AuthorizationInfo::setDnn(std::string const &value) { m_Dnn = value; }
std::string AuthorizationInfo::getMtcProviderInformation() const {
  return m_MtcProviderInformation;
}
void AuthorizationInfo::setMtcProviderInformation(std::string const &value) {
  m_MtcProviderInformation = value;
}
std::string AuthorizationInfo::getAuthUpdateCallbackUri() const {
  return m_AuthUpdateCallbackUri;
}
void AuthorizationInfo::setAuthUpdateCallbackUri(std::string const &value) {
  m_AuthUpdateCallbackUri = value;
}
std::string AuthorizationInfo::getAfId() const { return m_AfId; }
void AuthorizationInfo::setAfId(std::string const &value) {
  m_AfId = value;
  m_AfIdIsSet = true;
}
bool AuthorizationInfo::afIdIsSet() const { return m_AfIdIsSet; }
void AuthorizationInfo::unsetAfId() { m_AfIdIsSet = false; }
std::string AuthorizationInfo::getNefId() const { return m_NefId; }
void AuthorizationInfo::setNefId(std::string const &value) {
  m_NefId = value;
  m_NefIdIsSet = true;
}
bool AuthorizationInfo::nefIdIsSet() const { return m_NefIdIsSet; }
void AuthorizationInfo::unsetNefId() { m_NefIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
