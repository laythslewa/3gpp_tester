/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ServingNetworkFunctionID.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ServingNetworkFunctionID::ServingNetworkFunctionID() {
  m_AMFId = "";
  m_AMFIdIsSet = false;
}

ServingNetworkFunctionID::~ServingNetworkFunctionID() {}

void ServingNetworkFunctionID::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ServingNetworkFunctionID &o) {
  j = nlohmann::json();
  j["servingNetworkFunctionInformation"] =
      o.m_ServingNetworkFunctionInformation;
  if (o.aMFIdIsSet())
    j["aMFId"] = o.m_AMFId;
}

void from_json(const nlohmann::json &j, ServingNetworkFunctionID &o) {
  j.at("servingNetworkFunctionInformation")
      .get_to(o.m_ServingNetworkFunctionInformation);
  if (j.find("aMFId") != j.end()) {
    j.at("aMFId").get_to(o.m_AMFId);
    o.m_AMFIdIsSet = true;
  }
}

NFIdentification
ServingNetworkFunctionID::getServingNetworkFunctionInformation() const {
  return m_ServingNetworkFunctionInformation;
}
void ServingNetworkFunctionID::setServingNetworkFunctionInformation(
    NFIdentification const &value) {
  m_ServingNetworkFunctionInformation = value;
}
std::string ServingNetworkFunctionID::getAMFId() const { return m_AMFId; }
void ServingNetworkFunctionID::setAMFId(std::string const &value) {
  m_AMFId = value;
  m_AMFIdIsSet = true;
}
bool ServingNetworkFunctionID::aMFIdIsSet() const { return m_AMFIdIsSet; }
void ServingNetworkFunctionID::unsetAMFId() { m_AMFIdIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
