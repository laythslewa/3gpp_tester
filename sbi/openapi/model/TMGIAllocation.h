/**
 * GMDviaMBMSbyMB2
 * API for Group Message Delivery via MBMS by MB2 © 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * TMGIAllocation.h
 *
 * Represents an individual TMGI Allocation resource.
 */

#ifndef TMGIAllocation_H_
#define TMGIAllocation_H_

#include "MbmsLocArea.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents an individual TMGI Allocation resource.
/// </summary>
class TMGIAllocation {
public:
  TMGIAllocation();
  virtual ~TMGIAllocation();

  void validate();

  /////////////////////////////////////////////
  /// TMGIAllocation members

  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getSelf() const;
  void setSelf(std::string const &value);
  bool selfIsSet() const;
  void unsetSelf();
  /// <summary>
  /// A string used to indicate the features supported by an API that is used as
  /// defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a
  /// bitmask indicating supported features in hexadecimal representation Each
  /// character in the string shall take a value of \&quot;0\&quot; to
  /// \&quot;9\&quot;, \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to
  /// \&quot;F\&quot; and shall represent the support of 4 features as described
  /// in table 5.2.2-3. The most significant character representing the
  /// highest-numbered features shall appear first in the string, and the
  /// character representing features 1 to 4 shall appear last in the string.
  /// The list of features and their numbering (starting with 1) are defined
  /// separately for each API. If the string contains a lower number of
  /// characters than there are defined features for an API, all features that
  /// would be represented by characters that are not present in the string are
  /// not supported
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const &value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();
  /// <summary>
  /// string containing a local identifier followed by \&quot;@\&quot; and a
  /// domain identifier. Both the local identifier and the domain identifier
  /// shall be encoded as strings that do not contain any \&quot;@\&quot;
  /// characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more
  /// information.
  /// </summary>
  std::string getExternalGroupId() const;
  void setExternalGroupId(std::string const &value);
  bool externalGroupIdIsSet() const;
  void unsetExternalGroupId();
  /// <summary>
  ///
  /// </summary>
  MbmsLocArea getMbmsLocArea() const;
  void setMbmsLocArea(MbmsLocArea const &value);
  bool mbmsLocAreaIsSet() const;
  void unsetMbmsLocArea();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI with
  /// \&quot;readOnly&#x3D;true\&quot; property.
  /// </summary>
  std::string getTmgiExpiration() const;
  void setTmgiExpiration(std::string const &value);
  bool tmgiExpirationIsSet() const;
  void unsetTmgiExpiration();

  friend void to_json(nlohmann::json &j, const TMGIAllocation &o);
  friend void from_json(const nlohmann::json &j, TMGIAllocation &o);

protected:
  std::string m_Self;
  bool m_SelfIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
  std::string m_ExternalGroupId;
  bool m_ExternalGroupIdIsSet;
  MbmsLocArea m_MbmsLocArea;
  bool m_MbmsLocAreaIsSet;
  std::string m_TmgiExpiration;
  bool m_TmgiExpirationIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* TMGIAllocation_H_ */
