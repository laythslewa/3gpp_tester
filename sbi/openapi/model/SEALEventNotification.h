/**
 * SS_Events
 * API for SEAL Events management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SEALEventNotification.h
 *
 * Represents notification information of a SEAL Event.
 */

#ifndef SEALEventNotification_H_
#define SEALEventNotification_H_

#include "SEALEventDetail.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents notification information of a SEAL Event.
/// </summary>
class SEALEventNotification {
public:
  SEALEventNotification();
  virtual ~SEALEventNotification();

  void validate();

  /////////////////////////////////////////////
  /// SEALEventNotification members

  /// <summary>
  /// Identifier of the subscription resource.
  /// </summary>
  std::string getSubscriptionId() const;
  void setSubscriptionId(std::string const &value);
  /// <summary>
  /// Detailed notifications of individual events.
  /// </summary>
  std::vector<SEALEventDetail> &getEventDetails();
  void setEventDetails(std::vector<SEALEventDetail> const &value);

  friend void to_json(nlohmann::json &j, const SEALEventNotification &o);
  friend void from_json(const nlohmann::json &j, SEALEventNotification &o);

protected:
  std::string m_SubscriptionId;

  std::vector<SEALEventDetail> m_EventDetails;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SEALEventNotification_H_ */
