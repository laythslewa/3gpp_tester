/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LocalArea.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LocalArea::LocalArea() { m_Confidence = 0; }

LocalArea::~LocalArea() {}

void LocalArea::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LocalArea &o) {
  j = nlohmann::json();
  j["shape"] = o.m_Shape;
  j["localOrigin"] = o.m_LocalOrigin;
  j["point"] = o.m_Point;
  j["uncertaintyEllipse"] = o.m_UncertaintyEllipse;
  j["confidence"] = o.m_Confidence;
  j["uncertaintyEllipsoid"] = o.m_UncertaintyEllipsoid;
}

void from_json(const nlohmann::json &j, LocalArea &o) {
  j.at("shape").get_to(o.m_Shape);
  j.at("localOrigin").get_to(o.m_LocalOrigin);
  j.at("point").get_to(o.m_Point);
  j.at("uncertaintyEllipse").get_to(o.m_UncertaintyEllipse);
  j.at("confidence").get_to(o.m_Confidence);
  j.at("uncertaintyEllipsoid").get_to(o.m_UncertaintyEllipsoid);
}

SupportedGADShapes LocalArea::getShape() const { return m_Shape; }
void LocalArea::setShape(SupportedGADShapes const &value) { m_Shape = value; }
LocalOrigin LocalArea::getLocalOrigin() const { return m_LocalOrigin; }
void LocalArea::setLocalOrigin(LocalOrigin const &value) {
  m_LocalOrigin = value;
}
RelativeCartesianLocation LocalArea::getPoint() const { return m_Point; }
void LocalArea::setPoint(RelativeCartesianLocation const &value) {
  m_Point = value;
}
UncertaintyEllipse LocalArea::getUncertaintyEllipse() const {
  return m_UncertaintyEllipse;
}
void LocalArea::setUncertaintyEllipse(UncertaintyEllipse const &value) {
  m_UncertaintyEllipse = value;
}
int32_t LocalArea::getConfidence() const { return m_Confidence; }
void LocalArea::setConfidence(int32_t const value) { m_Confidence = value; }
UncertaintyEllipsoid LocalArea::getUncertaintyEllipsoid() const {
  return m_UncertaintyEllipsoid;
}
void LocalArea::setUncertaintyEllipsoid(UncertaintyEllipsoid const &value) {
  m_UncertaintyEllipsoid = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
