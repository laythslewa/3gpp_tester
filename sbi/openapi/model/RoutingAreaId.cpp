/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "RoutingAreaId.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RoutingAreaId::RoutingAreaId() {
  m_Lac = "";
  m_Rac = "";
}

RoutingAreaId::~RoutingAreaId() {}

void RoutingAreaId::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const RoutingAreaId &o) {
  j = nlohmann::json();
  j["plmnId"] = o.m_PlmnId;
  j["lac"] = o.m_Lac;
  j["rac"] = o.m_Rac;
}

void from_json(const nlohmann::json &j, RoutingAreaId &o) {
  j.at("plmnId").get_to(o.m_PlmnId);
  j.at("lac").get_to(o.m_Lac);
  j.at("rac").get_to(o.m_Rac);
}

PlmnId RoutingAreaId::getPlmnId() const { return m_PlmnId; }
void RoutingAreaId::setPlmnId(PlmnId const &value) { m_PlmnId = value; }
std::string RoutingAreaId::getLac() const { return m_Lac; }
void RoutingAreaId::setLac(std::string const &value) { m_Lac = value; }
std::string RoutingAreaId::getRac() const { return m_Rac; }
void RoutingAreaId::setRac(std::string const &value) { m_Rac = value; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
