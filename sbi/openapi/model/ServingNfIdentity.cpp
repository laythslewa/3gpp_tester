/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ServingNfIdentity.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ServingNfIdentity::ServingNfIdentity() {
  m_ServNfInstId = "";
  m_ServNfInstIdIsSet = false;
  m_GuamiIsSet = false;
  m_AnGwAddrIsSet = false;
  m_SgsnAddrIsSet = false;
}

ServingNfIdentity::~ServingNfIdentity() {}

void ServingNfIdentity::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ServingNfIdentity &o) {
  j = nlohmann::json();
  if (o.servNfInstIdIsSet())
    j["servNfInstId"] = o.m_ServNfInstId;
  if (o.guamiIsSet())
    j["guami"] = o.m_Guami;
  if (o.anGwAddrIsSet())
    j["anGwAddr"] = o.m_AnGwAddr;
  if (o.sgsnAddrIsSet())
    j["sgsnAddr"] = o.m_SgsnAddr;
}

void from_json(const nlohmann::json &j, ServingNfIdentity &o) {
  if (j.find("servNfInstId") != j.end()) {
    j.at("servNfInstId").get_to(o.m_ServNfInstId);
    o.m_ServNfInstIdIsSet = true;
  }
  if (j.find("guami") != j.end()) {
    j.at("guami").get_to(o.m_Guami);
    o.m_GuamiIsSet = true;
  }
  if (j.find("anGwAddr") != j.end()) {
    j.at("anGwAddr").get_to(o.m_AnGwAddr);
    o.m_AnGwAddrIsSet = true;
  }
  if (j.find("sgsnAddr") != j.end()) {
    j.at("sgsnAddr").get_to(o.m_SgsnAddr);
    o.m_SgsnAddrIsSet = true;
  }
}

std::string ServingNfIdentity::getServNfInstId() const {
  return m_ServNfInstId;
}
void ServingNfIdentity::setServNfInstId(std::string const &value) {
  m_ServNfInstId = value;
  m_ServNfInstIdIsSet = true;
}
bool ServingNfIdentity::servNfInstIdIsSet() const {
  return m_ServNfInstIdIsSet;
}
void ServingNfIdentity::unsetServNfInstId() { m_ServNfInstIdIsSet = false; }
Guami ServingNfIdentity::getGuami() const { return m_Guami; }
void ServingNfIdentity::setGuami(Guami const &value) {
  m_Guami = value;
  m_GuamiIsSet = true;
}
bool ServingNfIdentity::guamiIsSet() const { return m_GuamiIsSet; }
void ServingNfIdentity::unsetGuami() { m_GuamiIsSet = false; }
AnGwAddress ServingNfIdentity::getAnGwAddr() const { return m_AnGwAddr; }
void ServingNfIdentity::setAnGwAddr(AnGwAddress const &value) {
  m_AnGwAddr = value;
  m_AnGwAddrIsSet = true;
}
bool ServingNfIdentity::anGwAddrIsSet() const { return m_AnGwAddrIsSet; }
void ServingNfIdentity::unsetAnGwAddr() { m_AnGwAddrIsSet = false; }
SgsnAddress ServingNfIdentity::getSgsnAddr() const { return m_SgsnAddr; }
void ServingNfIdentity::setSgsnAddr(SgsnAddress const &value) {
  m_SgsnAddr = value;
  m_SgsnAddrIsSet = true;
}
bool ServingNfIdentity::sgsnAddrIsSet() const { return m_SgsnAddrIsSet; }
void ServingNfIdentity::unsetSgsnAddr() { m_SgsnAddrIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
