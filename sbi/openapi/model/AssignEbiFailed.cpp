/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AssignEbiFailed.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AssignEbiFailed::AssignEbiFailed() {
  m_PduSessionId = 0;
  m_FailedArpListIsSet = false;
}

AssignEbiFailed::~AssignEbiFailed() {}

void AssignEbiFailed::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AssignEbiFailed &o) {
  j = nlohmann::json();
  j["pduSessionId"] = o.m_PduSessionId;
  if (o.failedArpListIsSet() || !o.m_FailedArpList.empty())
    j["failedArpList"] = o.m_FailedArpList;
}

void from_json(const nlohmann::json &j, AssignEbiFailed &o) {
  j.at("pduSessionId").get_to(o.m_PduSessionId);
  if (j.find("failedArpList") != j.end()) {
    j.at("failedArpList").get_to(o.m_FailedArpList);
    o.m_FailedArpListIsSet = true;
  }
}

int32_t AssignEbiFailed::getPduSessionId() const { return m_PduSessionId; }
void AssignEbiFailed::setPduSessionId(int32_t const value) {
  m_PduSessionId = value;
}
std::vector<Arp> &AssignEbiFailed::getFailedArpList() {
  return m_FailedArpList;
}
void AssignEbiFailed::setFailedArpList(std::vector<Arp> const &value) {
  m_FailedArpList = value;
  m_FailedArpListIsSet = true;
}
bool AssignEbiFailed::failedArpListIsSet() const {
  return m_FailedArpListIsSet;
}
void AssignEbiFailed::unsetFailedArpList() { m_FailedArpListIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
