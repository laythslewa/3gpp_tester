/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AnnounceDiscDataForOpen.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AnnounceDiscDataForOpen::AnnounceDiscDataForOpen() {
  m_ProseAppId = "";
  m_ProseAppCode = "";
  m_ValidityTime = "";
  m_MetaData = "";
  m_MetaDataIsSet = false;
}

AnnounceDiscDataForOpen::~AnnounceDiscDataForOpen() {}

void AnnounceDiscDataForOpen::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AnnounceDiscDataForOpen &o) {
  j = nlohmann::json();
  j["proseAppId"] = o.m_ProseAppId;
  j["proseAppCode"] = o.m_ProseAppCode;
  j["validityTime"] = o.m_ValidityTime;
  if (o.metaDataIsSet())
    j["metaData"] = o.m_MetaData;
}

void from_json(const nlohmann::json &j, AnnounceDiscDataForOpen &o) {
  j.at("proseAppId").get_to(o.m_ProseAppId);
  j.at("proseAppCode").get_to(o.m_ProseAppCode);
  j.at("validityTime").get_to(o.m_ValidityTime);
  if (j.find("metaData") != j.end()) {
    j.at("metaData").get_to(o.m_MetaData);
    o.m_MetaDataIsSet = true;
  }
}

std::string AnnounceDiscDataForOpen::getProseAppId() const {
  return m_ProseAppId;
}
void AnnounceDiscDataForOpen::setProseAppId(std::string const &value) {
  m_ProseAppId = value;
}
std::string AnnounceDiscDataForOpen::getProseAppCode() const {
  return m_ProseAppCode;
}
void AnnounceDiscDataForOpen::setProseAppCode(std::string const &value) {
  m_ProseAppCode = value;
}
std::string AnnounceDiscDataForOpen::getValidityTime() const {
  return m_ValidityTime;
}
void AnnounceDiscDataForOpen::setValidityTime(std::string const &value) {
  m_ValidityTime = value;
}
std::string AnnounceDiscDataForOpen::getMetaData() const { return m_MetaData; }
void AnnounceDiscDataForOpen::setMetaData(std::string const &value) {
  m_MetaData = value;
  m_MetaDataIsSet = true;
}
bool AnnounceDiscDataForOpen::metaDataIsSet() const { return m_MetaDataIsSet; }
void AnnounceDiscDataForOpen::unsetMetaData() { m_MetaDataIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
