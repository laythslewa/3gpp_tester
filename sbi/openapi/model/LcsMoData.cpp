/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "LcsMoData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

LcsMoData::LcsMoData() { m_MoAssistanceDataTypesIsSet = false; }

LcsMoData::~LcsMoData() {}

void LcsMoData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const LcsMoData &o) {
  j = nlohmann::json();
  j["allowedServiceClasses"] = o.m_AllowedServiceClasses;
  if (o.moAssistanceDataTypesIsSet())
    j["moAssistanceDataTypes"] = o.m_MoAssistanceDataTypes;
}

void from_json(const nlohmann::json &j, LcsMoData &o) {
  j.at("allowedServiceClasses").get_to(o.m_AllowedServiceClasses);
  if (j.find("moAssistanceDataTypes") != j.end()) {
    j.at("moAssistanceDataTypes").get_to(o.m_MoAssistanceDataTypes);
    o.m_MoAssistanceDataTypesIsSet = true;
  }
}

std::vector<LcsMoServiceClass> &LcsMoData::getAllowedServiceClasses() {
  return m_AllowedServiceClasses;
}
void LcsMoData::setAllowedServiceClasses(
    std::vector<LcsMoServiceClass> const &value) {
  m_AllowedServiceClasses = value;
}
LcsBroadcastAssistanceTypesData LcsMoData::getMoAssistanceDataTypes() const {
  return m_MoAssistanceDataTypes;
}
void LcsMoData::setMoAssistanceDataTypes(
    LcsBroadcastAssistanceTypesData const &value) {
  m_MoAssistanceDataTypes = value;
  m_MoAssistanceDataTypesIsSet = true;
}
bool LcsMoData::moAssistanceDataTypesIsSet() const {
  return m_MoAssistanceDataTypesIsSet;
}
void LcsMoData::unsetMoAssistanceDataTypes() {
  m_MoAssistanceDataTypesIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
