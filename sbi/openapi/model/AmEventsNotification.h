/**
 * Npcf_AMPolicyAuthorization Service API
 * PCF Access and Mobility Policy Authorization Service. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmEventsNotification.h
 *
 * Describes the notification about the events occurred within an Individual
 * Application AM Context resource.
 */

#ifndef AmEventsNotification_H_
#define AmEventsNotification_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Describes the notification about the events occurred within an Individual
/// Application AM Context resource.
/// </summary>
class AmEventsNotification {
public:
  AmEventsNotification();
  virtual ~AmEventsNotification();

  void validate();

  /////////////////////////////////////////////
  /// AmEventsNotification members

  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getEvSubsUri() const;
  void setEvSubsUri(std::string const &value);
  bool evSubsUriIsSet() const;
  void unsetEvSubsUri();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getEvNotifs();
  void setEvNotifs(std::vector<std::string> const &value);

  friend void to_json(nlohmann::json &j, const AmEventsNotification &o);
  friend void from_json(const nlohmann::json &j, AmEventsNotification &o);

protected:
  std::string m_EvSubsUri;
  bool m_EvSubsUriIsSet;
  std::vector<std::string> m_EvNotifs;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AmEventsNotification_H_ */
