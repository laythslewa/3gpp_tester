/**
 * 3gpp-pfd-management
 * API for PFD management. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UserPlaneLocationArea.h
 *
 * Represents location area(s) of the user plane functions which are unable to
 * enforce the provisioned PFD(s) successfully.
 */

#ifndef UserPlaneLocationArea_H_
#define UserPlaneLocationArea_H_

#include "LocationArea.h"
#include "LocationArea5G.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents location area(s) of the user plane functions which are unable to
/// enforce the provisioned PFD(s) successfully.
/// </summary>
class UserPlaneLocationArea {
public:
  UserPlaneLocationArea();
  virtual ~UserPlaneLocationArea();

  void validate();

  /////////////////////////////////////////////
  /// UserPlaneLocationArea members

  /// <summary>
  ///
  /// </summary>
  LocationArea getLocationArea() const;
  void setLocationArea(LocationArea const &value);
  bool locationAreaIsSet() const;
  void unsetLocationArea();
  /// <summary>
  ///
  /// </summary>
  LocationArea5G getLocationArea5G() const;
  void setLocationArea5G(LocationArea5G const &value);
  bool locationArea5GIsSet() const;
  void unsetLocationArea5G();
  /// <summary>
  /// Identifies a list of DNAI which the user plane functions support.
  /// </summary>
  std::vector<std::string> &getDnais();
  void setDnais(std::vector<std::string> const &value);
  bool dnaisIsSet() const;
  void unsetDnais();

  friend void to_json(nlohmann::json &j, const UserPlaneLocationArea &o);
  friend void from_json(const nlohmann::json &j, UserPlaneLocationArea &o);

protected:
  LocationArea m_LocationArea;
  bool m_LocationAreaIsSet;
  LocationArea5G m_LocationArea5G;
  bool m_LocationArea5GIsSet;
  std::vector<std::string> m_Dnais;
  bool m_DnaisIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* UserPlaneLocationArea_H_ */
