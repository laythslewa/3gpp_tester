/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AnnounceDiscDataForRestricted.h
 *
 * Represents Data for restricted discovery used to request the authorization to
 * announce for a UE
 */

#ifndef AnnounceDiscDataForRestricted_H_
#define AnnounceDiscDataForRestricted_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents Data for restricted discovery used to request the authorization
/// to announce for a UE
/// </summary>
class AnnounceDiscDataForRestricted {
public:
  AnnounceDiscDataForRestricted();
  virtual ~AnnounceDiscDataForRestricted();

  void validate();

  /////////////////////////////////////////////
  /// AnnounceDiscDataForRestricted members

  /// <summary>
  /// Contains the RPAUID.
  /// </summary>
  std::string getRpauid() const;
  void setRpauid(std::string const &value);
  /// <summary>
  /// Contains the Application ID.
  /// </summary>
  std::string getAppId() const;
  void setAppId(std::string const &value);
  /// <summary>
  /// Contains the ProSe Restricted Code.
  /// </summary>
  std::string getProseRestrictedCode() const;
  void setProseRestrictedCode(std::string const &value);
  bool proseRestrictedCodeIsSet() const;
  void unsetProseRestrictedCode();
  /// <summary>
  /// Contains the ProSe Restricted Prefix.
  /// </summary>
  std::string getProseRestrictedPrefix() const;
  void setProseRestrictedPrefix(std::string const &value);
  bool proseRestrictedPrefixIsSet() const;
  void unsetProseRestrictedPrefix();
  /// <summary>
  /// Contains the metadata.
  /// </summary>
  std::string getMetaData() const;
  void setMetaData(std::string const &value);
  bool metaDataIsSet() const;
  void unsetMetaData();
  /// <summary>
  /// Contains the Restricted Code Suffix pool.
  /// </summary>
  std::string getCodeSuffixPool() const;
  void setCodeSuffixPool(std::string const &value);
  bool codeSuffixPoolIsSet() const;
  void unsetCodeSuffixPool();

  friend void to_json(nlohmann::json &j,
                      const AnnounceDiscDataForRestricted &o);
  friend void from_json(const nlohmann::json &j,
                        AnnounceDiscDataForRestricted &o);

protected:
  std::string m_Rpauid;

  std::string m_AppId;

  std::string m_ProseRestrictedCode;
  bool m_ProseRestrictedCodeIsSet;
  std::string m_ProseRestrictedPrefix;
  bool m_ProseRestrictedPrefixIsSet;
  std::string m_MetaData;
  bool m_MetaDataIsSet;
  std::string m_CodeSuffixPool;
  bool m_CodeSuffixPoolIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AnnounceDiscDataForRestricted_H_ */
