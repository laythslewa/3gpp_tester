/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AerialUeSubscriptionInfo.h
 *
 * Contains the Aerial UE Subscription Information, it at least contains the
 * Aerial UE Indication.
 */

#ifndef AerialUeSubscriptionInfo_H_
#define AerialUeSubscriptionInfo_H_

#include "AerialUeIndication.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the Aerial UE Subscription Information, it at least contains the
/// Aerial UE Indication.
/// </summary>
class AerialUeSubscriptionInfo {
public:
  AerialUeSubscriptionInfo();
  virtual ~AerialUeSubscriptionInfo();

  void validate();

  /////////////////////////////////////////////
  /// AerialUeSubscriptionInfo members

  /// <summary>
  ///
  /// </summary>
  AerialUeIndication getAerialUeInd() const;
  void setAerialUeInd(AerialUeIndication const &value);
  /// <summary>
  /// String identifying a Gpsi shall contain either an External Id or an
  /// MSISDN. It shall be formatted as follows -External Identifier&#x3D;
  /// \&quot;extid-&lt;extid&gt;, where &lt;extid&gt; shall be formatted
  /// according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
  /// Identifier.
  /// </summary>
  std::string getR3gppUavId() const;
  void setR3gppUavId(std::string const &value);
  bool r3gppUavIdIsSet() const;
  void unsetr_3gppUavId();

  friend void to_json(nlohmann::json &j, const AerialUeSubscriptionInfo &o);
  friend void from_json(const nlohmann::json &j, AerialUeSubscriptionInfo &o);

protected:
  AerialUeIndication m_AerialUeInd;

  std::string m_r_3gppUavId;
  bool m_r_3gppUavIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AerialUeSubscriptionInfo_H_ */
