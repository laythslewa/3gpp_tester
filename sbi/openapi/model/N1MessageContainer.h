/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * N1MessageContainer.h
 *
 * N1 Message container
 */

#ifndef N1MessageContainer_H_
#define N1MessageContainer_H_

#include "N1MessageClass.h"
#include "RefToBinaryData.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// N1 Message container
/// </summary>
class N1MessageContainer {
public:
  N1MessageContainer();
  virtual ~N1MessageContainer();

  void validate();

  /////////////////////////////////////////////
  /// N1MessageContainer members

  /// <summary>
  ///
  /// </summary>
  N1MessageClass getN1MessageClass() const;
  void setN1MessageClass(N1MessageClass const &value);
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getN1MessageContent() const;
  void setN1MessageContent(RefToBinaryData const &value);
  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getNfId() const;
  void setNfId(std::string const &value);
  bool nfIdIsSet() const;
  void unsetNfId();
  /// <summary>
  ///
  /// </summary>
  std::string getServiceInstanceId() const;
  void setServiceInstanceId(std::string const &value);
  bool serviceInstanceIdIsSet() const;
  void unsetServiceInstanceId();

  friend void to_json(nlohmann::json &j, const N1MessageContainer &o);
  friend void from_json(const nlohmann::json &j, N1MessageContainer &o);

protected:
  N1MessageClass m_N1MessageClass;

  RefToBinaryData m_N1MessageContent;

  std::string m_NfId;
  bool m_NfIdIsSet;
  std::string m_ServiceInstanceId;
  bool m_ServiceInstanceIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* N1MessageContainer_H_ */
