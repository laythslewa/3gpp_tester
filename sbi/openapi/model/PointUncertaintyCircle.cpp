/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PointUncertaintyCircle.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PointUncertaintyCircle::PointUncertaintyCircle() { m_Uncertainty = 0.0f; }

PointUncertaintyCircle::~PointUncertaintyCircle() {}

void PointUncertaintyCircle::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PointUncertaintyCircle &o) {
  j = nlohmann::json();
  j["shape"] = o.m_Shape;
  j["point"] = o.m_Point;
  j["uncertainty"] = o.m_Uncertainty;
}

void from_json(const nlohmann::json &j, PointUncertaintyCircle &o) {
  j.at("shape").get_to(o.m_Shape);
  j.at("point").get_to(o.m_Point);
  j.at("uncertainty").get_to(o.m_Uncertainty);
}

SupportedGADShapes PointUncertaintyCircle::getShape() const { return m_Shape; }
void PointUncertaintyCircle::setShape(SupportedGADShapes const &value) {
  m_Shape = value;
}
GeographicalCoordinates PointUncertaintyCircle::getPoint() const {
  return m_Point;
}
void PointUncertaintyCircle::setPoint(GeographicalCoordinates const &value) {
  m_Point = value;
}
float PointUncertaintyCircle::getUncertainty() const { return m_Uncertainty; }
void PointUncertaintyCircle::setUncertainty(float const value) {
  m_Uncertainty = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
