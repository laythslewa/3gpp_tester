/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. © 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AnalyticsEvent.h
 *
 * Possible values are - UE_MOBILITY: The AF requests to be notified about
 * analytics information of UE mobility. - UE_COMM: The AF requests to be
 * notified about analytics information of UE communication. -
 * ABNORMAL_BEHAVIOR: The AF requests to be notified about analytics information
 * of UE’s abnormal behavior. - CONGESTION: The AF requests to be notified about
 * analytics information of user data congestion information.  -
 * NETWORK_PERFORMANCE: The AF requests to be notified about analytics
 * information of network performance.  - QOS_SUSTAINABILITY: The AF requests to
 * be notified about analytics information of QoS sustainability.
 */

#ifndef AnalyticsEvent_H_
#define AnalyticsEvent_H_

#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Possible values are - UE_MOBILITY: The AF requests to be notified about
/// analytics information of UE mobility. - UE_COMM: The AF requests to be
/// notified about analytics information of UE communication. -
/// ABNORMAL_BEHAVIOR: The AF requests to be notified about analytics
/// information of UE’s abnormal behavior. - CONGESTION: The AF requests to be
/// notified about analytics information of user data congestion information.  -
/// NETWORK_PERFORMANCE: The AF requests to be notified about analytics
/// information of network performance.  - QOS_SUSTAINABILITY: The AF requests
/// to be notified about analytics information of QoS sustainability.
/// </summary>
class AnalyticsEvent {
public:
  AnalyticsEvent();
  virtual ~AnalyticsEvent();

  void validate();

  /////////////////////////////////////////////
  /// AnalyticsEvent members

  friend void to_json(nlohmann::json &j, const AnalyticsEvent &o);
  friend void from_json(const nlohmann::json &j, AnalyticsEvent &o);

protected:
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AnalyticsEvent_H_ */
