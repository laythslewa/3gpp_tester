/**
 * Nnef_PFDmanagement Service API
 * Packet Flow Description Management Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PFDOfApplicationsApi.h
 *
 *
 */

#ifndef PFDOfApplicationsApi_H_
#define PFDOfApplicationsApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "PfdDataForApp.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class PFDOfApplicationsApi {
public:
  PFDOfApplicationsApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~PFDOfApplicationsApi() {}
  void init();

  const std::string base = "/nnef-pfdmanagement/v1";

private:
  void setupRoutes();

  void nnef_pf_dmanagement_all_fetch_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);
  void pfd_of_applications_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Retrieve PFDs for all applications or for one or multiple applications
  /// with query parameter.
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="applicationIds">The required application identifier(s) for
  /// the returned PFDs.</param> <param name="supportedFeatures">To filter
  /// irrelevant responses related to unsupported features (optional, default to
  /// &quot;&quot;)</param>
  virtual void nnef_pf_dmanagement_all_fetch(
      const Pistache::Optional<std::vector<std::string>> &applicationIds,
      const Pistache::Optional<std::string> &supportedFeatures,
      Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PFDOfApplicationsApi_H_ */
