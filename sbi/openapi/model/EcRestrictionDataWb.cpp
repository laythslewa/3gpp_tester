/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "EcRestrictionDataWb.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

EcRestrictionDataWb::EcRestrictionDataWb() {
  m_EcModeARestricted = false;
  m_EcModeARestrictedIsSet = false;
  m_EcModeBRestricted = false;
}

EcRestrictionDataWb::~EcRestrictionDataWb() {}

void EcRestrictionDataWb::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const EcRestrictionDataWb &o) {
  j = nlohmann::json();
  if (o.ecModeARestrictedIsSet())
    j["ecModeARestricted"] = o.m_EcModeARestricted;
  j["ecModeBRestricted"] = o.m_EcModeBRestricted;
}

void from_json(const nlohmann::json &j, EcRestrictionDataWb &o) {
  if (j.find("ecModeARestricted") != j.end()) {
    j.at("ecModeARestricted").get_to(o.m_EcModeARestricted);
    o.m_EcModeARestrictedIsSet = true;
  }
  j.at("ecModeBRestricted").get_to(o.m_EcModeBRestricted);
}

bool EcRestrictionDataWb::isEcModeARestricted() const {
  return m_EcModeARestricted;
}
void EcRestrictionDataWb::setEcModeARestricted(bool const value) {
  m_EcModeARestricted = value;
  m_EcModeARestrictedIsSet = true;
}
bool EcRestrictionDataWb::ecModeARestrictedIsSet() const {
  return m_EcModeARestrictedIsSet;
}
void EcRestrictionDataWb::unsetEcModeARestricted() {
  m_EcModeARestrictedIsSet = false;
}
bool EcRestrictionDataWb::isEcModeBRestricted() const {
  return m_EcModeBRestricted;
}
void EcRestrictionDataWb::setEcModeBRestricted(bool const value) {
  m_EcModeBRestricted = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
