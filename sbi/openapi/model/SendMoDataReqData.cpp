/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SendMoDataReqData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SendMoDataReqData::SendMoDataReqData() {
  m_MoExpDataCounterIsSet = false;
  m_UeLocationIsSet = false;
}

SendMoDataReqData::~SendMoDataReqData() {}

void SendMoDataReqData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SendMoDataReqData &o) {
  j = nlohmann::json();
  j["moData"] = o.m_MoData;
  if (o.moExpDataCounterIsSet())
    j["moExpDataCounter"] = o.m_MoExpDataCounter;
  if (o.ueLocationIsSet())
    j["ueLocation"] = o.m_UeLocation;
}

void from_json(const nlohmann::json &j, SendMoDataReqData &o) {
  j.at("moData").get_to(o.m_MoData);
  if (j.find("moExpDataCounter") != j.end()) {
    j.at("moExpDataCounter").get_to(o.m_MoExpDataCounter);
    o.m_MoExpDataCounterIsSet = true;
  }
  if (j.find("ueLocation") != j.end()) {
    j.at("ueLocation").get_to(o.m_UeLocation);
    o.m_UeLocationIsSet = true;
  }
}

RefToBinaryData SendMoDataReqData::getMoData() const { return m_MoData; }
void SendMoDataReqData::setMoData(RefToBinaryData const &value) {
  m_MoData = value;
}
MoExpDataCounter SendMoDataReqData::getMoExpDataCounter() const {
  return m_MoExpDataCounter;
}
void SendMoDataReqData::setMoExpDataCounter(MoExpDataCounter const &value) {
  m_MoExpDataCounter = value;
  m_MoExpDataCounterIsSet = true;
}
bool SendMoDataReqData::moExpDataCounterIsSet() const {
  return m_MoExpDataCounterIsSet;
}
void SendMoDataReqData::unsetMoExpDataCounter() {
  m_MoExpDataCounterIsSet = false;
}
UserLocation SendMoDataReqData::getUeLocation() const { return m_UeLocation; }
void SendMoDataReqData::setUeLocation(UserLocation const &value) {
  m_UeLocation = value;
  m_UeLocationIsSet = true;
}
bool SendMoDataReqData::ueLocationIsSet() const { return m_UeLocationIsSet; }
void SendMoDataReqData::unsetUeLocation() { m_UeLocationIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
