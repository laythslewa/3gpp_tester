/**
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 2020, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "RanNasRelCause.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RanNasRelCause::RanNasRelCause() {
  m_NgApCauseIsSet = false;
  m_r_5gMmCause = 0;
  m_r_5gMmCauseIsSet = false;
  m_r_5gSmCause = 0;
  m_r_5gSmCauseIsSet = false;
  m_EpsCause = "";
  m_EpsCauseIsSet = false;
}

RanNasRelCause::~RanNasRelCause() {}

void RanNasRelCause::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const RanNasRelCause &o) {
  j = nlohmann::json();
  if (o.ngApCauseIsSet())
    j["ngApCause"] = o.m_NgApCause;
  if (o.r5gMmCauseIsSet())
    j["5gMmCause"] = o.m_r_5gMmCause;
  if (o.r5gSmCauseIsSet())
    j["5gSmCause"] = o.m_r_5gSmCause;
  if (o.epsCauseIsSet())
    j["epsCause"] = o.m_EpsCause;
}

void from_json(const nlohmann::json &j, RanNasRelCause &o) {
  if (j.find("ngApCause") != j.end()) {
    j.at("ngApCause").get_to(o.m_NgApCause);
    o.m_NgApCauseIsSet = true;
  }
  if (j.find("5gMmCause") != j.end()) {
    j.at("5gMmCause").get_to(o.m_r_5gMmCause);
    o.m_r_5gMmCauseIsSet = true;
  }
  if (j.find("5gSmCause") != j.end()) {
    j.at("5gSmCause").get_to(o.m_r_5gSmCause);
    o.m_r_5gSmCauseIsSet = true;
  }
  if (j.find("epsCause") != j.end()) {
    j.at("epsCause").get_to(o.m_EpsCause);
    o.m_EpsCauseIsSet = true;
  }
}

NgApCause RanNasRelCause::getNgApCause() const { return m_NgApCause; }
void RanNasRelCause::setNgApCause(NgApCause const &value) {
  m_NgApCause = value;
  m_NgApCauseIsSet = true;
}
bool RanNasRelCause::ngApCauseIsSet() const { return m_NgApCauseIsSet; }
void RanNasRelCause::unsetNgApCause() { m_NgApCauseIsSet = false; }
int32_t RanNasRelCause::getR5gMmCause() const { return m_r_5gMmCause; }
void RanNasRelCause::setR5gMmCause(int32_t const value) {
  m_r_5gMmCause = value;
  m_r_5gMmCauseIsSet = true;
}
bool RanNasRelCause::r5gMmCauseIsSet() const { return m_r_5gMmCauseIsSet; }
void RanNasRelCause::unsetr_5gMmCause() { m_r_5gMmCauseIsSet = false; }
int32_t RanNasRelCause::getR5gSmCause() const { return m_r_5gSmCause; }
void RanNasRelCause::setR5gSmCause(int32_t const value) {
  m_r_5gSmCause = value;
  m_r_5gSmCauseIsSet = true;
}
bool RanNasRelCause::r5gSmCauseIsSet() const { return m_r_5gSmCauseIsSet; }
void RanNasRelCause::unsetr_5gSmCause() { m_r_5gSmCauseIsSet = false; }
std::string RanNasRelCause::getEpsCause() const { return m_EpsCause; }
void RanNasRelCause::setEpsCause(std::string const &value) {
  m_EpsCause = value;
  m_EpsCauseIsSet = true;
}
bool RanNasRelCause::epsCauseIsSet() const { return m_EpsCauseIsSet; }
void RanNasRelCause::unsetEpsCause() { m_EpsCauseIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
