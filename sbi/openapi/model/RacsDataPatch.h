/**
 * Nucmf_Provisioning
 * UCMF_Provisioning Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RacsDataPatch.h
 *
 * Represents a modification of a UE radio capability data provided by the NF
 * service consumer.
 */

#ifndef RacsDataPatch_H_
#define RacsDataPatch_H_

#include "RacsConfigurationRm.h"
#include <map>
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a modification of a UE radio capability data provided by the NF
/// service consumer.
/// </summary>
class RacsDataPatch {
public:
  RacsDataPatch();
  virtual ~RacsDataPatch();

  void validate();

  /////////////////////////////////////////////
  /// RacsDataPatch members

  /// <summary>
  /// Identifies the configuration related to manufacturer specific UE radio
  /// capability. Each element uniquely identifies an RACS configuration for an
  /// RACS ID and is identified in the map via the RACS ID as key.
  /// </summary>
  std::map<std::string, RacsConfigurationRm> &getRacsConfigs();
  void setRacsConfigs(std::map<std::string, RacsConfigurationRm> const &value);
  bool racsConfigsIsSet() const;
  void unsetRacsConfigs();

  friend void to_json(nlohmann::json &j, const RacsDataPatch &o);
  friend void from_json(const nlohmann::json &j, RacsDataPatch &o);

protected:
  std::map<std::string, RacsConfigurationRm> m_RacsConfigs;
  bool m_RacsConfigsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RacsDataPatch_H_ */
