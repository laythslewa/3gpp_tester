/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NsiLoadLevelInfo.h
 *
 * Represents the network slice and optionally the associated network slice
 * instance and the load level information.
 */

#ifndef NsiLoadLevelInfo_H_
#define NsiLoadLevelInfo_H_

#include "Snssai.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the network slice and optionally the associated network slice
/// instance and the load level information.
/// </summary>
class NsiLoadLevelInfo {
public:
  NsiLoadLevelInfo();
  virtual ~NsiLoadLevelInfo();

  void validate();

  /////////////////////////////////////////////
  /// NsiLoadLevelInfo members

  /// <summary>
  /// Load level information of the network slice and the optionally associated
  /// network slice instance.
  /// </summary>
  int32_t getLoadLevelInformation() const;
  void setLoadLevelInformation(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const &value);
  /// <summary>
  /// Contains the Identifier of the selected Network Slice instance
  /// </summary>
  std::string getNsiId() const;
  void setNsiId(std::string const &value);
  bool nsiIdIsSet() const;
  void unsetNsiId();

  friend void to_json(nlohmann::json &j, const NsiLoadLevelInfo &o);
  friend void from_json(const nlohmann::json &j, NsiLoadLevelInfo &o);

protected:
  int32_t m_LoadLevelInformation;

  Snssai m_Snssai;

  std::string m_NsiId;
  bool m_NsiIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NsiLoadLevelInfo_H_ */
