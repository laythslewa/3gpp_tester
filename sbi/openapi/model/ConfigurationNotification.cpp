/**
 * 3gpp-network-parameter-configuration
 * API for network parameter configuration. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ConfigurationNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ConfigurationNotification::ConfigurationNotification() {
  m_Configuration = "";
  m_ConfigResultsIsSet = false;
  m_AppliedParamIsSet = false;
}

ConfigurationNotification::~ConfigurationNotification() {}

void ConfigurationNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ConfigurationNotification &o) {
  j = nlohmann::json();
  j["configuration"] = o.m_Configuration;
  if (o.configResultsIsSet() || !o.m_ConfigResults.empty())
    j["configResults"] = o.m_ConfigResults;
  if (o.appliedParamIsSet())
    j["appliedParam"] = o.m_AppliedParam;
}

void from_json(const nlohmann::json &j, ConfigurationNotification &o) {
  j.at("configuration").get_to(o.m_Configuration);
  if (j.find("configResults") != j.end()) {
    j.at("configResults").get_to(o.m_ConfigResults);
    o.m_ConfigResultsIsSet = true;
  }
  if (j.find("appliedParam") != j.end()) {
    j.at("appliedParam").get_to(o.m_AppliedParam);
    o.m_AppliedParamIsSet = true;
  }
}

std::string ConfigurationNotification::getConfiguration() const {
  return m_Configuration;
}
void ConfigurationNotification::setConfiguration(std::string const &value) {
  m_Configuration = value;
}
std::vector<ConfigResult> &ConfigurationNotification::getConfigResults() {
  return m_ConfigResults;
}
void ConfigurationNotification::setConfigResults(
    std::vector<ConfigResult> const &value) {
  m_ConfigResults = value;
  m_ConfigResultsIsSet = true;
}
bool ConfigurationNotification::configResultsIsSet() const {
  return m_ConfigResultsIsSet;
}
void ConfigurationNotification::unsetConfigResults() {
  m_ConfigResultsIsSet = false;
}
AppliedParameterConfiguration
ConfigurationNotification::getAppliedParam() const {
  return m_AppliedParam;
}
void ConfigurationNotification::setAppliedParam(
    AppliedParameterConfiguration const &value) {
  m_AppliedParam = value;
  m_AppliedParamIsSet = true;
}
bool ConfigurationNotification::appliedParamIsSet() const {
  return m_AppliedParamIsSet;
}
void ConfigurationNotification::unsetAppliedParam() {
  m_AppliedParamIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
