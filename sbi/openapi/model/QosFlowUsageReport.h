/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * QosFlowUsageReport.h
 *
 *
 */

#ifndef QosFlowUsageReport_H_
#define QosFlowUsageReport_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class QosFlowUsageReport {
public:
  QosFlowUsageReport();
  virtual ~QosFlowUsageReport();

  void validate();

  /////////////////////////////////////////////
  /// QosFlowUsageReport members

  /// <summary>
  /// Unsigned integer identifying a QoS flow, within the range 0 to 63.
  /// </summary>
  int32_t getQfi() const;
  void setQfi(int32_t const value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getStartTimeStamp() const;
  void setStartTimeStamp(std::string const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getEndTimeStamp() const;
  void setEndTimeStamp(std::string const &value);
  /// <summary>
  /// string with format \&quot;int64\&quot; as defined in OpenAPI.
  /// </summary>
  int64_t getDownlinkVolume() const;
  void setDownlinkVolume(int64_t const value);
  /// <summary>
  /// string with format \&quot;int64\&quot; as defined in OpenAPI.
  /// </summary>
  int64_t getUplinkVolume() const;
  void setUplinkVolume(int64_t const value);

  friend void to_json(nlohmann::json &j, const QosFlowUsageReport &o);
  friend void from_json(const nlohmann::json &j, QosFlowUsageReport &o);

protected:
  int32_t m_Qfi;

  std::string m_StartTimeStamp;

  std::string m_EndTimeStamp;

  int64_t m_DownlinkVolume;

  int64_t m_UplinkVolume;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* QosFlowUsageReport_H_ */
