/**
 * NSSF NSSAI Availability
 * NSSF NSSAI Availability Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NssfEventNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NssfEventNotification::NssfEventNotification() { m_SubscriptionId = ""; }

NssfEventNotification::~NssfEventNotification() {}

void NssfEventNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NssfEventNotification &o) {
  j = nlohmann::json();
  j["subscriptionId"] = o.m_SubscriptionId;
  j["authorizedNssaiAvailabilityData"] = o.m_AuthorizedNssaiAvailabilityData;
}

void from_json(const nlohmann::json &j, NssfEventNotification &o) {
  j.at("subscriptionId").get_to(o.m_SubscriptionId);
  j.at("authorizedNssaiAvailabilityData")
      .get_to(o.m_AuthorizedNssaiAvailabilityData);
}

std::string NssfEventNotification::getSubscriptionId() const {
  return m_SubscriptionId;
}
void NssfEventNotification::setSubscriptionId(std::string const &value) {
  m_SubscriptionId = value;
}
std::vector<AuthorizedNssaiAvailabilityData> &
NssfEventNotification::getAuthorizedNssaiAvailabilityData() {
  return m_AuthorizedNssaiAvailabilityData;
}
void NssfEventNotification::setAuthorizedNssaiAvailabilityData(
    std::vector<AuthorizedNssaiAvailabilityData> const &value) {
  m_AuthorizedNssaiAvailabilityData = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
