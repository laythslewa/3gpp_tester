/**
 * VAE_FileDistribution
 * API for VAE File Distribution Service Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * FileList.h
 *
 * Represents a file list.
 */

#ifndef FileList_H_
#define FileList_H_

#include "FileStatus.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a file list.
/// </summary>
class FileList {
public:
  FileList();
  virtual ~FileList();

  void validate();

  /////////////////////////////////////////////
  /// FileList members

  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getFileUri() const;
  void setFileUri(std::string const &value);
  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getFileDisplayUri() const;
  void setFileDisplayUri(std::string const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getFileEarFetchTime() const;
  void setFileEarFetchTime(std::string const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getFileLatFetchTime() const;
  void setFileLatFetchTime(std::string const &value);
  /// <summary>
  /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
  /// </summary>
  int32_t getFileSize() const;
  void setFileSize(int32_t const value);
  bool fileSizeIsSet() const;
  void unsetFileSize();
  /// <summary>
  ///
  /// </summary>
  FileStatus getFileStatus() const;
  void setFileStatus(FileStatus const &value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getCompletionTime() const;
  void setCompletionTime(std::string const &value);
  /// <summary>
  /// indicating a time in seconds.
  /// </summary>
  int32_t getKeepUpdateInterval() const;
  void setKeepUpdateInterval(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  bool isUniAvailability() const;
  void setUniAvailability(bool const value);
  bool uniAvailabilityIsSet() const;
  void unsetUniAvailability();
  /// <summary>
  ///
  /// </summary>
  int32_t getFileRepetition() const;
  void setFileRepetition(int32_t const value);
  bool fileRepetitionIsSet() const;
  void unsetFileRepetition();

  friend void to_json(nlohmann::json &j, const FileList &o);
  friend void from_json(const nlohmann::json &j, FileList &o);

protected:
  std::string m_FileUri;

  std::string m_FileDisplayUri;

  std::string m_FileEarFetchTime;

  std::string m_FileLatFetchTime;

  int32_t m_FileSize;
  bool m_FileSizeIsSet;
  FileStatus m_FileStatus;

  std::string m_CompletionTime;

  int32_t m_KeepUpdateInterval;

  bool m_UniAvailability;
  bool m_UniAvailabilityIsSet;
  int32_t m_FileRepetition;
  bool m_FileRepetitionIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* FileList_H_ */
