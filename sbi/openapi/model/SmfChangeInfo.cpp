/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SmfChangeInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SmfChangeInfo::SmfChangeInfo() {}

SmfChangeInfo::~SmfChangeInfo() {}

void SmfChangeInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SmfChangeInfo &o) {
  j = nlohmann::json();
  j["pduSessionIdList"] = o.m_PduSessionIdList;
  j["smfChangeInd"] = o.m_SmfChangeInd;
}

void from_json(const nlohmann::json &j, SmfChangeInfo &o) {
  j.at("pduSessionIdList").get_to(o.m_PduSessionIdList);
  j.at("smfChangeInd").get_to(o.m_SmfChangeInd);
}

std::vector<int32_t> &SmfChangeInfo::getPduSessionIdList() {
  return m_PduSessionIdList;
}
void SmfChangeInfo::setPduSessionIdList(std::vector<int32_t> const value) {
  m_PduSessionIdList = value;
}
SmfChangeIndication SmfChangeInfo::getSmfChangeInd() const {
  return m_SmfChangeInd;
}
void SmfChangeInfo::setSmfChangeInd(SmfChangeIndication const &value) {
  m_SmfChangeInd = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
