/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ReportingLevel.h
 *
 * Possible values are - SER_ID_LEVEL: Indicates that the usage shall be
 * reported on service id and rating group combination level. - RAT_GR_LEVEL:
 * Indicates that the usage shall be reported on rating group level. -
 * SPON_CON_LEVEL: Indicates that the usage shall be reported on sponsor
 * identity and rating group combination level.
 */

#ifndef ReportingLevel_H_
#define ReportingLevel_H_

#include "NullValue.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Possible values are - SER_ID_LEVEL: Indicates that the usage shall be
/// reported on service id and rating group combination level. - RAT_GR_LEVEL:
/// Indicates that the usage shall be reported on rating group level. -
/// SPON_CON_LEVEL: Indicates that the usage shall be reported on sponsor
/// identity and rating group combination level.
/// </summary>
class ReportingLevel {
public:
  ReportingLevel();
  virtual ~ReportingLevel();

  void validate();

  /////////////////////////////////////////////
  /// ReportingLevel members

  friend void to_json(nlohmann::json &j, const ReportingLevel &o);
  friend void from_json(const nlohmann::json &j, ReportingLevel &o);

protected:
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ReportingLevel_H_ */
