/**
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PduSessionTsnBridge.h
 *
 * Contains the new TSC user plane node information and may contain the DS-TT
 * port and/or NW-TT port management information.
 */

#ifndef PduSessionTsnBridge_H_
#define PduSessionTsnBridge_H_

#include "BridgeManagementContainer.h"
#include "PortManagementContainer.h"
#include "TsnBridgeInfo.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the new TSC user plane node information and may contain the DS-TT
/// port and/or NW-TT port management information.
/// </summary>
class PduSessionTsnBridge {
public:
  PduSessionTsnBridge();
  virtual ~PduSessionTsnBridge();

  void validate();

  /////////////////////////////////////////////
  /// PduSessionTsnBridge members

  /// <summary>
  ///
  /// </summary>
  TsnBridgeInfo getTsnBridgeInfo() const;
  void setTsnBridgeInfo(TsnBridgeInfo const &value);
  /// <summary>
  ///
  /// </summary>
  BridgeManagementContainer getTsnBridgeManCont() const;
  void setTsnBridgeManCont(BridgeManagementContainer const &value);
  bool tsnBridgeManContIsSet() const;
  void unsetTsnBridgeManCont();
  /// <summary>
  ///
  /// </summary>
  PortManagementContainer getTsnPortManContDstt() const;
  void setTsnPortManContDstt(PortManagementContainer const &value);
  bool tsnPortManContDsttIsSet() const;
  void unsetTsnPortManContDstt();
  /// <summary>
  ///
  /// </summary>
  std::vector<PortManagementContainer> &getTsnPortManContNwtts();
  void
  setTsnPortManContNwtts(std::vector<PortManagementContainer> const &value);
  bool tsnPortManContNwttsIsSet() const;
  void unsetTsnPortManContNwtts();

  friend void to_json(nlohmann::json &j, const PduSessionTsnBridge &o);
  friend void from_json(const nlohmann::json &j, PduSessionTsnBridge &o);

protected:
  TsnBridgeInfo m_TsnBridgeInfo;

  BridgeManagementContainer m_TsnBridgeManCont;
  bool m_TsnBridgeManContIsSet;
  PortManagementContainer m_TsnPortManContDstt;
  bool m_TsnPortManContDsttIsSet;
  std::vector<PortManagementContainer> m_TsnPortManContNwtts;
  bool m_TsnPortManContNwttsIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PduSessionTsnBridge_H_ */
