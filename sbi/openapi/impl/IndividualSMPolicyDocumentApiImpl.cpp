/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IndividualSMPolicyDocumentApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

IndividualSMPolicyDocumentApiImpl::IndividualSMPolicyDocumentApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr)
    : IndividualSMPolicyDocumentApi(rtr) {}

void IndividualSMPolicyDocumentApiImpl::delete_sm_policy(
    const std::string &smPolicyId, const SmPolicyDeleteData &smPolicyDeleteData,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualSMPolicyDocumentApiImpl::get_sm_policy(
    const std::string &smPolicyId, Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void IndividualSMPolicyDocumentApiImpl::update_sm_policy(
    const std::string &smPolicyId,
    const SmPolicyUpdateContextData &smPolicyUpdateContextData,
    Pistache::Http::ResponseWriter &response) {
  response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
