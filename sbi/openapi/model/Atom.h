/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * Atom.h
 *
 *
 */

#ifndef Atom_H_
#define Atom_H_

#include "AnyType.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class Atom {
public:
  Atom();
  virtual ~Atom();

  void validate();

  /////////////////////////////////////////////
  /// Atom members

  /// <summary>
  /// contains the name of a defined query parameter.
  /// </summary>
  std::string getAttr() const;
  void setAttr(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  AnyType getValue() const;
  void setValue(AnyType const &value);
  /// <summary>
  /// indicates whether the negative condition applies for the query condition
  /// </summary>
  bool isNegative() const;
  void setNegative(bool const value);
  bool negativeIsSet() const;
  void unsetNegative();

  friend void to_json(nlohmann::json &j, const Atom &o);
  friend void from_json(const nlohmann::json &j, Atom &o);

protected:
  std::string m_Attr;

  AnyType m_Value;

  bool m_Negative;
  bool m_NegativeIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* Atom_H_ */
