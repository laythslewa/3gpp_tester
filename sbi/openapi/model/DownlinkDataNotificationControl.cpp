/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "DownlinkDataNotificationControl.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

DownlinkDataNotificationControl::DownlinkDataNotificationControl() {
  m_NotifCtrlIndsIsSet = false;
  m_TypesOfNotifIsSet = false;
}

DownlinkDataNotificationControl::~DownlinkDataNotificationControl() {}

void DownlinkDataNotificationControl::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const DownlinkDataNotificationControl &o) {
  j = nlohmann::json();
  if (o.notifCtrlIndsIsSet() || !o.m_NotifCtrlInds.empty())
    j["notifCtrlInds"] = o.m_NotifCtrlInds;
  if (o.typesOfNotifIsSet() || !o.m_TypesOfNotif.empty())
    j["typesOfNotif"] = o.m_TypesOfNotif;
}

void from_json(const nlohmann::json &j, DownlinkDataNotificationControl &o) {
  if (j.find("notifCtrlInds") != j.end()) {
    j.at("notifCtrlInds").get_to(o.m_NotifCtrlInds);
    o.m_NotifCtrlIndsIsSet = true;
  }
  if (j.find("typesOfNotif") != j.end()) {
    j.at("typesOfNotif").get_to(o.m_TypesOfNotif);
    o.m_TypesOfNotifIsSet = true;
  }
}

std::vector<NotificationControlIndication> &
DownlinkDataNotificationControl::getNotifCtrlInds() {
  return m_NotifCtrlInds;
}
void DownlinkDataNotificationControl::setNotifCtrlInds(
    std::vector<NotificationControlIndication> const &value) {
  m_NotifCtrlInds = value;
  m_NotifCtrlIndsIsSet = true;
}
bool DownlinkDataNotificationControl::notifCtrlIndsIsSet() const {
  return m_NotifCtrlIndsIsSet;
}
void DownlinkDataNotificationControl::unsetNotifCtrlInds() {
  m_NotifCtrlIndsIsSet = false;
}
std::vector<DlDataDeliveryStatus> &
DownlinkDataNotificationControl::getTypesOfNotif() {
  return m_TypesOfNotif;
}
void DownlinkDataNotificationControl::setTypesOfNotif(
    std::vector<DlDataDeliveryStatus> const &value) {
  m_TypesOfNotif = value;
  m_TypesOfNotifIsSet = true;
}
bool DownlinkDataNotificationControl::typesOfNotifIsSet() const {
  return m_TypesOfNotifIsSet;
}
void DownlinkDataNotificationControl::unsetTypesOfNotif() {
  m_TypesOfNotifIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
