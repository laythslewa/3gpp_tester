/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PsaInformation.h
 *
 * PSA Information
 */

#ifndef PsaInformation_H_
#define PsaInformation_H_

#include "Ipv6Prefix.h"
#include "PsaIndication.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// PSA Information
/// </summary>
class PsaInformation {
public:
  PsaInformation();
  virtual ~PsaInformation();

  void validate();

  /////////////////////////////////////////////
  /// PsaInformation members

  /// <summary>
  ///
  /// </summary>
  PsaIndication getPsaInd() const;
  void setPsaInd(PsaIndication const &value);
  bool psaIndIsSet() const;
  void unsetPsaInd();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getDnaiList();
  void setDnaiList(std::vector<std::string> const &value);
  bool dnaiListIsSet() const;
  void unsetDnaiList();
  /// <summary>
  ///
  /// </summary>
  Ipv6Prefix getUeIpv6Prefix() const;
  void setUeIpv6Prefix(Ipv6Prefix const &value);
  bool ueIpv6PrefixIsSet() const;
  void unsetUeIpv6Prefix();
  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getPsaUpfId() const;
  void setPsaUpfId(std::string const &value);
  bool psaUpfIdIsSet() const;
  void unsetPsaUpfId();

  friend void to_json(nlohmann::json &j, const PsaInformation &o);
  friend void from_json(const nlohmann::json &j, PsaInformation &o);

protected:
  PsaIndication m_PsaInd;
  bool m_PsaIndIsSet;
  std::vector<std::string> m_DnaiList;
  bool m_DnaiListIsSet;
  Ipv6Prefix m_UeIpv6Prefix;
  bool m_UeIpv6PrefixIsSet;
  std::string m_PsaUpfId;
  bool m_PsaUpfIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PsaInformation_H_ */
