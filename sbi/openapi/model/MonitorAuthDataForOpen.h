/**
 * N5g-ddnmf_Discovery API
 * N5g-ddnmf_Discovery Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * MonitorAuthDataForOpen.h
 *
 * Represents the obtained Announce Authorize Data for open discovery for a UE
 */

#ifndef MonitorAuthDataForOpen_H_
#define MonitorAuthDataForOpen_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents the obtained Announce Authorize Data for open discovery for a UE
/// </summary>
class MonitorAuthDataForOpen {
public:
  MonitorAuthDataForOpen();
  virtual ~MonitorAuthDataForOpen();

  void validate();

  /////////////////////////////////////////////
  /// MonitorAuthDataForOpen members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getProseAppCodes();
  void setProseAppCodes(std::vector<std::string> const &value);
  bool proseAppCodesIsSet() const;
  void unsetProseAppCodes();
  /// <summary>
  /// Contains the Prose Application Prefix.
  /// </summary>
  std::string getProseAppPrefix() const;
  void setProseAppPrefix(std::string const &value);
  bool proseAppPrefixIsSet() const;
  void unsetProseAppPrefix();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getProseAppMasks();
  void setProseAppMasks(std::vector<std::string> const &value);
  /// <summary>
  ///
  /// </summary>
  int32_t getTtl() const;
  void setTtl(int32_t const value);

  friend void to_json(nlohmann::json &j, const MonitorAuthDataForOpen &o);
  friend void from_json(const nlohmann::json &j, MonitorAuthDataForOpen &o);

protected:
  std::vector<std::string> m_ProseAppCodes;
  bool m_ProseAppCodesIsSet;
  std::string m_ProseAppPrefix;
  bool m_ProseAppPrefixIsSet;
  std::vector<std::string> m_ProseAppMasks;

  int32_t m_Ttl;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* MonitorAuthDataForOpen_H_ */
