/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * QosFlowProfile.h
 *
 * QoS flow profile
 */

#ifndef QosFlowProfile_H_
#define QosFlowProfile_H_

#include "AdditionalQosFlowInfo.h"
#include "Arp.h"
#include "Dynamic5Qi.h"
#include "GbrQosFlowInformation.h"
#include "NonDynamic5Qi.h"
#include "QosMonitoringReq.h"
#include "ReflectiveQoSAttribute.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// QoS flow profile
/// </summary>
class QosFlowProfile {
public:
  QosFlowProfile();
  virtual ~QosFlowProfile();

  void validate();

  /////////////////////////////////////////////
  /// QosFlowProfile members

  /// <summary>
  /// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of
  /// 3GPP TS 23.501, within the range 0 to 255
  /// </summary>
  int32_t getR5qi() const;
  void setR5qi(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  NonDynamic5Qi getNonDynamic5Qi() const;
  void setNonDynamic5Qi(NonDynamic5Qi const &value);
  bool nonDynamic5QiIsSet() const;
  void unsetNonDynamic5Qi();
  /// <summary>
  ///
  /// </summary>
  Dynamic5Qi getDynamic5Qi() const;
  void setDynamic5Qi(Dynamic5Qi const &value);
  bool dynamic5QiIsSet() const;
  void unsetDynamic5Qi();
  /// <summary>
  ///
  /// </summary>
  Arp getArp() const;
  void setArp(Arp const &value);
  bool arpIsSet() const;
  void unsetArp();
  /// <summary>
  ///
  /// </summary>
  GbrQosFlowInformation getGbrQosFlowInfo() const;
  void setGbrQosFlowInfo(GbrQosFlowInformation const &value);
  bool gbrQosFlowInfoIsSet() const;
  void unsetGbrQosFlowInfo();
  /// <summary>
  ///
  /// </summary>
  ReflectiveQoSAttribute getRqa() const;
  void setRqa(ReflectiveQoSAttribute const &value);
  bool rqaIsSet() const;
  void unsetRqa();
  /// <summary>
  ///
  /// </summary>
  AdditionalQosFlowInfo getAdditionalQosFlowInfo() const;
  void setAdditionalQosFlowInfo(AdditionalQosFlowInfo const &value);
  bool additionalQosFlowInfoIsSet() const;
  void unsetAdditionalQosFlowInfo();
  /// <summary>
  ///
  /// </summary>
  QosMonitoringReq getQosMonitoringReq() const;
  void setQosMonitoringReq(QosMonitoringReq const &value);
  bool qosMonitoringReqIsSet() const;
  void unsetQosMonitoringReq();
  /// <summary>
  /// indicating a time in seconds.
  /// </summary>
  int32_t getQosRepPeriod() const;
  void setQosRepPeriod(int32_t const value);
  bool qosRepPeriodIsSet() const;
  void unsetQosRepPeriod();

  friend void to_json(nlohmann::json &j, const QosFlowProfile &o);
  friend void from_json(const nlohmann::json &j, QosFlowProfile &o);

protected:
  int32_t m_r_5qi;

  NonDynamic5Qi m_NonDynamic5Qi;
  bool m_NonDynamic5QiIsSet;
  Dynamic5Qi m_Dynamic5Qi;
  bool m_Dynamic5QiIsSet;
  Arp m_Arp;
  bool m_ArpIsSet;
  GbrQosFlowInformation m_GbrQosFlowInfo;
  bool m_GbrQosFlowInfoIsSet;
  ReflectiveQoSAttribute m_Rqa;
  bool m_RqaIsSet;
  AdditionalQosFlowInfo m_AdditionalQosFlowInfo;
  bool m_AdditionalQosFlowInfoIsSet;
  QosMonitoringReq m_QosMonitoringReq;
  bool m_QosMonitoringReqIsSet;
  int32_t m_QosRepPeriod;
  bool m_QosRepPeriodIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* QosFlowProfile_H_ */
