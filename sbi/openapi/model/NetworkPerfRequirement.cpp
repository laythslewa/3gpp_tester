/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NetworkPerfRequirement.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

NetworkPerfRequirement::NetworkPerfRequirement() {
  m_RelativeRatio = 0;
  m_RelativeRatioIsSet = false;
  m_AbsoluteNum = 0;
  m_AbsoluteNumIsSet = false;
}

NetworkPerfRequirement::~NetworkPerfRequirement() {}

void NetworkPerfRequirement::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const NetworkPerfRequirement &o) {
  j = nlohmann::json();
  j["nwPerfType"] = o.m_NwPerfType;
  if (o.relativeRatioIsSet())
    j["relativeRatio"] = o.m_RelativeRatio;
  if (o.absoluteNumIsSet())
    j["absoluteNum"] = o.m_AbsoluteNum;
}

void from_json(const nlohmann::json &j, NetworkPerfRequirement &o) {
  j.at("nwPerfType").get_to(o.m_NwPerfType);
  if (j.find("relativeRatio") != j.end()) {
    j.at("relativeRatio").get_to(o.m_RelativeRatio);
    o.m_RelativeRatioIsSet = true;
  }
  if (j.find("absoluteNum") != j.end()) {
    j.at("absoluteNum").get_to(o.m_AbsoluteNum);
    o.m_AbsoluteNumIsSet = true;
  }
}

NetworkPerfType NetworkPerfRequirement::getNwPerfType() const {
  return m_NwPerfType;
}
void NetworkPerfRequirement::setNwPerfType(NetworkPerfType const &value) {
  m_NwPerfType = value;
}
int32_t NetworkPerfRequirement::getRelativeRatio() const {
  return m_RelativeRatio;
}
void NetworkPerfRequirement::setRelativeRatio(int32_t const value) {
  m_RelativeRatio = value;
  m_RelativeRatioIsSet = true;
}
bool NetworkPerfRequirement::relativeRatioIsSet() const {
  return m_RelativeRatioIsSet;
}
void NetworkPerfRequirement::unsetRelativeRatio() {
  m_RelativeRatioIsSet = false;
}
int32_t NetworkPerfRequirement::getAbsoluteNum() const { return m_AbsoluteNum; }
void NetworkPerfRequirement::setAbsoluteNum(int32_t const value) {
  m_AbsoluteNum = value;
  m_AbsoluteNumIsSet = true;
}
bool NetworkPerfRequirement::absoluteNumIsSet() const {
  return m_AbsoluteNumIsSet;
}
void NetworkPerfRequirement::unsetAbsoluteNum() { m_AbsoluteNumIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
