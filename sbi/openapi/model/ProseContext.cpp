/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ProseContext.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ProseContext::ProseContext() {
  m_DirectDiscoveryIsSet = false;
  m_DirectCommIsSet = false;
  m_L2RelayIsSet = false;
  m_L3RelayIsSet = false;
  m_L2RemoteIsSet = false;
  m_NrUePc5Ambr = "";
  m_NrUePc5AmbrIsSet = false;
  m_Pc5QoSParaIsSet = false;
}

ProseContext::~ProseContext() {}

void ProseContext::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ProseContext &o) {
  j = nlohmann::json();
  if (o.directDiscoveryIsSet())
    j["directDiscovery"] = o.m_DirectDiscovery;
  if (o.directCommIsSet())
    j["directComm"] = o.m_DirectComm;
  if (o.l2RelayIsSet())
    j["l2Relay"] = o.m_L2Relay;
  if (o.l3RelayIsSet())
    j["l3Relay"] = o.m_L3Relay;
  if (o.l2RemoteIsSet())
    j["l2Remote"] = o.m_L2Remote;
  if (o.nrUePc5AmbrIsSet())
    j["nrUePc5Ambr"] = o.m_NrUePc5Ambr;
  if (o.pc5QoSParaIsSet())
    j["Pc5QoSPara"] = o.m_Pc5QoSPara;
}

void from_json(const nlohmann::json &j, ProseContext &o) {
  if (j.find("directDiscovery") != j.end()) {
    j.at("directDiscovery").get_to(o.m_DirectDiscovery);
    o.m_DirectDiscoveryIsSet = true;
  }
  if (j.find("directComm") != j.end()) {
    j.at("directComm").get_to(o.m_DirectComm);
    o.m_DirectCommIsSet = true;
  }
  if (j.find("l2Relay") != j.end()) {
    j.at("l2Relay").get_to(o.m_L2Relay);
    o.m_L2RelayIsSet = true;
  }
  if (j.find("l3Relay") != j.end()) {
    j.at("l3Relay").get_to(o.m_L3Relay);
    o.m_L3RelayIsSet = true;
  }
  if (j.find("l2Remote") != j.end()) {
    j.at("l2Remote").get_to(o.m_L2Remote);
    o.m_L2RemoteIsSet = true;
  }
  if (j.find("nrUePc5Ambr") != j.end()) {
    j.at("nrUePc5Ambr").get_to(o.m_NrUePc5Ambr);
    o.m_NrUePc5AmbrIsSet = true;
  }
  if (j.find("Pc5QoSPara") != j.end()) {
    j.at("Pc5QoSPara").get_to(o.m_Pc5QoSPara);
    o.m_Pc5QoSParaIsSet = true;
  }
}

UeAuth ProseContext::getDirectDiscovery() const { return m_DirectDiscovery; }
void ProseContext::setDirectDiscovery(UeAuth const &value) {
  m_DirectDiscovery = value;
  m_DirectDiscoveryIsSet = true;
}
bool ProseContext::directDiscoveryIsSet() const {
  return m_DirectDiscoveryIsSet;
}
void ProseContext::unsetDirectDiscovery() { m_DirectDiscoveryIsSet = false; }
UeAuth ProseContext::getDirectComm() const { return m_DirectComm; }
void ProseContext::setDirectComm(UeAuth const &value) {
  m_DirectComm = value;
  m_DirectCommIsSet = true;
}
bool ProseContext::directCommIsSet() const { return m_DirectCommIsSet; }
void ProseContext::unsetDirectComm() { m_DirectCommIsSet = false; }
UeAuth ProseContext::getL2Relay() const { return m_L2Relay; }
void ProseContext::setL2Relay(UeAuth const &value) {
  m_L2Relay = value;
  m_L2RelayIsSet = true;
}
bool ProseContext::l2RelayIsSet() const { return m_L2RelayIsSet; }
void ProseContext::unsetL2Relay() { m_L2RelayIsSet = false; }
UeAuth ProseContext::getL3Relay() const { return m_L3Relay; }
void ProseContext::setL3Relay(UeAuth const &value) {
  m_L3Relay = value;
  m_L3RelayIsSet = true;
}
bool ProseContext::l3RelayIsSet() const { return m_L3RelayIsSet; }
void ProseContext::unsetL3Relay() { m_L3RelayIsSet = false; }
UeAuth ProseContext::getL2Remote() const { return m_L2Remote; }
void ProseContext::setL2Remote(UeAuth const &value) {
  m_L2Remote = value;
  m_L2RemoteIsSet = true;
}
bool ProseContext::l2RemoteIsSet() const { return m_L2RemoteIsSet; }
void ProseContext::unsetL2Remote() { m_L2RemoteIsSet = false; }
std::string ProseContext::getNrUePc5Ambr() const { return m_NrUePc5Ambr; }
void ProseContext::setNrUePc5Ambr(std::string const &value) {
  m_NrUePc5Ambr = value;
  m_NrUePc5AmbrIsSet = true;
}
bool ProseContext::nrUePc5AmbrIsSet() const { return m_NrUePc5AmbrIsSet; }
void ProseContext::unsetNrUePc5Ambr() { m_NrUePc5AmbrIsSet = false; }
Pc5QoSPara ProseContext::getPc5QoSPara() const { return m_Pc5QoSPara; }
void ProseContext::setPc5QoSPara(Pc5QoSPara const &value) {
  m_Pc5QoSPara = value;
  m_Pc5QoSParaIsSet = true;
}
bool ProseContext::pc5QoSParaIsSet() const { return m_Pc5QoSParaIsSet; }
void ProseContext::unsetPc5QoSPara() { m_Pc5QoSParaIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
