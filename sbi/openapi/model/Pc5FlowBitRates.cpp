/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "Pc5FlowBitRates.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Pc5FlowBitRates::Pc5FlowBitRates() {
  m_GuaFbr = "";
  m_GuaFbrIsSet = false;
  m_MaxFbr = "";
  m_MaxFbrIsSet = false;
}

Pc5FlowBitRates::~Pc5FlowBitRates() {}

void Pc5FlowBitRates::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const Pc5FlowBitRates &o) {
  j = nlohmann::json();
  if (o.guaFbrIsSet())
    j["guaFbr"] = o.m_GuaFbr;
  if (o.maxFbrIsSet())
    j["maxFbr"] = o.m_MaxFbr;
}

void from_json(const nlohmann::json &j, Pc5FlowBitRates &o) {
  if (j.find("guaFbr") != j.end()) {
    j.at("guaFbr").get_to(o.m_GuaFbr);
    o.m_GuaFbrIsSet = true;
  }
  if (j.find("maxFbr") != j.end()) {
    j.at("maxFbr").get_to(o.m_MaxFbr);
    o.m_MaxFbrIsSet = true;
  }
}

std::string Pc5FlowBitRates::getGuaFbr() const { return m_GuaFbr; }
void Pc5FlowBitRates::setGuaFbr(std::string const &value) {
  m_GuaFbr = value;
  m_GuaFbrIsSet = true;
}
bool Pc5FlowBitRates::guaFbrIsSet() const { return m_GuaFbrIsSet; }
void Pc5FlowBitRates::unsetGuaFbr() { m_GuaFbrIsSet = false; }
std::string Pc5FlowBitRates::getMaxFbr() const { return m_MaxFbr; }
void Pc5FlowBitRates::setMaxFbr(std::string const &value) {
  m_MaxFbr = value;
  m_MaxFbrIsSet = true;
}
bool Pc5FlowBitRates::maxFbrIsSet() const { return m_MaxFbrIsSet; }
void Pc5FlowBitRates::unsetMaxFbr() { m_MaxFbrIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
