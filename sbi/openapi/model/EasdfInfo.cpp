/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "EasdfInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

EasdfInfo::EasdfInfo() {
  m_SNssaiEasdfInfoListIsSet = false;
  m_EasdfN6IpAddressListIsSet = false;
  m_UpfN6IpAddressListIsSet = false;
}

EasdfInfo::~EasdfInfo() {}

void EasdfInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const EasdfInfo &o) {
  j = nlohmann::json();
  if (o.sNssaiEasdfInfoListIsSet() || !o.m_SNssaiEasdfInfoList.empty())
    j["sNssaiEasdfInfoList"] = o.m_SNssaiEasdfInfoList;
  if (o.easdfN6IpAddressListIsSet() || !o.m_EasdfN6IpAddressList.empty())
    j["easdfN6IpAddressList"] = o.m_EasdfN6IpAddressList;
  if (o.upfN6IpAddressListIsSet() || !o.m_UpfN6IpAddressList.empty())
    j["upfN6IpAddressList"] = o.m_UpfN6IpAddressList;
}

void from_json(const nlohmann::json &j, EasdfInfo &o) {
  if (j.find("sNssaiEasdfInfoList") != j.end()) {
    j.at("sNssaiEasdfInfoList").get_to(o.m_SNssaiEasdfInfoList);
    o.m_SNssaiEasdfInfoListIsSet = true;
  }
  if (j.find("easdfN6IpAddressList") != j.end()) {
    j.at("easdfN6IpAddressList").get_to(o.m_EasdfN6IpAddressList);
    o.m_EasdfN6IpAddressListIsSet = true;
  }
  if (j.find("upfN6IpAddressList") != j.end()) {
    j.at("upfN6IpAddressList").get_to(o.m_UpfN6IpAddressList);
    o.m_UpfN6IpAddressListIsSet = true;
  }
}

std::vector<SnssaiEasdfInfoItem> &EasdfInfo::getSNssaiEasdfInfoList() {
  return m_SNssaiEasdfInfoList;
}
void EasdfInfo::setSNssaiEasdfInfoList(
    std::vector<SnssaiEasdfInfoItem> const &value) {
  m_SNssaiEasdfInfoList = value;
  m_SNssaiEasdfInfoListIsSet = true;
}
bool EasdfInfo::sNssaiEasdfInfoListIsSet() const {
  return m_SNssaiEasdfInfoListIsSet;
}
void EasdfInfo::unsetSNssaiEasdfInfoList() {
  m_SNssaiEasdfInfoListIsSet = false;
}
std::vector<IpAddr> &EasdfInfo::getEasdfN6IpAddressList() {
  return m_EasdfN6IpAddressList;
}
void EasdfInfo::setEasdfN6IpAddressList(std::vector<IpAddr> const &value) {
  m_EasdfN6IpAddressList = value;
  m_EasdfN6IpAddressListIsSet = true;
}
bool EasdfInfo::easdfN6IpAddressListIsSet() const {
  return m_EasdfN6IpAddressListIsSet;
}
void EasdfInfo::unsetEasdfN6IpAddressList() {
  m_EasdfN6IpAddressListIsSet = false;
}
std::vector<IpAddr> &EasdfInfo::getUpfN6IpAddressList() {
  return m_UpfN6IpAddressList;
}
void EasdfInfo::setUpfN6IpAddressList(std::vector<IpAddr> const &value) {
  m_UpfN6IpAddressList = value;
  m_UpfN6IpAddressListIsSet = true;
}
bool EasdfInfo::upfN6IpAddressListIsSet() const {
  return m_UpfN6IpAddressListIsSet;
}
void EasdfInfo::unsetUpfN6IpAddressList() { m_UpfN6IpAddressListIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
