/**
 * NSSF NSSAI Availability
 * NSSF NSSAI Availability Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NssfEventNotification.h
 *
 * This contains the notification for created event subscription
 */

#ifndef NssfEventNotification_H_
#define NssfEventNotification_H_

#include "AuthorizedNssaiAvailabilityData.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// This contains the notification for created event subscription
/// </summary>
class NssfEventNotification {
public:
  NssfEventNotification();
  virtual ~NssfEventNotification();

  void validate();

  /////////////////////////////////////////////
  /// NssfEventNotification members

  /// <summary>
  ///
  /// </summary>
  std::string getSubscriptionId() const;
  void setSubscriptionId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<AuthorizedNssaiAvailabilityData> &
  getAuthorizedNssaiAvailabilityData();
  void setAuthorizedNssaiAvailabilityData(
      std::vector<AuthorizedNssaiAvailabilityData> const &value);

  friend void to_json(nlohmann::json &j, const NssfEventNotification &o);
  friend void from_json(const nlohmann::json &j, NssfEventNotification &o);

protected:
  std::string m_SubscriptionId;

  std::vector<AuthorizedNssaiAvailabilityData>
      m_AuthorizedNssaiAvailabilityData;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NssfEventNotification_H_ */
