/**
 * 3gpp-network-parameter-configuration
 * API for network parameter configuration. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NpConfigurationPatch.h
 *
 * Represents parameters used to request the modification of a network
 * parameters configuration resource.
 */

#ifndef NpConfigurationPatch_H_
#define NpConfigurationPatch_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents parameters used to request the modification of a network
/// parameters configuration resource.
/// </summary>
class NpConfigurationPatch {
public:
  NpConfigurationPatch();
  virtual ~NpConfigurationPatch();

  void validate();

  /////////////////////////////////////////////
  /// NpConfigurationPatch members

  /// <summary>
  /// Unsigned integer identifying a period of time in units of seconds with
  /// \&quot;nullable&#x3D;true\&quot; property.
  /// </summary>
  int32_t getMaximumLatency() const;
  void setMaximumLatency(int32_t const value);
  bool maximumLatencyIsSet() const;
  void unsetMaximumLatency();
  /// <summary>
  /// Unsigned integer identifying a period of time in units of seconds with
  /// \&quot;nullable&#x3D;true\&quot; property.
  /// </summary>
  int32_t getMaximumResponseTime() const;
  void setMaximumResponseTime(int32_t const value);
  bool maximumResponseTimeIsSet() const;
  void unsetMaximumResponseTime();
  /// <summary>
  /// This parameter may be included to identify the number of packets that the
  /// serving gateway shall buffer in case that the UE is not reachable.
  /// </summary>
  int32_t getSuggestedNumberOfDlPackets() const;
  void setSuggestedNumberOfDlPackets(int32_t const value);
  bool suggestedNumberOfDlPacketsIsSet() const;
  void unsetSuggestedNumberOfDlPackets();
  /// <summary>
  /// Unsigned integer identifying a period of time in units of seconds with
  /// \&quot;nullable&#x3D;true\&quot; property.
  /// </summary>
  int32_t getGroupReportGuardTime() const;
  void setGroupReportGuardTime(int32_t const value);
  bool groupReportGuardTimeIsSet() const;
  void unsetGroupReportGuardTime();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI with
  /// \&quot;nullable&#x3D;true\&quot; property.
  /// </summary>
  std::string getValidityTime() const;
  void setValidityTime(std::string const &value);
  bool validityTimeIsSet() const;
  void unsetValidityTime();
  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getNotificationDestination() const;
  void setNotificationDestination(std::string const &value);
  bool notificationDestinationIsSet() const;
  void unsetNotificationDestination();

  friend void to_json(nlohmann::json &j, const NpConfigurationPatch &o);
  friend void from_json(const nlohmann::json &j, NpConfigurationPatch &o);

protected:
  int32_t m_MaximumLatency;
  bool m_MaximumLatencyIsSet;
  int32_t m_MaximumResponseTime;
  bool m_MaximumResponseTimeIsSet;
  int32_t m_SuggestedNumberOfDlPackets;
  bool m_SuggestedNumberOfDlPacketsIsSet;
  int32_t m_GroupReportGuardTime;
  bool m_GroupReportGuardTimeIsSet;
  std::string m_ValidityTime;
  bool m_ValidityTimeIsSet;
  std::string m_NotificationDestination;
  bool m_NotificationDestinationIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NpConfigurationPatch_H_ */
