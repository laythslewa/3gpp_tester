/**
 * Nhss_SDM
 * HSS Subscriber Data Management. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PgwInfo.h
 *
 *
 */

#ifndef PgwInfo_H_
#define PgwInfo_H_

#include "PlmnId.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class PgwInfo {
public:
  PgwInfo();
  virtual ~PgwInfo();

  void validate();

  /////////////////////////////////////////////
  /// PgwInfo members

  /// <summary>
  /// String representing a Data Network as defined in clause 9A of 3GPP
  /// TS 23.003; it shall contain either a DNN Network Identifier, or a full DNN
  /// with both the Network Identifier and Operator Identifier, as specified in
  /// 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in
  /// which the labels are separated by dots (e.g.
  /// \&quot;Label1.Label2.Label3\&quot;).
  /// </summary>
  std::string getDnn() const;
  void setDnn(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getPgwFqdn() const;
  void setPgwFqdn(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  PlmnId getPlmnId() const;
  void setPlmnId(PlmnId const &value);
  bool plmnIdIsSet() const;
  void unsetPlmnId();
  /// <summary>
  ///
  /// </summary>
  bool isEpdgInd() const;
  void setEpdgInd(bool const value);
  bool epdgIndIsSet() const;
  void unsetEpdgInd();
  /// <summary>
  /// String uniquely identifying a NF instance. The format of the NF Instance
  /// ID shall be a Universally Unique Identifier (UUID) version 4, as described
  /// in IETF RFC 4122.
  /// </summary>
  std::string getPcfId() const;
  void setPcfId(std::string const &value);
  bool pcfIdIsSet() const;
  void unsetPcfId();

  friend void to_json(nlohmann::json &j, const PgwInfo &o);
  friend void from_json(const nlohmann::json &j, PgwInfo &o);

protected:
  std::string m_Dnn;

  std::string m_PgwFqdn;

  PlmnId m_PlmnId;
  bool m_PlmnIdIsSet;
  bool m_EpdgInd;
  bool m_EpdgIndIsSet;
  std::string m_PcfId;
  bool m_PcfIdIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PgwInfo_H_ */
