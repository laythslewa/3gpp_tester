/**
 * Nudm_UECM
 * Nudm Context Management Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RetrieveSMFRegistrationApi.h
 *
 *
 */

#ifndef RetrieveSMFRegistrationApi_H_
#define RetrieveSMFRegistrationApi_H_

#include <pistache/http.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>
#include <pistache/router.h>

#include "ProblemDetails.h"
#include "SmfRegistration.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class RetrieveSMFRegistrationApi {
public:
  RetrieveSMFRegistrationApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~RetrieveSMFRegistrationApi() {}
  void init();

  const std::string base = "/nudm-uecm/v1";

private:
  void setupRoutes();

  void
  retrieve_smf_registration_handler(const Pistache::Rest::Request &request,
                                    Pistache::Http::ResponseWriter response);
  void retrieve_smf_registration_api_default_handler(
      const Pistache::Rest::Request &request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// get an SMF registration
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="ueId">Identifier of the UE</param>
  /// <param name="pduSessionId">Identifier of the PDU session</param>
  virtual void
  retrieve_smf_registration(const std::string &ueId,
                            const int32_t &pduSessionId,
                            Pistache::Http::ResponseWriter &response) = 0;
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RetrieveSMFRegistrationApi_H_ */
