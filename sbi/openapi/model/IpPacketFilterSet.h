/**
 * M5_NetworkAssistance
 * 5GMS AF M5 Network Assistance API Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IpPacketFilterSet.h
 *
 *
 */

#ifndef IpPacketFilterSet_H_
#define IpPacketFilterSet_H_

#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class IpPacketFilterSet {
public:
  IpPacketFilterSet();
  virtual ~IpPacketFilterSet();

  void validate();

  /////////////////////////////////////////////
  /// IpPacketFilterSet members

  /// <summary>
  ///
  /// </summary>
  std::string getSrcIp() const;
  void setSrcIp(std::string const &value);
  bool srcIpIsSet() const;
  void unsetSrcIp();
  /// <summary>
  ///
  /// </summary>
  std::string getDstIp() const;
  void setDstIp(std::string const &value);
  bool dstIpIsSet() const;
  void unsetDstIp();
  /// <summary>
  ///
  /// </summary>
  int32_t getProtocol() const;
  void setProtocol(int32_t const value);
  bool protocolIsSet() const;
  void unsetProtocol();
  /// <summary>
  ///
  /// </summary>
  int32_t getSrcPort() const;
  void setSrcPort(int32_t const value);
  bool srcPortIsSet() const;
  void unsetSrcPort();
  /// <summary>
  ///
  /// </summary>
  int32_t getDstPort() const;
  void setDstPort(int32_t const value);
  bool dstPortIsSet() const;
  void unsetDstPort();
  /// <summary>
  ///
  /// </summary>
  std::string getToSTc() const;
  void setToSTc(std::string const &value);
  bool toSTcIsSet() const;
  void unsetToSTc();
  /// <summary>
  ///
  /// </summary>
  int32_t getFlowLabel() const;
  void setFlowLabel(int32_t const value);
  bool flowLabelIsSet() const;
  void unsetFlowLabel();
  /// <summary>
  ///
  /// </summary>
  int32_t getSpi() const;
  void setSpi(int32_t const value);
  bool spiIsSet() const;
  void unsetSpi();
  /// <summary>
  ///
  /// </summary>
  std::string getDirection() const;
  void setDirection(std::string const &value);

  friend void to_json(nlohmann::json &j, const IpPacketFilterSet &o);
  friend void from_json(const nlohmann::json &j, IpPacketFilterSet &o);

protected:
  std::string m_SrcIp;
  bool m_SrcIpIsSet;
  std::string m_DstIp;
  bool m_DstIpIsSet;
  int32_t m_Protocol;
  bool m_ProtocolIsSet;
  int32_t m_SrcPort;
  bool m_SrcPortIsSet;
  int32_t m_DstPort;
  bool m_DstPortIsSet;
  std::string m_ToSTc;
  bool m_ToSTcIsSet;
  int32_t m_FlowLabel;
  bool m_FlowLabelIsSet;
  int32_t m_Spi;
  bool m_SpiIsSet;
  std::string m_Direction;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* IpPacketFilterSet_H_ */
