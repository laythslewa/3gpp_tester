/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SnssaiTaiMapping.h
 *
 * List of restricted or unrestricted S-NSSAIs per TAI(s)
 */

#ifndef SnssaiTaiMapping_H_
#define SnssaiTaiMapping_H_

#include "AccessType.h"
#include "ExtSnssai.h"
#include "RestrictedSnssai.h"
#include "TargetArea.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// List of restricted or unrestricted S-NSSAIs per TAI(s)
/// </summary>
class SnssaiTaiMapping {
public:
  SnssaiTaiMapping();
  virtual ~SnssaiTaiMapping();

  void validate();

  /////////////////////////////////////////////
  /// SnssaiTaiMapping members

  /// <summary>
  ///
  /// </summary>
  TargetArea getReportingArea() const;
  void setReportingArea(TargetArea const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<AccessType> &getAccessTypeList();
  void setAccessTypeList(std::vector<AccessType> const &value);
  bool accessTypeListIsSet() const;
  void unsetAccessTypeList();
  /// <summary>
  ///
  /// </summary>
  std::vector<RestrictedSnssai> &getRestrictedSnssaiList();
  void setRestrictedSnssaiList(std::vector<RestrictedSnssai> const &value);
  bool restrictedSnssaiListIsSet() const;
  void unsetRestrictedSnssaiList();
  /// <summary>
  ///
  /// </summary>
  std::vector<ExtSnssai> &getUnrestrictedSnssaiList();
  void setUnrestrictedSnssaiList(std::vector<ExtSnssai> const &value);
  bool unrestrictedSnssaiListIsSet() const;
  void unsetUnrestrictedSnssaiList();

  friend void to_json(nlohmann::json &j, const SnssaiTaiMapping &o);
  friend void from_json(const nlohmann::json &j, SnssaiTaiMapping &o);

protected:
  TargetArea m_ReportingArea;

  std::vector<AccessType> m_AccessTypeList;
  bool m_AccessTypeListIsSet;
  std::vector<RestrictedSnssai> m_RestrictedSnssaiList;
  bool m_RestrictedSnssaiListIsSet;
  std::vector<ExtSnssai> m_UnrestrictedSnssaiList;
  bool m_UnrestrictedSnssaiListIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* SnssaiTaiMapping_H_ */
