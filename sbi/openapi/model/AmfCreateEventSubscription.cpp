/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AmfCreateEventSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AmfCreateEventSubscription::AmfCreateEventSubscription() {
  m_SupportedFeatures = "";
  m_SupportedFeaturesIsSet = false;
  m_OldGuamiIsSet = false;
}

AmfCreateEventSubscription::~AmfCreateEventSubscription() {}

void AmfCreateEventSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AmfCreateEventSubscription &o) {
  j = nlohmann::json();
  j["subscription"] = o.m_Subscription;
  if (o.supportedFeaturesIsSet())
    j["supportedFeatures"] = o.m_SupportedFeatures;
  if (o.oldGuamiIsSet())
    j["oldGuami"] = o.m_OldGuami;
}

void from_json(const nlohmann::json &j, AmfCreateEventSubscription &o) {
  j.at("subscription").get_to(o.m_Subscription);
  if (j.find("supportedFeatures") != j.end()) {
    j.at("supportedFeatures").get_to(o.m_SupportedFeatures);
    o.m_SupportedFeaturesIsSet = true;
  }
  if (j.find("oldGuami") != j.end()) {
    j.at("oldGuami").get_to(o.m_OldGuami);
    o.m_OldGuamiIsSet = true;
  }
}

AmfEventSubscription AmfCreateEventSubscription::getSubscription() const {
  return m_Subscription;
}
void AmfCreateEventSubscription::setSubscription(
    AmfEventSubscription const &value) {
  m_Subscription = value;
}
std::string AmfCreateEventSubscription::getSupportedFeatures() const {
  return m_SupportedFeatures;
}
void AmfCreateEventSubscription::setSupportedFeatures(
    std::string const &value) {
  m_SupportedFeatures = value;
  m_SupportedFeaturesIsSet = true;
}
bool AmfCreateEventSubscription::supportedFeaturesIsSet() const {
  return m_SupportedFeaturesIsSet;
}
void AmfCreateEventSubscription::unsetSupportedFeatures() {
  m_SupportedFeaturesIsSet = false;
}
Guami AmfCreateEventSubscription::getOldGuami() const { return m_OldGuami; }
void AmfCreateEventSubscription::setOldGuami(Guami const &value) {
  m_OldGuami = value;
  m_OldGuamiIsSet = true;
}
bool AmfCreateEventSubscription::oldGuamiIsSet() const {
  return m_OldGuamiIsSet;
}
void AmfCreateEventSubscription::unsetOldGuami() { m_OldGuamiIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
