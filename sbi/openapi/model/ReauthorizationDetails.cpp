/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ReauthorizationDetails.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ReauthorizationDetails::ReauthorizationDetails() {
  m_ServiceId = 0;
  m_ServiceIdIsSet = false;
  m_RatingGroup = 0;
  m_RatingGroupIsSet = false;
  m_QuotaManagementIndicatorIsSet = false;
}

ReauthorizationDetails::~ReauthorizationDetails() {}

void ReauthorizationDetails::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ReauthorizationDetails &o) {
  j = nlohmann::json();
  if (o.serviceIdIsSet())
    j["serviceId"] = o.m_ServiceId;
  if (o.ratingGroupIsSet())
    j["ratingGroup"] = o.m_RatingGroup;
  if (o.quotaManagementIndicatorIsSet())
    j["quotaManagementIndicator"] = o.m_QuotaManagementIndicator;
}

void from_json(const nlohmann::json &j, ReauthorizationDetails &o) {
  if (j.find("serviceId") != j.end()) {
    j.at("serviceId").get_to(o.m_ServiceId);
    o.m_ServiceIdIsSet = true;
  }
  if (j.find("ratingGroup") != j.end()) {
    j.at("ratingGroup").get_to(o.m_RatingGroup);
    o.m_RatingGroupIsSet = true;
  }
  if (j.find("quotaManagementIndicator") != j.end()) {
    j.at("quotaManagementIndicator").get_to(o.m_QuotaManagementIndicator);
    o.m_QuotaManagementIndicatorIsSet = true;
  }
}

int32_t ReauthorizationDetails::getServiceId() const { return m_ServiceId; }
void ReauthorizationDetails::setServiceId(int32_t const value) {
  m_ServiceId = value;
  m_ServiceIdIsSet = true;
}
bool ReauthorizationDetails::serviceIdIsSet() const { return m_ServiceIdIsSet; }
void ReauthorizationDetails::unsetServiceId() { m_ServiceIdIsSet = false; }
int32_t ReauthorizationDetails::getRatingGroup() const { return m_RatingGroup; }
void ReauthorizationDetails::setRatingGroup(int32_t const value) {
  m_RatingGroup = value;
  m_RatingGroupIsSet = true;
}
bool ReauthorizationDetails::ratingGroupIsSet() const {
  return m_RatingGroupIsSet;
}
void ReauthorizationDetails::unsetRatingGroup() { m_RatingGroupIsSet = false; }
QuotaManagementIndicator
ReauthorizationDetails::getQuotaManagementIndicator() const {
  return m_QuotaManagementIndicator;
}
void ReauthorizationDetails::setQuotaManagementIndicator(
    QuotaManagementIndicator const &value) {
  m_QuotaManagementIndicator = value;
  m_QuotaManagementIndicatorIsSet = true;
}
bool ReauthorizationDetails::quotaManagementIndicatorIsSet() const {
  return m_QuotaManagementIndicatorIsSet;
}
void ReauthorizationDetails::unsetQuotaManagementIndicator() {
  m_QuotaManagementIndicatorIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
