/**
 * Npcf_UEPolicyControl
 * UE Policy Control Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UePolicyTransferFailureNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UePolicyTransferFailureNotification::UePolicyTransferFailureNotification() {}

UePolicyTransferFailureNotification::~UePolicyTransferFailureNotification() {}

void UePolicyTransferFailureNotification::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const UePolicyTransferFailureNotification &o) {
  j = nlohmann::json();
  j["cause"] = o.m_Cause;
  j["ptis"] = o.m_Ptis;
}

void from_json(const nlohmann::json &j,
               UePolicyTransferFailureNotification &o) {
  j.at("cause").get_to(o.m_Cause);
  j.at("ptis").get_to(o.m_Ptis);
}

N1N2MessageTransferCause UePolicyTransferFailureNotification::getCause() const {
  return m_Cause;
}
void UePolicyTransferFailureNotification::setCause(
    N1N2MessageTransferCause const &value) {
  m_Cause = value;
}
std::vector<int32_t> &UePolicyTransferFailureNotification::getPtis() {
  return m_Ptis;
}
void UePolicyTransferFailureNotification::setPtis(
    std::vector<int32_t> const value) {
  m_Ptis = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
