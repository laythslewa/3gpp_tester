/**
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504 Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * LimitIdToMonitoringKey.h
 *
 * Contains the limit identifier and the corresponding monitoring key for a
 * given S-NSSAI and DNN.
 */

#ifndef LimitIdToMonitoringKey_H_
#define LimitIdToMonitoringKey_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the limit identifier and the corresponding monitoring key for a
/// given S-NSSAI and DNN.
/// </summary>
class LimitIdToMonitoringKey {
public:
  LimitIdToMonitoringKey();
  virtual ~LimitIdToMonitoringKey();

  void validate();

  /////////////////////////////////////////////
  /// LimitIdToMonitoringKey members

  /// <summary>
  ///
  /// </summary>
  std::string getLimitId() const;
  void setLimitId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getMonkey();
  void setMonkey(std::vector<std::string> const &value);
  bool monkeyIsSet() const;
  void unsetMonkey();

  friend void to_json(nlohmann::json &j, const LimitIdToMonitoringKey &o);
  friend void from_json(const nlohmann::json &j, LimitIdToMonitoringKey &o);

protected:
  std::string m_LimitId;

  std::vector<std::string> m_Monkey;
  bool m_MonkeyIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* LimitIdToMonitoringKey_H_ */
