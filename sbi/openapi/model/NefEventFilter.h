/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NefEventFilter.h
 *
 * Represents event filter information for an event.
 */

#ifndef NefEventFilter_H_
#define NefEventFilter_H_

#include "NetworkAreaInfo.h"
#include "TargetUeIdentification.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents event filter information for an event.
/// </summary>
class NefEventFilter {
public:
  NefEventFilter();
  virtual ~NefEventFilter();

  void validate();

  /////////////////////////////////////////////
  /// NefEventFilter members

  /// <summary>
  ///
  /// </summary>
  TargetUeIdentification getTgtUe() const;
  void setTgtUe(TargetUeIdentification const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getAppIds();
  void setAppIds(std::vector<std::string> const &value);
  bool appIdsIsSet() const;
  void unsetAppIds();
  /// <summary>
  ///
  /// </summary>
  NetworkAreaInfo getLocArea() const;
  void setLocArea(NetworkAreaInfo const &value);
  bool locAreaIsSet() const;
  void unsetLocArea();

  friend void to_json(nlohmann::json &j, const NefEventFilter &o);
  friend void from_json(const nlohmann::json &j, NefEventFilter &o);

protected:
  TargetUeIdentification m_TgtUe;

  std::vector<std::string> m_AppIds;
  bool m_AppIdsIsSet;
  NetworkAreaInfo m_LocArea;
  bool m_LocAreaIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NefEventFilter_H_ */
