/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AerialUeSubscriptionInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AerialUeSubscriptionInfo::AerialUeSubscriptionInfo() {
  m_r_3gppUavId = "";
  m_r_3gppUavIdIsSet = false;
}

AerialUeSubscriptionInfo::~AerialUeSubscriptionInfo() {}

void AerialUeSubscriptionInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AerialUeSubscriptionInfo &o) {
  j = nlohmann::json();
  j["aerialUeInd"] = o.m_AerialUeInd;
  if (o.r3gppUavIdIsSet())
    j["3gppUavId"] = o.m_r_3gppUavId;
}

void from_json(const nlohmann::json &j, AerialUeSubscriptionInfo &o) {
  j.at("aerialUeInd").get_to(o.m_AerialUeInd);
  if (j.find("3gppUavId") != j.end()) {
    j.at("3gppUavId").get_to(o.m_r_3gppUavId);
    o.m_r_3gppUavIdIsSet = true;
  }
}

AerialUeIndication AerialUeSubscriptionInfo::getAerialUeInd() const {
  return m_AerialUeInd;
}
void AerialUeSubscriptionInfo::setAerialUeInd(AerialUeIndication const &value) {
  m_AerialUeInd = value;
}
std::string AerialUeSubscriptionInfo::getR3gppUavId() const {
  return m_r_3gppUavId;
}
void AerialUeSubscriptionInfo::setR3gppUavId(std::string const &value) {
  m_r_3gppUavId = value;
  m_r_3gppUavIdIsSet = true;
}
bool AerialUeSubscriptionInfo::r3gppUavIdIsSet() const {
  return m_r_3gppUavIdIsSet;
}
void AerialUeSubscriptionInfo::unsetr_3gppUavId() {
  m_r_3gppUavIdIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
