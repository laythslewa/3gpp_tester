/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AmfUpdateEventSubscriptionItem.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AmfUpdateEventSubscriptionItem::AmfUpdateEventSubscriptionItem() {
  m_Op = "";
  m_Path = "";
  m_ValueIsSet = false;
  m_PresenceInfoIsSet = false;
}

AmfUpdateEventSubscriptionItem::~AmfUpdateEventSubscriptionItem() {}

void AmfUpdateEventSubscriptionItem::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AmfUpdateEventSubscriptionItem &o) {
  j = nlohmann::json();
  j["op"] = o.m_Op;
  j["path"] = o.m_Path;
  if (o.valueIsSet())
    j["value"] = o.m_Value;
  if (o.presenceInfoIsSet())
    j["presenceInfo"] = o.m_PresenceInfo;
}

void from_json(const nlohmann::json &j, AmfUpdateEventSubscriptionItem &o) {
  j.at("op").get_to(o.m_Op);
  j.at("path").get_to(o.m_Path);
  if (j.find("value") != j.end()) {
    j.at("value").get_to(o.m_Value);
    o.m_ValueIsSet = true;
  }
  if (j.find("presenceInfo") != j.end()) {
    j.at("presenceInfo").get_to(o.m_PresenceInfo);
    o.m_PresenceInfoIsSet = true;
  }
}

std::string AmfUpdateEventSubscriptionItem::getOp() const { return m_Op; }
void AmfUpdateEventSubscriptionItem::setOp(std::string const &value) {
  m_Op = value;
}
std::string AmfUpdateEventSubscriptionItem::getPath() const { return m_Path; }
void AmfUpdateEventSubscriptionItem::setPath(std::string const &value) {
  m_Path = value;
}
AmfEvent AmfUpdateEventSubscriptionItem::getValue() const { return m_Value; }
void AmfUpdateEventSubscriptionItem::setValue(AmfEvent const &value) {
  m_Value = value;
  m_ValueIsSet = true;
}
bool AmfUpdateEventSubscriptionItem::valueIsSet() const { return m_ValueIsSet; }
void AmfUpdateEventSubscriptionItem::unsetValue() { m_ValueIsSet = false; }
PresenceInfo AmfUpdateEventSubscriptionItem::getPresenceInfo() const {
  return m_PresenceInfo;
}
void AmfUpdateEventSubscriptionItem::setPresenceInfo(
    PresenceInfo const &value) {
  m_PresenceInfo = value;
  m_PresenceInfoIsSet = true;
}
bool AmfUpdateEventSubscriptionItem::presenceInfoIsSet() const {
  return m_PresenceInfoIsSet;
}
void AmfUpdateEventSubscriptionItem::unsetPresenceInfo() {
  m_PresenceInfoIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
