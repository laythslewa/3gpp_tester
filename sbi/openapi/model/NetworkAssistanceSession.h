/**
 * M5_NetworkAssistance
 * 5GMS AF M5 Network Assistance API Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NetworkAssistanceSession.h
 *
 *
 */

#ifndef NetworkAssistanceSession_H_
#define NetworkAssistanceSession_H_

#include "M5QoSSpecification.h"
#include "ServiceDataFlowDescription.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class NetworkAssistanceSession {
public:
  NetworkAssistanceSession();
  virtual ~NetworkAssistanceSession();

  void validate();

  /////////////////////////////////////////////
  /// NetworkAssistanceSession members

  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getNaSessionId() const;
  void setNaSessionId(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::vector<ServiceDataFlowDescription> &getServiceDataFlowDescription();
  void setServiceDataFlowDescription(
      std::vector<ServiceDataFlowDescription> const &value);
  bool serviceDataFlowDescriptionIsSet() const;
  void unsetServiceDataFlowDescription();
  /// <summary>
  /// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
  /// </summary>
  std::string getPolicyTemplateId() const;
  void setPolicyTemplateId(std::string const &value);
  bool policyTemplateIdIsSet() const;
  void unsetPolicyTemplateId();
  /// <summary>
  ///
  /// </summary>
  M5QoSSpecification getRequestedQoS() const;
  void setRequestedQoS(M5QoSSpecification const &value);
  bool requestedQoSIsSet() const;
  void unsetRequestedQoS();
  /// <summary>
  ///
  /// </summary>
  M5QoSSpecification getRecommendedQoS() const;
  void setRecommendedQoS(M5QoSSpecification const &value);
  bool recommendedQoSIsSet() const;
  void unsetRecommendedQoS();
  /// <summary>
  /// Uniform Resource Locator, comforming with the URI Generic Syntax specified
  /// in IETF RFC 3986.
  /// </summary>
  std::string getNotficationURL() const;
  void setNotficationURL(std::string const &value);
  bool notficationURLIsSet() const;
  void unsetNotficationURL();

  friend void to_json(nlohmann::json &j, const NetworkAssistanceSession &o);
  friend void from_json(const nlohmann::json &j, NetworkAssistanceSession &o);

protected:
  std::string m_NaSessionId;

  std::vector<ServiceDataFlowDescription> m_ServiceDataFlowDescription;
  bool m_ServiceDataFlowDescriptionIsSet;
  std::string m_PolicyTemplateId;
  bool m_PolicyTemplateIdIsSet;
  M5QoSSpecification m_RequestedQoS;
  bool m_RequestedQoSIsSet;
  M5QoSSpecification m_RecommendedQoS;
  bool m_RecommendedQoSIsSet;
  std::string m_NotficationURL;
  bool m_NotficationURLIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NetworkAssistanceSession_H_ */
