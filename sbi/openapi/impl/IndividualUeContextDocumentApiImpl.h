/**
 * Namf_Communication
 * AMF Communication Service Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualUeContextDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_UE_CONTEXT_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_UE_CONTEXT_DOCUMENT_API_IMPL_H_

#include <memory>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <IndividualUeContextDocumentApi.h>

#include <pistache/optional.h>

#include "AssignEbiData.h"
#include "AssignEbiError.h"
#include "AssignedEbiData.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include "UEContextRelease.h"
#include "UeContextCancelRelocateData.h"
#include "UeContextCreateData.h"
#include "UeContextCreateError.h"
#include "UeContextCreatedData.h"
#include "UeContextRelocateData.h"
#include "UeContextRelocatedData.h"
#include "UeContextTransferReqData.h"
#include "UeContextTransferRspData.h"
#include "UeRegStatusUpdateReqData.h"
#include "UeRegStatusUpdateRspData.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualUeContextDocumentApiImpl
    : public org::openapitools::server::api::IndividualUeContextDocumentApi {
public:
  IndividualUeContextDocumentApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~IndividualUeContextDocumentApiImpl() {}

  void cancel_relocate_ue_context(const Pistache::Rest::Request &request,
                                  Pistache::Http::ResponseWriter &response);
  void create_ue_context(const Pistache::Rest::Request &request,
                         Pistache::Http::ResponseWriter &response);
  void e_bi_assignment(const std::string &ueContextId,
                       const AssignEbiData &assignEbiData,
                       Pistache::Http::ResponseWriter &response);
  void registration_status_update(
      const std::string &ueContextId,
      const UeRegStatusUpdateReqData &ueRegStatusUpdateReqData,
      Pistache::Http::ResponseWriter &response);
  void release_ue_context(const std::string &ueContextId,
                          const UEContextRelease &uEContextRelease,
                          Pistache::Http::ResponseWriter &response);
  void relocate_ue_context(const Pistache::Rest::Request &request,
                           Pistache::Http::ResponseWriter &response);
  void
  u_e_context_transfer(const std::string &ueContextId,
                       const UeContextTransferReqData &ueContextTransferReqData,
                       Pistache::Http::ResponseWriter &response);
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif