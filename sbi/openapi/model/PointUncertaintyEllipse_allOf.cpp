/**
 * LMF Location
 * LMF Location Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PointUncertaintyEllipse_allOf.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PointUncertaintyEllipse_allOf::PointUncertaintyEllipse_allOf() {
  m_Confidence = 0;
}

PointUncertaintyEllipse_allOf::~PointUncertaintyEllipse_allOf() {}

void PointUncertaintyEllipse_allOf::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PointUncertaintyEllipse_allOf &o) {
  j = nlohmann::json();
  j["point"] = o.m_Point;
  j["uncertaintyEllipse"] = o.m_UncertaintyEllipse;
  j["confidence"] = o.m_Confidence;
}

void from_json(const nlohmann::json &j, PointUncertaintyEllipse_allOf &o) {
  j.at("point").get_to(o.m_Point);
  j.at("uncertaintyEllipse").get_to(o.m_UncertaintyEllipse);
  j.at("confidence").get_to(o.m_Confidence);
}

GeographicalCoordinates PointUncertaintyEllipse_allOf::getPoint() const {
  return m_Point;
}
void PointUncertaintyEllipse_allOf::setPoint(
    GeographicalCoordinates const &value) {
  m_Point = value;
}
UncertaintyEllipse
PointUncertaintyEllipse_allOf::getUncertaintyEllipse() const {
  return m_UncertaintyEllipse;
}
void PointUncertaintyEllipse_allOf::setUncertaintyEllipse(
    UncertaintyEllipse const &value) {
  m_UncertaintyEllipse = value;
}
int32_t PointUncertaintyEllipse_allOf::getConfidence() const {
  return m_Confidence;
}
void PointUncertaintyEllipse_allOf::setConfidence(int32_t const value) {
  m_Confidence = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
