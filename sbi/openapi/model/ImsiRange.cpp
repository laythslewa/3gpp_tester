/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ImsiRange.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ImsiRange::ImsiRange() {
  m_Start = "";
  m_StartIsSet = false;
  m_End = "";
  m_EndIsSet = false;
  m_Pattern = "";
  m_PatternIsSet = false;
}

ImsiRange::~ImsiRange() {}

void ImsiRange::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ImsiRange &o) {
  j = nlohmann::json();
  if (o.startIsSet())
    j["start"] = o.m_Start;
  if (o.endIsSet())
    j["end"] = o.m_End;
  if (o.patternIsSet())
    j["pattern"] = o.m_Pattern;
}

void from_json(const nlohmann::json &j, ImsiRange &o) {
  if (j.find("start") != j.end()) {
    j.at("start").get_to(o.m_Start);
    o.m_StartIsSet = true;
  }
  if (j.find("end") != j.end()) {
    j.at("end").get_to(o.m_End);
    o.m_EndIsSet = true;
  }
  if (j.find("pattern") != j.end()) {
    j.at("pattern").get_to(o.m_Pattern);
    o.m_PatternIsSet = true;
  }
}

std::string ImsiRange::getStart() const { return m_Start; }
void ImsiRange::setStart(std::string const &value) {
  m_Start = value;
  m_StartIsSet = true;
}
bool ImsiRange::startIsSet() const { return m_StartIsSet; }
void ImsiRange::unsetStart() { m_StartIsSet = false; }
std::string ImsiRange::getEnd() const { return m_End; }
void ImsiRange::setEnd(std::string const &value) {
  m_End = value;
  m_EndIsSet = true;
}
bool ImsiRange::endIsSet() const { return m_EndIsSet; }
void ImsiRange::unsetEnd() { m_EndIsSet = false; }
std::string ImsiRange::getPattern() const { return m_Pattern; }
void ImsiRange::setPattern(std::string const &value) {
  m_Pattern = value;
  m_PatternIsSet = true;
}
bool ImsiRange::patternIsSet() const { return m_PatternIsSet; }
void ImsiRange::unsetPattern() { m_PatternIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
