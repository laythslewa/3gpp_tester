/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RefToBinaryDataRm.h
 *
 * This data type is defined in the same way as the \&quot; RefToBinaryData
 * \&quot; data type, but with the OpenAPI \&quot;nullable&#x3D; true\&quot;
 * property.
 */

#ifndef RefToBinaryDataRm_H_
#define RefToBinaryDataRm_H_

#include "NullValue.h"
#include "RefToBinaryData.h"
#include <nlohmann/json.hpp>
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// This data type is defined in the same way as the \&quot; RefToBinaryData
/// \&quot; data type, but with the OpenAPI \&quot;nullable&#x3D; true\&quot;
/// property.
/// </summary>
class RefToBinaryDataRm {
public:
  RefToBinaryDataRm();
  virtual ~RefToBinaryDataRm();

  void validate();

  /////////////////////////////////////////////
  /// RefToBinaryDataRm members

  /// <summary>
  /// This IE shall contain the value of the Content-ID header of the referenced
  /// binary body part.
  /// </summary>
  std::string getContentId() const;
  void setContentId(std::string const &value);

  friend void to_json(nlohmann::json &j, const RefToBinaryDataRm &o);
  friend void from_json(const nlohmann::json &j, RefToBinaryDataRm &o);

protected:
  std::string m_ContentId;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* RefToBinaryDataRm_H_ */
