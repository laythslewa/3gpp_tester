/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "MmeCapabilities.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

MmeCapabilities::MmeCapabilities() {
  m_NonIpSupported = false;
  m_NonIpSupportedIsSet = false;
  m_EthernetSupported = false;
  m_EthernetSupportedIsSet = false;
}

MmeCapabilities::~MmeCapabilities() {}

void MmeCapabilities::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const MmeCapabilities &o) {
  j = nlohmann::json();
  if (o.nonIpSupportedIsSet())
    j["nonIpSupported"] = o.m_NonIpSupported;
  if (o.ethernetSupportedIsSet())
    j["ethernetSupported"] = o.m_EthernetSupported;
}

void from_json(const nlohmann::json &j, MmeCapabilities &o) {
  if (j.find("nonIpSupported") != j.end()) {
    j.at("nonIpSupported").get_to(o.m_NonIpSupported);
    o.m_NonIpSupportedIsSet = true;
  }
  if (j.find("ethernetSupported") != j.end()) {
    j.at("ethernetSupported").get_to(o.m_EthernetSupported);
    o.m_EthernetSupportedIsSet = true;
  }
}

bool MmeCapabilities::isNonIpSupported() const { return m_NonIpSupported; }
void MmeCapabilities::setNonIpSupported(bool const value) {
  m_NonIpSupported = value;
  m_NonIpSupportedIsSet = true;
}
bool MmeCapabilities::nonIpSupportedIsSet() const {
  return m_NonIpSupportedIsSet;
}
void MmeCapabilities::unsetNonIpSupported() { m_NonIpSupportedIsSet = false; }
bool MmeCapabilities::isEthernetSupported() const {
  return m_EthernetSupported;
}
void MmeCapabilities::setEthernetSupported(bool const value) {
  m_EthernetSupported = value;
  m_EthernetSupportedIsSet = true;
}
bool MmeCapabilities::ethernetSupportedIsSet() const {
  return m_EthernetSupportedIsSet;
}
void MmeCapabilities::unsetEthernetSupported() {
  m_EthernetSupportedIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
