/**
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data). The API version is
 * defined in 3GPP TS 29.504. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: -
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IpSmGwRegistration.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

IpSmGwRegistration::IpSmGwRegistration() {
  m_IpSmGwMapAddress = "";
  m_IpSmGwMapAddressIsSet = false;
  m_IpSmGwDiameterAddressIsSet = false;
  m_UnriIndicator = false;
  m_UnriIndicatorIsSet = false;
}

IpSmGwRegistration::~IpSmGwRegistration() {}

void IpSmGwRegistration::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const IpSmGwRegistration &o) {
  j = nlohmann::json();
  if (o.ipSmGwMapAddressIsSet())
    j["ipSmGwMapAddress"] = o.m_IpSmGwMapAddress;
  if (o.ipSmGwDiameterAddressIsSet())
    j["ipSmGwDiameterAddress"] = o.m_IpSmGwDiameterAddress;
  if (o.unriIndicatorIsSet())
    j["unriIndicator"] = o.m_UnriIndicator;
}

void from_json(const nlohmann::json &j, IpSmGwRegistration &o) {
  if (j.find("ipSmGwMapAddress") != j.end()) {
    j.at("ipSmGwMapAddress").get_to(o.m_IpSmGwMapAddress);
    o.m_IpSmGwMapAddressIsSet = true;
  }
  if (j.find("ipSmGwDiameterAddress") != j.end()) {
    j.at("ipSmGwDiameterAddress").get_to(o.m_IpSmGwDiameterAddress);
    o.m_IpSmGwDiameterAddressIsSet = true;
  }
  if (j.find("unriIndicator") != j.end()) {
    j.at("unriIndicator").get_to(o.m_UnriIndicator);
    o.m_UnriIndicatorIsSet = true;
  }
}

std::string IpSmGwRegistration::getIpSmGwMapAddress() const {
  return m_IpSmGwMapAddress;
}
void IpSmGwRegistration::setIpSmGwMapAddress(std::string const &value) {
  m_IpSmGwMapAddress = value;
  m_IpSmGwMapAddressIsSet = true;
}
bool IpSmGwRegistration::ipSmGwMapAddressIsSet() const {
  return m_IpSmGwMapAddressIsSet;
}
void IpSmGwRegistration::unsetIpSmGwMapAddress() {
  m_IpSmGwMapAddressIsSet = false;
}
NetworkNodeDiameterAddress
IpSmGwRegistration::getIpSmGwDiameterAddress() const {
  return m_IpSmGwDiameterAddress;
}
void IpSmGwRegistration::setIpSmGwDiameterAddress(
    NetworkNodeDiameterAddress const &value) {
  m_IpSmGwDiameterAddress = value;
  m_IpSmGwDiameterAddressIsSet = true;
}
bool IpSmGwRegistration::ipSmGwDiameterAddressIsSet() const {
  return m_IpSmGwDiameterAddressIsSet;
}
void IpSmGwRegistration::unsetIpSmGwDiameterAddress() {
  m_IpSmGwDiameterAddressIsSet = false;
}
bool IpSmGwRegistration::isUnriIndicator() const { return m_UnriIndicator; }
void IpSmGwRegistration::setUnriIndicator(bool const value) {
  m_UnriIndicator = value;
  m_UnriIndicatorIsSet = true;
}
bool IpSmGwRegistration::unriIndicatorIsSet() const {
  return m_UnriIndicatorIsSet;
}
void IpSmGwRegistration::unsetUnriIndicator() { m_UnriIndicatorIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
