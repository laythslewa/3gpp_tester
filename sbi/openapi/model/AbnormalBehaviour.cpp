/**
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AbnormalBehaviour.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

AbnormalBehaviour::AbnormalBehaviour() {
  m_SupisIsSet = false;
  m_Dnn = "";
  m_DnnIsSet = false;
  m_SnssaiIsSet = false;
  m_Ratio = 0;
  m_RatioIsSet = false;
  m_Confidence = 0;
  m_ConfidenceIsSet = false;
  m_AddtMeasInfoIsSet = false;
}

AbnormalBehaviour::~AbnormalBehaviour() {}

void AbnormalBehaviour::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const AbnormalBehaviour &o) {
  j = nlohmann::json();
  if (o.supisIsSet() || !o.m_Supis.empty())
    j["supis"] = o.m_Supis;
  j["excep"] = o.m_Excep;
  if (o.dnnIsSet())
    j["dnn"] = o.m_Dnn;
  if (o.snssaiIsSet())
    j["snssai"] = o.m_Snssai;
  if (o.ratioIsSet())
    j["ratio"] = o.m_Ratio;
  if (o.confidenceIsSet())
    j["confidence"] = o.m_Confidence;
  if (o.addtMeasInfoIsSet())
    j["addtMeasInfo"] = o.m_AddtMeasInfo;
}

void from_json(const nlohmann::json &j, AbnormalBehaviour &o) {
  if (j.find("supis") != j.end()) {
    j.at("supis").get_to(o.m_Supis);
    o.m_SupisIsSet = true;
  }
  j.at("excep").get_to(o.m_Excep);
  if (j.find("dnn") != j.end()) {
    j.at("dnn").get_to(o.m_Dnn);
    o.m_DnnIsSet = true;
  }
  if (j.find("snssai") != j.end()) {
    j.at("snssai").get_to(o.m_Snssai);
    o.m_SnssaiIsSet = true;
  }
  if (j.find("ratio") != j.end()) {
    j.at("ratio").get_to(o.m_Ratio);
    o.m_RatioIsSet = true;
  }
  if (j.find("confidence") != j.end()) {
    j.at("confidence").get_to(o.m_Confidence);
    o.m_ConfidenceIsSet = true;
  }
  if (j.find("addtMeasInfo") != j.end()) {
    j.at("addtMeasInfo").get_to(o.m_AddtMeasInfo);
    o.m_AddtMeasInfoIsSet = true;
  }
}

std::vector<std::string> &AbnormalBehaviour::getSupis() { return m_Supis; }
void AbnormalBehaviour::setSupis(std::vector<std::string> const &value) {
  m_Supis = value;
  m_SupisIsSet = true;
}
bool AbnormalBehaviour::supisIsSet() const { return m_SupisIsSet; }
void AbnormalBehaviour::unsetSupis() { m_SupisIsSet = false; }
Exception AbnormalBehaviour::getExcep() const { return m_Excep; }
void AbnormalBehaviour::setExcep(Exception const &value) { m_Excep = value; }
std::string AbnormalBehaviour::getDnn() const { return m_Dnn; }
void AbnormalBehaviour::setDnn(std::string const &value) {
  m_Dnn = value;
  m_DnnIsSet = true;
}
bool AbnormalBehaviour::dnnIsSet() const { return m_DnnIsSet; }
void AbnormalBehaviour::unsetDnn() { m_DnnIsSet = false; }
Snssai AbnormalBehaviour::getSnssai() const { return m_Snssai; }
void AbnormalBehaviour::setSnssai(Snssai const &value) {
  m_Snssai = value;
  m_SnssaiIsSet = true;
}
bool AbnormalBehaviour::snssaiIsSet() const { return m_SnssaiIsSet; }
void AbnormalBehaviour::unsetSnssai() { m_SnssaiIsSet = false; }
int32_t AbnormalBehaviour::getRatio() const { return m_Ratio; }
void AbnormalBehaviour::setRatio(int32_t const value) {
  m_Ratio = value;
  m_RatioIsSet = true;
}
bool AbnormalBehaviour::ratioIsSet() const { return m_RatioIsSet; }
void AbnormalBehaviour::unsetRatio() { m_RatioIsSet = false; }
int32_t AbnormalBehaviour::getConfidence() const { return m_Confidence; }
void AbnormalBehaviour::setConfidence(int32_t const value) {
  m_Confidence = value;
  m_ConfidenceIsSet = true;
}
bool AbnormalBehaviour::confidenceIsSet() const { return m_ConfidenceIsSet; }
void AbnormalBehaviour::unsetConfidence() { m_ConfidenceIsSet = false; }
AdditionalMeasurement AbnormalBehaviour::getAddtMeasInfo() const {
  return m_AddtMeasInfo;
}
void AbnormalBehaviour::setAddtMeasInfo(AdditionalMeasurement const &value) {
  m_AddtMeasInfo = value;
  m_AddtMeasInfoIsSet = true;
}
bool AbnormalBehaviour::addtMeasInfoIsSet() const {
  return m_AddtMeasInfoIsSet;
}
void AbnormalBehaviour::unsetAddtMeasInfo() { m_AddtMeasInfoIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
