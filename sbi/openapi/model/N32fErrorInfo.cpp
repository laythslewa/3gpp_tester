/**
 * N32 Handshake API
 * N32-c Handshake Service.  Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC).  All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "N32fErrorInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

N32fErrorInfo::N32fErrorInfo() {
  m_N32fMessageId = "";
  m_FailedModificationListIsSet = false;
  m_ErrorDetailsListIsSet = false;
}

N32fErrorInfo::~N32fErrorInfo() {}

void N32fErrorInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const N32fErrorInfo &o) {
  j = nlohmann::json();
  j["n32fMessageId"] = o.m_N32fMessageId;
  j["n32fErrorType"] = o.m_N32fErrorType;
  if (o.failedModificationListIsSet() || !o.m_FailedModificationList.empty())
    j["failedModificationList"] = o.m_FailedModificationList;
  if (o.errorDetailsListIsSet() || !o.m_ErrorDetailsList.empty())
    j["errorDetailsList"] = o.m_ErrorDetailsList;
}

void from_json(const nlohmann::json &j, N32fErrorInfo &o) {
  j.at("n32fMessageId").get_to(o.m_N32fMessageId);
  j.at("n32fErrorType").get_to(o.m_N32fErrorType);
  if (j.find("failedModificationList") != j.end()) {
    j.at("failedModificationList").get_to(o.m_FailedModificationList);
    o.m_FailedModificationListIsSet = true;
  }
  if (j.find("errorDetailsList") != j.end()) {
    j.at("errorDetailsList").get_to(o.m_ErrorDetailsList);
    o.m_ErrorDetailsListIsSet = true;
  }
}

std::string N32fErrorInfo::getN32fMessageId() const { return m_N32fMessageId; }
void N32fErrorInfo::setN32fMessageId(std::string const &value) {
  m_N32fMessageId = value;
}
N32fErrorType N32fErrorInfo::getN32fErrorType() const {
  return m_N32fErrorType;
}
void N32fErrorInfo::setN32fErrorType(N32fErrorType const &value) {
  m_N32fErrorType = value;
}
std::vector<FailedModificationInfo> &
N32fErrorInfo::getFailedModificationList() {
  return m_FailedModificationList;
}
void N32fErrorInfo::setFailedModificationList(
    std::vector<FailedModificationInfo> const &value) {
  m_FailedModificationList = value;
  m_FailedModificationListIsSet = true;
}
bool N32fErrorInfo::failedModificationListIsSet() const {
  return m_FailedModificationListIsSet;
}
void N32fErrorInfo::unsetFailedModificationList() {
  m_FailedModificationListIsSet = false;
}
std::vector<N32fErrorDetail> &N32fErrorInfo::getErrorDetailsList() {
  return m_ErrorDetailsList;
}
void N32fErrorInfo::setErrorDetailsList(
    std::vector<N32fErrorDetail> const &value) {
  m_ErrorDetailsList = value;
  m_ErrorDetailsListIsSet = true;
}
bool N32fErrorInfo::errorDetailsListIsSet() const {
  return m_ErrorDetailsListIsSet;
}
void N32fErrorInfo::unsetErrorDetailsList() { m_ErrorDetailsListIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
