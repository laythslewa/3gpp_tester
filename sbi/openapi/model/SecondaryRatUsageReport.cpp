/**
 * Common Data Types
 * Common Data Types for Service Based Interfaces. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.3.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "SecondaryRatUsageReport.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

SecondaryRatUsageReport::SecondaryRatUsageReport() {}

SecondaryRatUsageReport::~SecondaryRatUsageReport() {}

void SecondaryRatUsageReport::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const SecondaryRatUsageReport &o) {
  j = nlohmann::json();
  j["secondaryRatType"] = o.m_SecondaryRatType;
  j["qosFlowsUsageData"] = o.m_QosFlowsUsageData;
}

void from_json(const nlohmann::json &j, SecondaryRatUsageReport &o) {
  j.at("secondaryRatType").get_to(o.m_SecondaryRatType);
  j.at("qosFlowsUsageData").get_to(o.m_QosFlowsUsageData);
}

RatType SecondaryRatUsageReport::getSecondaryRatType() const {
  return m_SecondaryRatType;
}
void SecondaryRatUsageReport::setSecondaryRatType(RatType const &value) {
  m_SecondaryRatType = value;
}
std::vector<QosFlowUsageReport> &
SecondaryRatUsageReport::getQosFlowsUsageData() {
  return m_QosFlowsUsageData;
}
void SecondaryRatUsageReport::setQosFlowsUsageData(
    std::vector<QosFlowUsageReport> const &value) {
  m_QosFlowsUsageData = value;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
