/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ChargingInfo.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ChargingInfo::ChargingInfo() {
  m_PrimaryEventChargingFunctionName = "";
  m_PrimaryEventChargingFunctionNameIsSet = false;
  m_SecondaryEventChargingFunctionName = "";
  m_SecondaryEventChargingFunctionNameIsSet = false;
  m_PrimaryChargingCollectionFunctionName = "";
  m_PrimaryChargingCollectionFunctionNameIsSet = false;
  m_SecondaryChargingCollectionFunctionName = "";
  m_SecondaryChargingCollectionFunctionNameIsSet = false;
}

ChargingInfo::~ChargingInfo() {}

void ChargingInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ChargingInfo &o) {
  j = nlohmann::json();
  if (o.primaryEventChargingFunctionNameIsSet())
    j["primaryEventChargingFunctionName"] =
        o.m_PrimaryEventChargingFunctionName;
  if (o.secondaryEventChargingFunctionNameIsSet())
    j["secondaryEventChargingFunctionName"] =
        o.m_SecondaryEventChargingFunctionName;
  if (o.primaryChargingCollectionFunctionNameIsSet())
    j["primaryChargingCollectionFunctionName"] =
        o.m_PrimaryChargingCollectionFunctionName;
  if (o.secondaryChargingCollectionFunctionNameIsSet())
    j["secondaryChargingCollectionFunctionName"] =
        o.m_SecondaryChargingCollectionFunctionName;
}

void from_json(const nlohmann::json &j, ChargingInfo &o) {
  if (j.find("primaryEventChargingFunctionName") != j.end()) {
    j.at("primaryEventChargingFunctionName")
        .get_to(o.m_PrimaryEventChargingFunctionName);
    o.m_PrimaryEventChargingFunctionNameIsSet = true;
  }
  if (j.find("secondaryEventChargingFunctionName") != j.end()) {
    j.at("secondaryEventChargingFunctionName")
        .get_to(o.m_SecondaryEventChargingFunctionName);
    o.m_SecondaryEventChargingFunctionNameIsSet = true;
  }
  if (j.find("primaryChargingCollectionFunctionName") != j.end()) {
    j.at("primaryChargingCollectionFunctionName")
        .get_to(o.m_PrimaryChargingCollectionFunctionName);
    o.m_PrimaryChargingCollectionFunctionNameIsSet = true;
  }
  if (j.find("secondaryChargingCollectionFunctionName") != j.end()) {
    j.at("secondaryChargingCollectionFunctionName")
        .get_to(o.m_SecondaryChargingCollectionFunctionName);
    o.m_SecondaryChargingCollectionFunctionNameIsSet = true;
  }
}

std::string ChargingInfo::getPrimaryEventChargingFunctionName() const {
  return m_PrimaryEventChargingFunctionName;
}
void ChargingInfo::setPrimaryEventChargingFunctionName(
    std::string const &value) {
  m_PrimaryEventChargingFunctionName = value;
  m_PrimaryEventChargingFunctionNameIsSet = true;
}
bool ChargingInfo::primaryEventChargingFunctionNameIsSet() const {
  return m_PrimaryEventChargingFunctionNameIsSet;
}
void ChargingInfo::unsetPrimaryEventChargingFunctionName() {
  m_PrimaryEventChargingFunctionNameIsSet = false;
}
std::string ChargingInfo::getSecondaryEventChargingFunctionName() const {
  return m_SecondaryEventChargingFunctionName;
}
void ChargingInfo::setSecondaryEventChargingFunctionName(
    std::string const &value) {
  m_SecondaryEventChargingFunctionName = value;
  m_SecondaryEventChargingFunctionNameIsSet = true;
}
bool ChargingInfo::secondaryEventChargingFunctionNameIsSet() const {
  return m_SecondaryEventChargingFunctionNameIsSet;
}
void ChargingInfo::unsetSecondaryEventChargingFunctionName() {
  m_SecondaryEventChargingFunctionNameIsSet = false;
}
std::string ChargingInfo::getPrimaryChargingCollectionFunctionName() const {
  return m_PrimaryChargingCollectionFunctionName;
}
void ChargingInfo::setPrimaryChargingCollectionFunctionName(
    std::string const &value) {
  m_PrimaryChargingCollectionFunctionName = value;
  m_PrimaryChargingCollectionFunctionNameIsSet = true;
}
bool ChargingInfo::primaryChargingCollectionFunctionNameIsSet() const {
  return m_PrimaryChargingCollectionFunctionNameIsSet;
}
void ChargingInfo::unsetPrimaryChargingCollectionFunctionName() {
  m_PrimaryChargingCollectionFunctionNameIsSet = false;
}
std::string ChargingInfo::getSecondaryChargingCollectionFunctionName() const {
  return m_SecondaryChargingCollectionFunctionName;
}
void ChargingInfo::setSecondaryChargingCollectionFunctionName(
    std::string const &value) {
  m_SecondaryChargingCollectionFunctionName = value;
  m_SecondaryChargingCollectionFunctionNameIsSet = true;
}
bool ChargingInfo::secondaryChargingCollectionFunctionNameIsSet() const {
  return m_SecondaryChargingCollectionFunctionNameIsSet;
}
void ChargingInfo::unsetSecondaryChargingCollectionFunctionName() {
  m_SecondaryChargingCollectionFunctionNameIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
