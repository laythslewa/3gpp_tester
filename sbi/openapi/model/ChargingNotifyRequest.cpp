/**
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 3.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ChargingNotifyRequest.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ChargingNotifyRequest::ChargingNotifyRequest() {
  m_ReauthorizationDetailsIsSet = false;
}

ChargingNotifyRequest::~ChargingNotifyRequest() {}

void ChargingNotifyRequest::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ChargingNotifyRequest &o) {
  j = nlohmann::json();
  j["notificationType"] = o.m_NotificationType;
  if (o.reauthorizationDetailsIsSet() || !o.m_ReauthorizationDetails.empty())
    j["reauthorizationDetails"] = o.m_ReauthorizationDetails;
}

void from_json(const nlohmann::json &j, ChargingNotifyRequest &o) {
  j.at("notificationType").get_to(o.m_NotificationType);
  if (j.find("reauthorizationDetails") != j.end()) {
    j.at("reauthorizationDetails").get_to(o.m_ReauthorizationDetails);
    o.m_ReauthorizationDetailsIsSet = true;
  }
}

NotificationType ChargingNotifyRequest::getNotificationType() const {
  return m_NotificationType;
}
void ChargingNotifyRequest::setNotificationType(NotificationType const &value) {
  m_NotificationType = value;
}
std::vector<ReauthorizationDetails> &
ChargingNotifyRequest::getReauthorizationDetails() {
  return m_ReauthorizationDetails;
}
void ChargingNotifyRequest::setReauthorizationDetails(
    std::vector<ReauthorizationDetails> const &value) {
  m_ReauthorizationDetails = value;
  m_ReauthorizationDetailsIsSet = true;
}
bool ChargingNotifyRequest::reauthorizationDetailsIsSet() const {
  return m_ReauthorizationDetailsIsSet;
}
void ChargingNotifyRequest::unsetReauthorizationDetails() {
  m_ReauthorizationDetailsIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
