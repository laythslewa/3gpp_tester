/**
 * Nsmf_EventExposure
 * Session Management Event Exposure Service. Â© 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NsmfEventExposureNotification.h
 *
 * Represents notifications on events that occurred.
 */

#ifndef NsmfEventExposureNotification_H_
#define NsmfEventExposureNotification_H_

#include "EventNotification.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents notifications on events that occurred.
/// </summary>
class NsmfEventExposureNotification {
public:
  NsmfEventExposureNotification();
  virtual ~NsmfEventExposureNotification();

  void validate();

  /////////////////////////////////////////////
  /// NsmfEventExposureNotification members

  /// <summary>
  /// Notification correlation ID
  /// </summary>
  std::string getNotifId() const;
  void setNotifId(std::string const &value);
  /// <summary>
  /// Notifications about Individual Events
  /// </summary>
  std::vector<EventNotification> &getEventNotifs();
  void setEventNotifs(std::vector<EventNotification> const &value);
  /// <summary>
  /// String providing an URI formatted according to RFC 3986
  /// </summary>
  std::string getAckUri() const;
  void setAckUri(std::string const &value);
  bool ackUriIsSet() const;
  void unsetAckUri();

  friend void to_json(nlohmann::json &j,
                      const NsmfEventExposureNotification &o);
  friend void from_json(const nlohmann::json &j,
                        NsmfEventExposureNotification &o);

protected:
  std::string m_NotifId;

  std::vector<EventNotification> m_EventNotifs;

  std::string m_AckUri;
  bool m_AckUriIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* NsmfEventExposureNotification_H_ */
