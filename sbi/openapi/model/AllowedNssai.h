/**
 * NSSF NS Selection
 * NSSF Network Slice Selection Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AllowedNssai.h
 *
 * Contains an array of allowed S-NSSAI that constitute the allowed NSSAI
 * information for the authorized network slice information
 */

#ifndef AllowedNssai_H_
#define AllowedNssai_H_

#include "AccessType.h"
#include "AllowedSnssai.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains an array of allowed S-NSSAI that constitute the allowed NSSAI
/// information for the authorized network slice information
/// </summary>
class AllowedNssai {
public:
  AllowedNssai();
  virtual ~AllowedNssai();

  void validate();

  /////////////////////////////////////////////
  /// AllowedNssai members

  /// <summary>
  ///
  /// </summary>
  std::vector<AllowedSnssai> &getAllowedSnssaiList();
  void setAllowedSnssaiList(std::vector<AllowedSnssai> const &value);
  /// <summary>
  ///
  /// </summary>
  AccessType getAccessType() const;
  void setAccessType(AccessType const &value);

  friend void to_json(nlohmann::json &j, const AllowedNssai &o);
  friend void from_json(const nlohmann::json &j, AllowedNssai &o);

protected:
  std::vector<AllowedSnssai> m_AllowedSnssaiList;

  AccessType m_AccessType;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* AllowedNssai_H_ */
