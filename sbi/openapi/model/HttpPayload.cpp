/**
 * JOSE Protected Message Forwarding API
 * N32-f Message Forwarding Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "HttpPayload.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

HttpPayload::HttpPayload() { m_IePath = ""; }

HttpPayload::~HttpPayload() {}

void HttpPayload::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const HttpPayload &o) {
  j = nlohmann::json();
  j["iePath"] = o.m_IePath;
  j["ieValueLocation"] = o.m_IeValueLocation;
  j["value"] = o.m_Value;
}

void from_json(const nlohmann::json &j, HttpPayload &o) {
  j.at("iePath").get_to(o.m_IePath);
  j.at("ieValueLocation").get_to(o.m_IeValueLocation);
  j.at("value").get_to(o.m_Value);
}

std::string HttpPayload::getIePath() const { return m_IePath; }
void HttpPayload::setIePath(std::string const &value) { m_IePath = value; }
IeLocation HttpPayload::getIeValueLocation() const { return m_IeValueLocation; }
void HttpPayload::setIeValueLocation(IeLocation const &value) {
  m_IeValueLocation = value;
}
Object HttpPayload::getValue() const { return m_Value; }
void HttpPayload::setValue(Object const &value) { m_Value = value; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
