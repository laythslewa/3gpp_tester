/**
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS. © 2021, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ImsProfileData.h
 *
 *
 */

#ifndef ImsProfileData_H_
#define ImsProfileData_H_

#include "ChargingInfo.h"
#include "ImsServiceProfile.h"
#include "ServiceLevelTraceInformation.h"
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class ImsProfileData {
public:
  ImsProfileData();
  virtual ~ImsProfileData();

  void validate();

  /////////////////////////////////////////////
  /// ImsProfileData members

  /// <summary>
  ///
  /// </summary>
  std::vector<ImsServiceProfile> &getImsServiceProfiles();
  void setImsServiceProfiles(std::vector<ImsServiceProfile> const &value);
  /// <summary>
  ///
  /// </summary>
  ChargingInfo getChargingInfo() const;
  void setChargingInfo(ChargingInfo const &value);
  bool chargingInfoIsSet() const;
  void unsetChargingInfo();
  /// <summary>
  ///
  /// </summary>
  ServiceLevelTraceInformation getServiceLevelTraceInfo() const;
  void setServiceLevelTraceInfo(ServiceLevelTraceInformation const &value);
  bool serviceLevelTraceInfoIsSet() const;
  void unsetServiceLevelTraceInfo();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getServicePriorityLevelList();
  void setServicePriorityLevelList(std::vector<std::string> const &value);
  bool servicePriorityLevelListIsSet() const;
  void unsetServicePriorityLevelList();
  /// <summary>
  /// A string used to indicate the features supported by an API that is used as
  /// defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a
  /// bitmask indicating supported features in hexadecimal representation Each
  /// character in the string shall take a value of \&quot;0\&quot; to
  /// \&quot;9\&quot;, \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to
  /// \&quot;F\&quot; and shall represent the support of 4 features as described
  /// in table 5.2.2-3. The most significant character representing the
  /// highest-numbered features shall appear first in the string, and the
  /// character representing features 1 to 4 shall appear last in the string.
  /// The list of features and their numbering (starting with 1) are defined
  /// separately for each API. If the string contains a lower number of
  /// characters than there are defined features for an API, all features that
  /// would be represented by characters that are not present in the string are
  /// not supported
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const &value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();
  /// <summary>
  ///
  /// </summary>
  int32_t getMaxAllowedSimulReg() const;
  void setMaxAllowedSimulReg(int32_t const value);
  bool maxAllowedSimulRegIsSet() const;
  void unsetMaxAllowedSimulReg();

  friend void to_json(nlohmann::json &j, const ImsProfileData &o);
  friend void from_json(const nlohmann::json &j, ImsProfileData &o);

protected:
  std::vector<ImsServiceProfile> m_ImsServiceProfiles;

  ChargingInfo m_ChargingInfo;
  bool m_ChargingInfoIsSet;
  ServiceLevelTraceInformation m_ServiceLevelTraceInfo;
  bool m_ServiceLevelTraceInfoIsSet;
  std::vector<std::string> m_ServicePriorityLevelList;
  bool m_ServicePriorityLevelListIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
  int32_t m_MaxAllowedSimulReg;
  bool m_MaxAllowedSimulRegIsSet;
};

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* ImsProfileData_H_ */
