/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "DdnFailureSubs.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

DdnFailureSubs::DdnFailureSubs() {
  m_DdnFailureSubsInd = false;
  m_DdnFailureSubsIndIsSet = false;
  m_DdnFailureSubsInfoListIsSet = false;
}

DdnFailureSubs::~DdnFailureSubs() {}

void DdnFailureSubs::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const DdnFailureSubs &o) {
  j = nlohmann::json();
  if (o.ddnFailureSubsIndIsSet())
    j["ddnFailureSubsInd"] = o.m_DdnFailureSubsInd;
  if (o.ddnFailureSubsInfoListIsSet() || !o.m_DdnFailureSubsInfoList.empty())
    j["ddnFailureSubsInfoList"] = o.m_DdnFailureSubsInfoList;
}

void from_json(const nlohmann::json &j, DdnFailureSubs &o) {
  if (j.find("ddnFailureSubsInd") != j.end()) {
    j.at("ddnFailureSubsInd").get_to(o.m_DdnFailureSubsInd);
    o.m_DdnFailureSubsIndIsSet = true;
  }
  if (j.find("ddnFailureSubsInfoList") != j.end()) {
    j.at("ddnFailureSubsInfoList").get_to(o.m_DdnFailureSubsInfoList);
    o.m_DdnFailureSubsInfoListIsSet = true;
  }
}

bool DdnFailureSubs::isDdnFailureSubsInd() const { return m_DdnFailureSubsInd; }
void DdnFailureSubs::setDdnFailureSubsInd(bool const value) {
  m_DdnFailureSubsInd = value;
  m_DdnFailureSubsIndIsSet = true;
}
bool DdnFailureSubs::ddnFailureSubsIndIsSet() const {
  return m_DdnFailureSubsIndIsSet;
}
void DdnFailureSubs::unsetDdnFailureSubsInd() {
  m_DdnFailureSubsIndIsSet = false;
}
std::vector<DdnFailureSubInfo> &DdnFailureSubs::getDdnFailureSubsInfoList() {
  return m_DdnFailureSubsInfoList;
}
void DdnFailureSubs::setDdnFailureSubsInfoList(
    std::vector<DdnFailureSubInfo> const &value) {
  m_DdnFailureSubsInfoList = value;
  m_DdnFailureSubsInfoListIsSet = true;
}
bool DdnFailureSubs::ddnFailureSubsInfoListIsSet() const {
  return m_DdnFailureSubsInfoListIsSet;
}
void DdnFailureSubs::unsetDdnFailureSubsInfoList() {
  m_DdnFailureSubsInfoListIsSet = false;
}

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
