/**
 * Nhss_EE
 * HSS Event Exposure Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "CreatedEeSubscription.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CreatedEeSubscription::CreatedEeSubscription() { m_EventReportsIsSet = false; }

CreatedEeSubscription::~CreatedEeSubscription() {}

void CreatedEeSubscription::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const CreatedEeSubscription &o) {
  j = nlohmann::json();
  j["eeSubscription"] = o.m_EeSubscription;
  if (o.eventReportsIsSet() || !o.m_EventReports.empty())
    j["eventReports"] = o.m_EventReports;
}

void from_json(const nlohmann::json &j, CreatedEeSubscription &o) {
  j.at("eeSubscription").get_to(o.m_EeSubscription);
  if (j.find("eventReports") != j.end()) {
    j.at("eventReports").get_to(o.m_EventReports);
    o.m_EventReportsIsSet = true;
  }
}

EeSubscription CreatedEeSubscription::getEeSubscription() const {
  return m_EeSubscription;
}
void CreatedEeSubscription::setEeSubscription(EeSubscription const &value) {
  m_EeSubscription = value;
}
std::vector<MonitoringReport> &CreatedEeSubscription::getEventReports() {
  return m_EventReports;
}
void CreatedEeSubscription::setEventReports(
    std::vector<MonitoringReport> const &value) {
  m_EventReports = value;
  m_EventReportsIsSet = true;
}
bool CreatedEeSubscription::eventReportsIsSet() const {
  return m_EventReportsIsSet;
}
void CreatedEeSubscription::unsetEventReports() { m_EventReportsIsSet = false; }

} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org
